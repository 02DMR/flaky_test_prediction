digraph PDG {
label = "shouldContainSyncCommitteeAggregates <3...16>";
0.1 [style = filled, label = "primaryNode.startEventListener(List.of(contribution_and_proof)); <5>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "secondaryNode.waitForFullSyncCommitteeAggregate(); <10>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertThat(secondaryNode.getContributionAndProofEvents().stream().filter(null).count()).isGreaterThan(0); <15>", fillcolor = deeppink, shape = ellipse];
0.12 [style = filled, label = "Enter <3...16>", fillcolor = aquamarine, shape = diamond];
0.3 [style = filled, label = "secondaryNode.startEventListener(List.of(contribution_and_proof)); <7>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertThat(primaryNode.getContributionAndProofEvents().stream().filter(null).count()).isGreaterThan(0); <14>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "validatorClient.stop(); <11>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "secondaryNode.stop(); <12>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "validatorClient.start(); <8>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "primaryNode.stop(); <13>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "primaryNode.start(); <4>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "secondaryNode.start(); <6>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "primaryNode.waitForEpoch(1); <9>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="primaryNode"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.5 [style = solid, label="primaryNode"];
0.0 -> 0.9 [style = solid, label="primaryNode"];
0.0 -> 0.10 [style = solid, label="primaryNode"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="primaryNode"];
0.1 -> 0.9 [style = solid, label="primaryNode"];
0.1 -> 0.10 [style = solid, label="primaryNode"];
0.2 -> 0.3 [style = solid, label="secondaryNode"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.6 [style = solid, label="secondaryNode"];
0.2 -> 0.8 [style = solid, label="secondaryNode"];
0.2 -> 0.11 [style = solid, label="secondaryNode"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.6 [style = solid, label="secondaryNode"];
0.3 -> 0.8 [style = solid, label="secondaryNode"];
0.3 -> 0.11 [style = solid, label="secondaryNode"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.7 [style = solid, label="validatorClient"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.9 [style = solid, label="primaryNode"];
0.5 -> 0.10 [style = solid, label="primaryNode"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="secondaryNode"];
0.6 -> 0.11 [style = solid, label="secondaryNode"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.11 [style = solid, label="secondaryNode"];
0.9 -> 0.10 [style = solid, label="primaryNode"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.12 -> 0.0 [style = dotted, label="true"];
0.12 -> 0.0 [style = bold, label=""];
0.12 -> 0.1 [style = dotted, label="true"];
0.12 -> 0.2 [style = dotted, label="true"];
0.12 -> 0.3 [style = dotted, label="true"];
0.12 -> 0.4 [style = dotted, label="true"];
0.12 -> 0.5 [style = dotted, label="true"];
0.12 -> 0.6 [style = dotted, label="true"];
0.12 -> 0.7 [style = dotted, label="true"];
0.12 -> 0.8 [style = dotted, label="true"];
0.12 -> 0.9 [style = dotted, label="true"];
0.12 -> 0.10 [style = dotted, label="true"];
0.12 -> 0.11 [style = dotted, label="true"];
}
