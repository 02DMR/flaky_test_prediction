digraph PDG {
label = "testRDFSpeedRegression <3...53>";
0.4 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.categorical-features\",\"[]\"); <8>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "String nodeID = fields.get(1).toString(); <26>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "overlayConfig.put(\"oryx.speed.streaming.generation-interval-sec\",10); <6>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "log.debug(\"{}\",update); <15>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.target-feature\",\"bar\"); <9>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Config config = ConfigUtils.overlayOn(overlayConfig,getConfig()); <10>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = " ( i < numUpdates ) <21>", fillcolor = white, shape = diamond];
0.45 [style = filled, label = "assertEquals(\"r-\",nodeID2); <50>", fillcolor = white, shape = ellipse];
0.37 [style = filled, label = "List<?> fields2 = MAPPER.readValue(update2.getSecond(),); <41>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "assertEquals(expectedNegativeMean(count),mean,0.1); <34>", fillcolor = white, shape = ellipse];
0.43 [style = filled, label = "if \"r-\".equals(nodeID1) <47>", fillcolor = white, shape = diamond];
0.21 [style = filled, label = "List<?> fields = MAPPER.readValue(update.getSecond(),); <24>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Pair<String,String> update = updates.get(i); <22>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "int i = 1 <37>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "assertEquals(expectedPositiveMean(count),mean,0.1); <32>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "List<?> fields1 = MAPPER.readValue(update1.getSecond(),); <40>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "if \"r+\".equals(nodeID) <31>", fillcolor = white, shape = diamond];
0.32 [style = filled, label = " ( i < numUpdates ) <37>", fillcolor = deeppink, shape = diamond];
0.42 [style = filled, label = "String nodeID2 = fields2.get(1).toString(); <46>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "int numUpdates = updates.size(); <18>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "assertTrue( ( \"r-\".equals(nodeID) || \"r+\".equals(nodeID) )); <30>", fillcolor = white, shape = ellipse];
0.40 [style = filled, label = "assertTrue( ( Math.abs( ( count1 - count2 )) <= 1 )); <44>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "startMessaging(); <11>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "double mean = ((Double)(fields.get(2))); <27>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "Pair<String,String> update2 = updates.get( ( i + 1 )); <39>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "overlayConfig.put(\"oryx.speed.model-manager-class\",.getName()); <5>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "assertEquals(0,treeID); <29>", fillcolor = white, shape = ellipse];
0.46 [style = filled, label = "Enter <3...53>", fillcolor = aquamarine, shape = diamond];
0.14 [style = filled, label = "assertTrue( ( ( ( numUpdates >= 3 )) && ( ( ( ( numUpdates % 2 )) != 0 )) )); <19>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "i++ <21>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "List<Pair<String,String>> updates = startServerProduceConsumeTopics(config,new MockRDFRegressionInputGenerator(),new MockRDFRegressionModelGenerator(),NUM_INPUT,1); <12>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "int count = ((Integer)(fields.get(3))); <28>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "i += 2 <37>", fillcolor = white, shape = ellipse];
0.41 [style = filled, label = "String nodeID1 = fields1.get(1).toString(); <45>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.feature-names\",\"[\"foo\",\"bar\"]\"); <7>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "int i = 1 <21>", fillcolor = white, shape = ellipse];
0.38 [style = filled, label = "int count1 = ((Integer)(fields1.get(3))); <42>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "Pair<String,String> update1 = updates.get(i); <38>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "assertEquals(\"UP\",update.getFirst()); <23>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "updates <14>", fillcolor = white, shape = ellipse];
0.39 [style = filled, label = "int count2 = ((Integer)(fields2.get(3))); <43>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "if log.isDebugEnabled() <13>", fillcolor = white, shape = diamond];
0.0 [style = filled, label = "Map<String,Object> overlayConfig = new HashMap<>(); <4>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "int treeID = ((Integer)(fields.get(0))); <25>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "assertEquals(\"MODEL\",updates.get(0).getFirst()); <20>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "Pair<String,String> update <14>", fillcolor = tomato, shape = box];
0.44 [style = filled, label = "assertEquals(\"r+\",nodeID2); <48>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="overlayConfig"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="overlayConfig"];
0.0 -> 0.3 [style = solid, label="overlayConfig"];
0.0 -> 0.4 [style = solid, label="overlayConfig"];
0.0 -> 0.5 [style = solid, label="overlayConfig"];
0.0 -> 0.6 [style = solid, label="overlayConfig"];
0.1 -> 0.2 [style = solid, label="overlayConfig"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="overlayConfig"];
0.1 -> 0.4 [style = solid, label="overlayConfig"];
0.1 -> 0.5 [style = solid, label="overlayConfig"];
0.1 -> 0.6 [style = solid, label="overlayConfig"];
0.2 -> 0.3 [style = solid, label="overlayConfig"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="overlayConfig"];
0.2 -> 0.5 [style = solid, label="overlayConfig"];
0.2 -> 0.6 [style = solid, label="overlayConfig"];
0.3 -> 0.4 [style = solid, label="overlayConfig"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="overlayConfig"];
0.3 -> 0.6 [style = solid, label="overlayConfig"];
0.4 -> 0.5 [style = solid, label="overlayConfig"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="overlayConfig"];
0.5 -> 0.6 [style = solid, label="overlayConfig"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="config"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.13 [style = solid, label="updates"];
0.8 -> 0.15 [style = solid, label="updates"];
0.8 -> 0.19 [style = solid, label="updates"];
0.8 -> 0.34 [style = solid, label="updates"];
0.8 -> 0.35 [style = solid, label="updates"];
0.9 -> 0.10 [style = dotted, label="true"];
0.9 -> 0.11 [style = dotted, label="true"];
0.9 -> 0.12 [style = dotted, label="true"];
0.9 -> 0.12 [style = solid, label="log"];
0.9 -> 0.12 [style = bold, label=""];
0.9 -> 0.13 [style = bold, label=""];
0.12 -> 0.12 [style = solid, label="log"];
0.12 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = solid, label="numUpdates"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.17 [style = solid, label="numUpdates"];
0.13 -> 0.32 [style = solid, label="numUpdates"];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = solid, label="i"];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.18 [style = solid, label="i"];
0.16 -> 0.19 [style = solid, label="i"];
0.16 -> 0.32 [style = solid, label="i"];
0.16 -> 0.34 [style = solid, label="i"];
0.16 -> 0.35 [style = solid, label="i"];
0.17 -> 0.18 [style = dotted, label="true"];
0.17 -> 0.19 [style = dotted, label="true"];
0.17 -> 0.19 [style = bold, label=""];
0.17 -> 0.20 [style = dotted, label="true"];
0.17 -> 0.21 [style = dotted, label="true"];
0.17 -> 0.22 [style = dotted, label="true"];
0.17 -> 0.23 [style = dotted, label="true"];
0.17 -> 0.24 [style = dotted, label="true"];
0.17 -> 0.25 [style = dotted, label="true"];
0.17 -> 0.26 [style = dotted, label="true"];
0.17 -> 0.27 [style = dotted, label="true"];
0.17 -> 0.28 [style = dotted, label="true"];
0.17 -> 0.31 [style = bold, label=""];
0.18 -> 0.17 [style = solid, label="i"];
0.18 -> 0.17 [style = bold, label=""];
0.18 -> 0.18 [style = solid, label="i"];
0.18 -> 0.19 [style = solid, label="i"];
0.18 -> 0.32 [style = solid, label="i"];
0.18 -> 0.34 [style = solid, label="i"];
0.18 -> 0.35 [style = solid, label="i"];
0.19 -> 0.20 [style = solid, label="update"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.21 [style = solid, label="update"];
0.20 -> 0.21 [style = bold, label=""];
0.21 -> 0.22 [style = solid, label="fields"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.23 [style = solid, label="fields"];
0.21 -> 0.24 [style = solid, label="fields"];
0.21 -> 0.25 [style = solid, label="fields"];
0.22 -> 0.23 [style = bold, label=""];
0.22 -> 0.26 [style = solid, label="treeID"];
0.23 -> 0.24 [style = bold, label=""];
0.23 -> 0.27 [style = solid, label="nodeID"];
0.23 -> 0.28 [style = solid, label="nodeID"];
0.24 -> 0.25 [style = bold, label=""];
0.24 -> 0.29 [style = solid, label="mean"];
0.24 -> 0.30 [style = solid, label="mean"];
0.25 -> 0.26 [style = bold, label=""];
0.25 -> 0.29 [style = solid, label="count"];
0.25 -> 0.30 [style = solid, label="count"];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = dotted, label="true"];
0.28 -> 0.29 [style = bold, label=""];
0.28 -> 0.30 [style = dotted, label="false"];
0.28 -> 0.30 [style = bold, label=""];
0.29 -> 0.18 [style = bold, label=""];
0.30 -> 0.18 [style = bold, label=""];
0.31 -> 0.32 [style = solid, label="i"];
0.31 -> 0.32 [style = bold, label=""];
0.31 -> 0.34 [style = solid, label="i"];
0.31 -> 0.35 [style = solid, label="i"];
0.32 -> 0.33 [style = dotted, label="true"];
0.32 -> 0.34 [style = dotted, label="true"];
0.32 -> 0.34 [style = bold, label=""];
0.32 -> 0.35 [style = dotted, label="true"];
0.32 -> 0.36 [style = dotted, label="true"];
0.32 -> 0.37 [style = dotted, label="true"];
0.32 -> 0.38 [style = dotted, label="true"];
0.32 -> 0.39 [style = dotted, label="true"];
0.32 -> 0.40 [style = dotted, label="true"];
0.32 -> 0.41 [style = dotted, label="true"];
0.32 -> 0.42 [style = dotted, label="true"];
0.32 -> 0.43 [style = dotted, label="true"];
0.33 -> 0.32 [style = solid, label="i"];
0.33 -> 0.32 [style = bold, label=""];
0.33 -> 0.34 [style = solid, label="i"];
0.33 -> 0.35 [style = solid, label="i"];
0.34 -> 0.35 [style = bold, label=""];
0.34 -> 0.36 [style = solid, label="update1"];
0.35 -> 0.36 [style = bold, label=""];
0.35 -> 0.37 [style = solid, label="update2"];
0.36 -> 0.37 [style = bold, label=""];
0.36 -> 0.38 [style = solid, label="fields1"];
0.36 -> 0.41 [style = solid, label="fields1"];
0.37 -> 0.38 [style = bold, label=""];
0.37 -> 0.39 [style = solid, label="fields2"];
0.37 -> 0.42 [style = solid, label="fields2"];
0.38 -> 0.39 [style = bold, label=""];
0.38 -> 0.40 [style = solid, label="count1"];
0.39 -> 0.40 [style = solid, label="count2"];
0.39 -> 0.40 [style = bold, label=""];
0.40 -> 0.41 [style = bold, label=""];
0.41 -> 0.42 [style = bold, label=""];
0.41 -> 0.43 [style = solid, label="nodeID1"];
0.42 -> 0.43 [style = bold, label=""];
0.42 -> 0.44 [style = solid, label="nodeID2"];
0.42 -> 0.45 [style = solid, label="nodeID2"];
0.43 -> 0.44 [style = dotted, label="true"];
0.43 -> 0.44 [style = bold, label=""];
0.43 -> 0.45 [style = dotted, label="false"];
0.43 -> 0.45 [style = bold, label=""];
0.44 -> 0.33 [style = bold, label=""];
0.45 -> 0.33 [style = bold, label=""];
0.46 -> 0.0 [style = dotted, label="true"];
0.46 -> 0.0 [style = bold, label=""];
0.46 -> 0.1 [style = dotted, label="true"];
0.46 -> 0.2 [style = dotted, label="true"];
0.46 -> 0.3 [style = dotted, label="true"];
0.46 -> 0.4 [style = dotted, label="true"];
0.46 -> 0.5 [style = dotted, label="true"];
0.46 -> 0.6 [style = dotted, label="true"];
0.46 -> 0.7 [style = dotted, label="true"];
0.46 -> 0.8 [style = dotted, label="true"];
0.46 -> 0.9 [style = dotted, label="true"];
0.46 -> 0.13 [style = dotted, label="true"];
0.46 -> 0.14 [style = dotted, label="true"];
0.46 -> 0.15 [style = dotted, label="true"];
0.46 -> 0.16 [style = dotted, label="true"];
0.46 -> 0.17 [style = dotted, label="true"];
0.46 -> 0.31 [style = dotted, label="true"];
0.46 -> 0.32 [style = dotted, label="true"];
}
