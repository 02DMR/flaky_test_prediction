digraph PDG {
label = "testRDF <3...80>";
0.6 [style = filled, label = "ConfigUtils.set(overlayConfig,\"oryx.batch.storage.model-dir\",modelDir); <10>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "List<Path> modelInstanceDirs = IOUtils.listFiles(modelDir,\"*\"); <23>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "assertTrue( ( \"Model file should not be empty: \" + modelFile ), ( Files.size(modelFile) > 0 )); <29>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "Pair<String,String> km <33>", fillcolor = tomato, shape = box];
0.70 [style = filled, label = "checkMiningSchema(schema,rootModel.getMiningSchema()); <78>", fillcolor = deeppink, shape = ellipse];
0.56 [style = filled, label = "int i = 0 <61>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.id-features\",\"[\"0\"]\"); <18>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "List<Pair<String,String>> updates = startServerProduceConsumeTopics(config,new RandomCategoricalRDFDataGenerator(3),DATA_TO_WRITE,WRITE_INTERVAL_MSEC); <22>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "Map<String,Object> overlayConfig = new HashMap<>(); <7>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "checkIntervals(generations,DATA_TO_WRITE,WRITE_INTERVAL_MSEC,GEN_INTERVAL_SEC); <25>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "Path dataDir = tempDir.resolve(\"data\"); <5>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "Config config = ConfigUtils.overlayOn(overlayConfig,getConfig()); <20>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "startMessaging(); <21>", fillcolor = white, shape = ellipse];
0.47 [style = filled, label = "checkTreeModel(treeModel); <50>", fillcolor = white, shape = ellipse];
0.52 [style = filled, label = "assertEquals(WEIGHTED_MAJORITY_VOTE,segmentation.getMultipleModelMethod()); <55>", fillcolor = white, shape = ellipse];
0.57 [style = filled, label = " ( i < segments.size() ) <61>", fillcolor = white, shape = diamond];
0.63 [style = filled, label = "assertTrue(segment.getModel() instanceof TreeModel); <66>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "updates <33>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Path tempDir = getTempDir(); <4>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "overlayConfig.put(\"oryx.rdf.hyperparams.max-split-candidates\",MAX_SPLIT_CANDIDATES); <14>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "overlayConfig.put(\"oryx.rdf.hyperparams.impurity\",IMPURITY); <15>", fillcolor = white, shape = ellipse];
0.41 [style = filled, label = "checkExtensions(pmml,expected); <44>", fillcolor = white, shape = ellipse];
0.64 [style = filled, label = "checkTreeModel(((TreeModel)(segment.getModel()))); <67>", fillcolor = white, shape = ellipse];
0.71 [style = filled, label = "Enter <3...80>", fillcolor = aquamarine, shape = diamond];
0.25 [style = filled, label = "assertTrue( ( \"Model file should exist: \" + modelFile ),Files.exists(modelFile)); <28>", fillcolor = white, shape = ellipse];
0.37 [style = filled, label = "Map<String,Object> expected = new HashMap<>(); <40>", fillcolor = white, shape = ellipse];
0.40 [style = filled, label = "expected.put(\"impurity\",IMPURITY); <43>", fillcolor = white, shape = ellipse];
0.49 [style = filled, label = "MiningModel miningModel = ((MiningModel)(rootModel)); <52>", fillcolor = white, shape = ellipse];
0.68 [style = filled, label = "assertEquals(CLASSIFICATION,rootModel.getFunctionName()); <74>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.target-feature\",\"\"4\"\"); <19>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "modelInstanceDirs <26>", fillcolor = white, shape = ellipse];
0.48 [style = filled, label = "if rootModel instanceof MiningModel <51>", fillcolor = white, shape = diamond];
0.45 [style = filled, label = "assertEquals(NUM_TREES,1); <48>", fillcolor = white, shape = ellipse];
0.54 [style = filled, label = "List<Segment> segments = segmentation.getSegments(); <59>", fillcolor = white, shape = ellipse];
0.67 [style = filled, label = "if schema.isClassification() <73>", fillcolor = white, shape = diamond];
0.22 [style = filled, label = "Path modelInstanceDir <26>", fillcolor = tomato, shape = box];
0.66 [style = filled, label = "return; <71>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "overlayConfig.put(\"oryx.rdf.hyperparams.max-depth\",MAX_DEPTH); <13>", fillcolor = white, shape = ellipse];
0.51 [style = filled, label = "if schema.isClassification() <54>", fillcolor = white, shape = diamond];
0.24 [style = filled, label = "Path modelFile = modelInstanceDir.resolve(MODEL_FILE_NAME); <27>", fillcolor = white, shape = ellipse];
0.44 [style = filled, label = "if rootModel instanceof TreeModel <47>", fillcolor = white, shape = diamond];
0.50 [style = filled, label = "Segmentation segmentation = miningModel.getSegmentation(); <53>", fillcolor = white, shape = ellipse];
0.65 [style = filled, label = "fail( ( \"Wrong model type: \" + rootModel.getClass() )); <70>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "PMML pmml = AppPMMLUtils.readPMMLFromUpdateKeyMessage(type,value,null); <37>", fillcolor = white, shape = ellipse];
0.58 [style = filled, label = "i++ <61>", fillcolor = white, shape = ellipse];
0.42 [style = filled, label = "checkDataDictionary(schema,pmml.getDataDictionary()); <45>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "Path modelDir = tempDir.resolve(\"model\"); <6>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "InputSchema schema = new InputSchema(config); <32>", fillcolor = white, shape = ellipse];
0.39 [style = filled, label = "expected.put(\"maxSplitCandidates\",MAX_SPLIT_CANDIDATES); <42>", fillcolor = white, shape = ellipse];
0.62 [style = filled, label = "assertEquals(1.0,segment.getWeight().doubleValue()); <65>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "ConfigUtils.set(overlayConfig,\"oryx.batch.storage.data-dir\",dataDir); <9>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.num-features\",5); <16>", fillcolor = white, shape = ellipse];
0.32 [style = filled, label = "String value = km.getSecond(); <35>", fillcolor = white, shape = ellipse];
0.60 [style = filled, label = "assertEquals(Integer.toString(i),segment.getId()); <63>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "int generations = modelInstanceDirs.size(); <24>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "checkHeader(pmml.getHeader()); <38>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "String type = km.getFirst(); <34>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "overlayConfig.put(\"oryx.input-schema.categorical-features\",\"[\"4\"]\"); <17>", fillcolor = white, shape = ellipse];
0.43 [style = filled, label = "Model rootModel = pmml.getModels().get(0); <46>", fillcolor = white, shape = ellipse];
0.55 [style = filled, label = "assertEquals(NUM_TREES,segments.size()); <60>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "overlayConfig.put(\"oryx.batch.update-class\",.getName()); <8>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "assertEquals(3,pmml.getExtensions().size()); <39>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "overlayConfig.put(\"oryx.batch.streaming.generation-interval-sec\",GEN_INTERVAL_SEC); <11>", fillcolor = white, shape = ellipse];
0.61 [style = filled, label = "assertTrue(segment.getPredicate() instanceof True); <64>", fillcolor = white, shape = ellipse];
0.46 [style = filled, label = "TreeModel treeModel = ((TreeModel)(rootModel)); <49>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "assertTrue( ( \"MODEL\".equals(type) || \"MODEL-REF\".equals(type) )); <36>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "overlayConfig.put(\"oryx.rdf.num-trees\",NUM_TREES); <12>", fillcolor = white, shape = ellipse];
0.53 [style = filled, label = "assertEquals(WEIGHTED_AVERAGE,segmentation.getMultipleModelMethod()); <57>", fillcolor = white, shape = ellipse];
0.69 [style = filled, label = "assertEquals(REGRESSION,rootModel.getFunctionName()); <76>", fillcolor = white, shape = ellipse];
0.38 [style = filled, label = "expected.put(\"maxDepth\",MAX_DEPTH); <41>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "PMMLUtils.read(modelFile); <30>", fillcolor = white, shape = ellipse];
0.59 [style = filled, label = "Segment segment = segments.get(i); <62>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="tempDir"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="tempDir"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="dataDir"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.6 [style = solid, label="modelDir"];
0.2 -> 0.19 [style = solid, label="modelDir"];
0.3 -> 0.4 [style = solid, label="overlayConfig"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="overlayConfig"];
0.3 -> 0.6 [style = solid, label="overlayConfig"];
0.3 -> 0.7 [style = solid, label="overlayConfig"];
0.3 -> 0.8 [style = solid, label="overlayConfig"];
0.3 -> 0.9 [style = solid, label="overlayConfig"];
0.3 -> 0.10 [style = solid, label="overlayConfig"];
0.3 -> 0.11 [style = solid, label="overlayConfig"];
0.3 -> 0.12 [style = solid, label="overlayConfig"];
0.3 -> 0.13 [style = solid, label="overlayConfig"];
0.3 -> 0.14 [style = solid, label="overlayConfig"];
0.3 -> 0.15 [style = solid, label="overlayConfig"];
0.3 -> 0.16 [style = solid, label="overlayConfig"];
0.4 -> 0.5 [style = solid, label="overlayConfig"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="overlayConfig"];
0.4 -> 0.7 [style = solid, label="overlayConfig"];
0.4 -> 0.8 [style = solid, label="overlayConfig"];
0.4 -> 0.9 [style = solid, label="overlayConfig"];
0.4 -> 0.10 [style = solid, label="overlayConfig"];
0.4 -> 0.11 [style = solid, label="overlayConfig"];
0.4 -> 0.12 [style = solid, label="overlayConfig"];
0.4 -> 0.13 [style = solid, label="overlayConfig"];
0.4 -> 0.14 [style = solid, label="overlayConfig"];
0.4 -> 0.15 [style = solid, label="overlayConfig"];
0.4 -> 0.16 [style = solid, label="overlayConfig"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="overlayConfig"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="overlayConfig"];
0.7 -> 0.10 [style = solid, label="overlayConfig"];
0.7 -> 0.11 [style = solid, label="overlayConfig"];
0.7 -> 0.12 [style = solid, label="overlayConfig"];
0.7 -> 0.13 [style = solid, label="overlayConfig"];
0.7 -> 0.14 [style = solid, label="overlayConfig"];
0.7 -> 0.15 [style = solid, label="overlayConfig"];
0.7 -> 0.16 [style = solid, label="overlayConfig"];
0.8 -> 0.9 [style = solid, label="overlayConfig"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="overlayConfig"];
0.8 -> 0.11 [style = solid, label="overlayConfig"];
0.8 -> 0.12 [style = solid, label="overlayConfig"];
0.8 -> 0.13 [style = solid, label="overlayConfig"];
0.8 -> 0.14 [style = solid, label="overlayConfig"];
0.8 -> 0.15 [style = solid, label="overlayConfig"];
0.8 -> 0.16 [style = solid, label="overlayConfig"];
0.9 -> 0.10 [style = solid, label="overlayConfig"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="overlayConfig"];
0.9 -> 0.12 [style = solid, label="overlayConfig"];
0.9 -> 0.13 [style = solid, label="overlayConfig"];
0.9 -> 0.14 [style = solid, label="overlayConfig"];
0.9 -> 0.15 [style = solid, label="overlayConfig"];
0.9 -> 0.16 [style = solid, label="overlayConfig"];
0.10 -> 0.11 [style = solid, label="overlayConfig"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="overlayConfig"];
0.10 -> 0.13 [style = solid, label="overlayConfig"];
0.10 -> 0.14 [style = solid, label="overlayConfig"];
0.10 -> 0.15 [style = solid, label="overlayConfig"];
0.10 -> 0.16 [style = solid, label="overlayConfig"];
0.11 -> 0.12 [style = solid, label="overlayConfig"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="overlayConfig"];
0.11 -> 0.14 [style = solid, label="overlayConfig"];
0.11 -> 0.15 [style = solid, label="overlayConfig"];
0.11 -> 0.16 [style = solid, label="overlayConfig"];
0.12 -> 0.13 [style = solid, label="overlayConfig"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.14 [style = solid, label="overlayConfig"];
0.12 -> 0.15 [style = solid, label="overlayConfig"];
0.12 -> 0.16 [style = solid, label="overlayConfig"];
0.13 -> 0.14 [style = solid, label="overlayConfig"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.15 [style = solid, label="overlayConfig"];
0.13 -> 0.16 [style = solid, label="overlayConfig"];
0.14 -> 0.15 [style = solid, label="overlayConfig"];
0.14 -> 0.15 [style = bold, label=""];
0.14 -> 0.16 [style = solid, label="overlayConfig"];
0.15 -> 0.16 [style = solid, label="overlayConfig"];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.18 [style = solid, label="config"];
0.16 -> 0.28 [style = solid, label="config"];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = bold, label=""];
0.19 -> 0.20 [style = solid, label="modelInstanceDirs"];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = solid, label="generations"];
0.20 -> 0.21 [style = bold, label=""];
0.21 -> 0.24 [style = bold, label=""];
0.24 -> 0.25 [style = solid, label="modelFile"];
0.24 -> 0.25 [style = bold, label=""];
0.24 -> 0.26 [style = solid, label="modelFile"];
0.24 -> 0.27 [style = solid, label="modelFile"];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.24 [style = bold, label=""];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.31 [style = bold, label=""];
0.28 -> 0.42 [style = solid, label="schema"];
0.28 -> 0.51 [style = solid, label="schema"];
0.28 -> 0.67 [style = solid, label="schema"];
0.28 -> 0.70 [style = solid, label="schema"];
0.31 -> 0.32 [style = bold, label=""];
0.31 -> 0.33 [style = solid, label="type"];
0.31 -> 0.34 [style = solid, label="type"];
0.32 -> 0.33 [style = bold, label=""];
0.32 -> 0.34 [style = solid, label="value"];
0.33 -> 0.34 [style = bold, label=""];
0.34 -> 0.35 [style = solid, label="pmml"];
0.34 -> 0.35 [style = bold, label=""];
0.34 -> 0.36 [style = solid, label="pmml"];
0.34 -> 0.41 [style = solid, label="pmml"];
0.34 -> 0.42 [style = solid, label="pmml"];
0.34 -> 0.43 [style = solid, label="pmml"];
0.35 -> 0.36 [style = bold, label=""];
0.36 -> 0.37 [style = bold, label=""];
0.37 -> 0.38 [style = solid, label="expected"];
0.37 -> 0.38 [style = bold, label=""];
0.37 -> 0.39 [style = solid, label="expected"];
0.37 -> 0.40 [style = solid, label="expected"];
0.37 -> 0.41 [style = solid, label="expected"];
0.38 -> 0.38 [style = solid, label="expected"];
0.38 -> 0.39 [style = solid, label="expected"];
0.38 -> 0.39 [style = bold, label=""];
0.38 -> 0.40 [style = solid, label="expected"];
0.38 -> 0.41 [style = solid, label="expected"];
0.39 -> 0.38 [style = solid, label="expected"];
0.39 -> 0.39 [style = solid, label="expected"];
0.39 -> 0.40 [style = solid, label="expected"];
0.39 -> 0.40 [style = bold, label=""];
0.39 -> 0.41 [style = solid, label="expected"];
0.40 -> 0.38 [style = solid, label="expected"];
0.40 -> 0.39 [style = solid, label="expected"];
0.40 -> 0.40 [style = solid, label="expected"];
0.40 -> 0.41 [style = solid, label="expected"];
0.40 -> 0.41 [style = bold, label=""];
0.41 -> 0.42 [style = bold, label=""];
0.42 -> 0.43 [style = bold, label=""];
0.43 -> 0.44 [style = solid, label="rootModel"];
0.43 -> 0.44 [style = bold, label=""];
0.43 -> 0.46 [style = solid, label="rootModel"];
0.43 -> 0.48 [style = solid, label="rootModel"];
0.43 -> 0.49 [style = solid, label="rootModel"];
0.43 -> 0.65 [style = solid, label="rootModel"];
0.43 -> 0.68 [style = solid, label="rootModel"];
0.43 -> 0.69 [style = solid, label="rootModel"];
0.43 -> 0.70 [style = solid, label="rootModel"];
0.44 -> 0.45 [style = dotted, label="true"];
0.44 -> 0.45 [style = bold, label=""];
0.44 -> 0.46 [style = dotted, label="true"];
0.44 -> 0.47 [style = dotted, label="true"];
0.44 -> 0.48 [style = dotted, label="false"];
0.44 -> 0.48 [style = bold, label=""];
0.45 -> 0.46 [style = bold, label=""];
0.46 -> 0.47 [style = solid, label="treeModel"];
0.46 -> 0.47 [style = bold, label=""];
0.47 -> 0.67 [style = bold, label=""];
0.48 -> 0.49 [style = dotted, label="true"];
0.48 -> 0.49 [style = bold, label=""];
0.48 -> 0.50 [style = dotted, label="true"];
0.48 -> 0.51 [style = dotted, label="true"];
0.48 -> 0.54 [style = dotted, label="true"];
0.48 -> 0.55 [style = dotted, label="true"];
0.48 -> 0.56 [style = dotted, label="true"];
0.48 -> 0.57 [style = dotted, label="true"];
0.48 -> 0.65 [style = dotted, label="false"];
0.48 -> 0.65 [style = bold, label=""];
0.48 -> 0.66 [style = dotted, label="false"];
0.49 -> 0.50 [style = solid, label="miningModel"];
0.49 -> 0.50 [style = bold, label=""];
0.50 -> 0.51 [style = bold, label=""];
0.50 -> 0.52 [style = solid, label="segmentation"];
0.50 -> 0.53 [style = solid, label="segmentation"];
0.50 -> 0.54 [style = solid, label="segmentation"];
0.51 -> 0.42 [style = solid, label="schema"];
0.51 -> 0.51 [style = solid, label="schema"];
0.51 -> 0.52 [style = dotted, label="true"];
0.51 -> 0.52 [style = bold, label=""];
0.51 -> 0.53 [style = dotted, label="false"];
0.51 -> 0.53 [style = bold, label=""];
0.51 -> 0.67 [style = solid, label="schema"];
0.51 -> 0.70 [style = solid, label="schema"];
0.52 -> 0.54 [style = bold, label=""];
0.53 -> 0.54 [style = bold, label=""];
0.54 -> 0.55 [style = solid, label="segments"];
0.54 -> 0.55 [style = bold, label=""];
0.54 -> 0.57 [style = solid, label="segments"];
0.54 -> 0.59 [style = solid, label="segments"];
0.55 -> 0.56 [style = bold, label=""];
0.56 -> 0.57 [style = solid, label="i"];
0.56 -> 0.57 [style = bold, label=""];
0.56 -> 0.58 [style = solid, label="i"];
0.56 -> 0.59 [style = solid, label="i"];
0.56 -> 0.60 [style = solid, label="i"];
0.57 -> 0.55 [style = solid, label="segments"];
0.57 -> 0.57 [style = solid, label="segments"];
0.57 -> 0.58 [style = dotted, label="true"];
0.57 -> 0.59 [style = dotted, label="true"];
0.57 -> 0.59 [style = solid, label="segments"];
0.57 -> 0.59 [style = bold, label=""];
0.57 -> 0.60 [style = dotted, label="true"];
0.57 -> 0.61 [style = dotted, label="true"];
0.57 -> 0.62 [style = dotted, label="true"];
0.57 -> 0.63 [style = dotted, label="true"];
0.57 -> 0.64 [style = dotted, label="true"];
0.57 -> 0.67 [style = bold, label=""];
0.58 -> 0.57 [style = solid, label="i"];
0.58 -> 0.57 [style = bold, label=""];
0.58 -> 0.58 [style = solid, label="i"];
0.58 -> 0.59 [style = solid, label="i"];
0.58 -> 0.60 [style = solid, label="i"];
0.59 -> 0.60 [style = solid, label="segment"];
0.59 -> 0.60 [style = bold, label=""];
0.59 -> 0.61 [style = solid, label="segment"];
0.59 -> 0.62 [style = solid, label="segment"];
0.59 -> 0.63 [style = solid, label="segment"];
0.59 -> 0.64 [style = solid, label="segment"];
0.60 -> 0.61 [style = bold, label=""];
0.61 -> 0.62 [style = bold, label=""];
0.62 -> 0.63 [style = bold, label=""];
0.63 -> 0.64 [style = bold, label=""];
0.64 -> 0.58 [style = bold, label=""];
0.65 -> 0.66 [style = bold, label=""];
0.66 -> 0.67 [style = bold, label=""];
0.67 -> 0.42 [style = solid, label="schema"];
0.67 -> 0.51 [style = solid, label="schema"];
0.67 -> 0.67 [style = solid, label="schema"];
0.67 -> 0.68 [style = dotted, label="true"];
0.67 -> 0.68 [style = bold, label=""];
0.67 -> 0.69 [style = dotted, label="false"];
0.67 -> 0.69 [style = bold, label=""];
0.67 -> 0.70 [style = solid, label="schema"];
0.68 -> 0.70 [style = bold, label=""];
0.69 -> 0.70 [style = bold, label=""];
0.70 -> 0.31 [style = bold, label=""];
0.71 -> 0.0 [style = dotted, label="true"];
0.71 -> 0.0 [style = bold, label=""];
0.71 -> 0.1 [style = dotted, label="true"];
0.71 -> 0.2 [style = dotted, label="true"];
0.71 -> 0.3 [style = dotted, label="true"];
0.71 -> 0.4 [style = dotted, label="true"];
0.71 -> 0.5 [style = dotted, label="true"];
0.71 -> 0.6 [style = dotted, label="true"];
0.71 -> 0.7 [style = dotted, label="true"];
0.71 -> 0.8 [style = dotted, label="true"];
0.71 -> 0.9 [style = dotted, label="true"];
0.71 -> 0.10 [style = dotted, label="true"];
0.71 -> 0.11 [style = dotted, label="true"];
0.71 -> 0.12 [style = dotted, label="true"];
0.71 -> 0.13 [style = dotted, label="true"];
0.71 -> 0.14 [style = dotted, label="true"];
0.71 -> 0.15 [style = dotted, label="true"];
0.71 -> 0.16 [style = dotted, label="true"];
0.71 -> 0.17 [style = dotted, label="true"];
0.71 -> 0.18 [style = dotted, label="true"];
0.71 -> 0.19 [style = dotted, label="true"];
0.71 -> 0.20 [style = dotted, label="true"];
0.71 -> 0.21 [style = dotted, label="true"];
0.71 -> 0.22 [style = dotted, label="true"];
0.71 -> 0.23 [style = dotted, label="true"];
0.71 -> 0.24 [style = dotted, label="true"];
0.71 -> 0.25 [style = dotted, label="true"];
0.71 -> 0.26 [style = dotted, label="true"];
0.71 -> 0.27 [style = dotted, label="true"];
0.71 -> 0.28 [style = dotted, label="true"];
0.71 -> 0.29 [style = dotted, label="true"];
0.71 -> 0.30 [style = dotted, label="true"];
0.71 -> 0.31 [style = dotted, label="true"];
0.71 -> 0.32 [style = dotted, label="true"];
0.71 -> 0.33 [style = dotted, label="true"];
0.71 -> 0.34 [style = dotted, label="true"];
0.71 -> 0.35 [style = dotted, label="true"];
0.71 -> 0.36 [style = dotted, label="true"];
0.71 -> 0.37 [style = dotted, label="true"];
0.71 -> 0.38 [style = dotted, label="true"];
0.71 -> 0.39 [style = dotted, label="true"];
0.71 -> 0.40 [style = dotted, label="true"];
0.71 -> 0.41 [style = dotted, label="true"];
0.71 -> 0.42 [style = dotted, label="true"];
0.71 -> 0.43 [style = dotted, label="true"];
0.71 -> 0.44 [style = dotted, label="true"];
0.71 -> 0.67 [style = dotted, label="true"];
0.71 -> 0.70 [style = dotted, label="true"];
}
