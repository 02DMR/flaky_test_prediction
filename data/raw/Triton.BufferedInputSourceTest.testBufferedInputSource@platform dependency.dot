digraph PDG {
label = "testBufferedInputSource <3...30>";
0.4 [style = filled, label = "int i = 0 <19>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "when(inner.getNext()).thenAnswer(new Answer<Image>(){
@Override public Image answer (InvocationOnMock invocation  ) {
if ( ( (count++) < 300 )) {
Image img = new Image(null);
created.add(img);
return img;
}
return null;
}}); <7...18>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "if  ( buffer.getNext() != null ) <26>", fillcolor = white, shape = diamond];
0.10 [style = filled, label = "throw new RuntimeException(\"Unequal images found\"); <23>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Enter <3...30>", fillcolor = aquamarine, shape = diamond];
0.0 [style = filled, label = "ImageInputSource inner = mock(); <4>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Image i1 = buffer.getNext(); <20>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "i++ <19>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "throw new RuntimeException(\"Non-null image found\"); <27>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "if  ( i1 != i2 ) <22>", fillcolor = white, shape = diamond];
0.8 [style = filled, label = "Image i2 = created.remove(0); <21>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "buffer.close(); <29>", fillcolor = deeppink, shape = ellipse];
0.1 [style = filled, label = "BufferedInputSource buffer = new BufferedInputSource(inner); <5>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = " ( i < 300 ) <19>", fillcolor = white, shape = diamond];
0.2 [style = filled, label = "final LinkedList<Image> created = new LinkedList<Image>(); <6>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="inner"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.3 [style = solid, label="inner"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.7 [style = solid, label="buffer"];
0.1 -> 0.11 [style = solid, label="buffer"];
0.1 -> 0.13 [style = solid, label="buffer"];
0.2 -> 0.3 [style = solid, label="created"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="created"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = solid, label="i"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="i"];
0.5 -> 0.6 [style = dotted, label="true"];
0.5 -> 0.7 [style = dotted, label="true"];
0.5 -> 0.7 [style = bold, label=""];
0.5 -> 0.8 [style = dotted, label="true"];
0.5 -> 0.9 [style = dotted, label="true"];
0.5 -> 0.11 [style = bold, label=""];
0.6 -> 0.5 [style = solid, label="i"];
0.6 -> 0.5 [style = bold, label=""];
0.6 -> 0.6 [style = solid, label="i"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="i1"];
0.8 -> 0.9 [style = solid, label="i2"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.6 [style = bold, label=""];
0.9 -> 0.10 [style = dotted, label="true"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.6 [style = bold, label=""];
0.11 -> 0.12 [style = dotted, label="true"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="buffer"];
0.11 -> 0.13 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.14 -> 0.0 [style = dotted, label="true"];
0.14 -> 0.0 [style = bold, label=""];
0.14 -> 0.1 [style = dotted, label="true"];
0.14 -> 0.2 [style = dotted, label="true"];
0.14 -> 0.3 [style = dotted, label="true"];
0.14 -> 0.4 [style = dotted, label="true"];
0.14 -> 0.5 [style = dotted, label="true"];
0.14 -> 0.11 [style = dotted, label="true"];
0.14 -> 0.13 [style = dotted, label="true"];
}
