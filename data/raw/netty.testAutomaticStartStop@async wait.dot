digraph PDG {
label = "testAutomaticStartStop <3...22>";
0.3 [style = filled, label = "assertThat(thread,is(not(nullValue()))); <7>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "assertThat(task.ran.get(),is(true)); <21>", fillcolor = deeppink, shape = ellipse];
0.7 [style = filled, label = "assertThat(task.ran.get(),is(true)); <11>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "e.execute(task); <13>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertThat(thread.isAlive(),is(false)); <10>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "e.execute(task); <5>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "assertThat(thread.isAlive(),is(true)); <8>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "Thread thread = e.thread; <6>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Thread.sleep(1500); <9>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertThat(e.thread,not(sameInstance(thread))); <14>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "task.ran.set(false); <12>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final TestRunnable task = new TestRunnable(500); <4>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Enter <3...22>", fillcolor = aquamarine, shape = diamond];
0.11 [style = filled, label = "thread = e.thread; <15>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Thread.sleep(1500); <17>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "assertThat(thread.isAlive(),is(false)); <20>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="task"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.9 [style = solid, label="task"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.9 [style = solid, label="e"];
0.2 -> 0.3 [style = solid, label="thread"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="thread"];
0.2 -> 0.6 [style = solid, label="thread"];
0.2 -> 0.10 [style = solid, label="thread"];
0.2 -> 0.11 [style = solid, label="thread"];
0.2 -> 0.13 [style = solid, label="thread"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="thread"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.15 -> 0.0 [style = dotted, label="true"];
0.15 -> 0.0 [style = bold, label=""];
0.15 -> 0.1 [style = dotted, label="true"];
0.15 -> 0.2 [style = dotted, label="true"];
0.15 -> 0.3 [style = dotted, label="true"];
0.15 -> 0.4 [style = dotted, label="true"];
0.15 -> 0.5 [style = dotted, label="true"];
0.15 -> 0.6 [style = dotted, label="true"];
0.15 -> 0.7 [style = dotted, label="true"];
0.15 -> 0.8 [style = dotted, label="true"];
0.15 -> 0.9 [style = dotted, label="true"];
0.15 -> 0.10 [style = dotted, label="true"];
0.15 -> 0.11 [style = dotted, label="true"];
0.15 -> 0.12 [style = dotted, label="true"];
0.15 -> 0.13 [style = dotted, label="true"];
0.15 -> 0.14 [style = dotted, label="true"];
}
