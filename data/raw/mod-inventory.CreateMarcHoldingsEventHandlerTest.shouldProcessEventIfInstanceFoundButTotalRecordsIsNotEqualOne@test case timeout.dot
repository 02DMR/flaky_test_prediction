digraph PDG {
label = "shouldProcessEventIfInstanceFoundButTotalRecordsIsNotEqualOne <3...29>";
0.1 [style = filled, label = "when(storage.getHoldingsRecordCollection(any())).thenReturn(holdingsRecordsCollection); <12>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "when(storage.getInstanceCollection(any())).thenReturn(instanceRecordCollection); <13>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "Assert.assertEquals(PERMANENT_LOCATION_ID,new JsonObject(actualDataImportEventPayload.getContext().get(HOLDINGS.value())).getString(\"permanentLocationId\")); <28>", fillcolor = deeppink, shape = ellipse];
0.18 [style = filled, label = "Enter <3...29>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "Record record = new Record().withParsedRecord(new ParsedRecord().withContent(parsedHoldingsRecord.encode())); <16>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "Assert.assertNull(new JsonObject(actualDataImportEventPayload.getContext().get(HOLDINGS.value())).getString(\"instanceId\")); <27>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "context.put(\"HOLDINGS\",new JsonObject(new ObjectMapper().writer().withDefaultPrettyPrinter().writeValueAsString(holdings)).encode()); <19>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "context.put(MARC_HOLDINGS.value(),Json.encode(record)); <20>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Assert.assertNotNull(actualDataImportEventPayload.getContext().get(HOLDINGS.value())); <25>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "CompletableFuture<DataImportEventPayload> future = createMarcHoldingsEventHandler.handle(dataImportEventPayload); <22>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Assert.assertEquals(DI_INVENTORY_HOLDING_CREATED.value(),actualDataImportEventPayload.getEventType()); <24>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "record.setId(\"a0eb738a-c631-48cb-b36e-41cdcc83e2a4\"); <17>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "HashMap<String,String> context = new HashMap<>(); <18>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "HoldingsRecord holdings = new HoldingsRecord().withId(String.valueOf(UUID.randomUUID())).withHrid(String.valueOf(UUID.randomUUID())).withInstanceId(String.valueOf(UUID.randomUUID())).withSourceId(String.valueOf(UUID.randomUUID())).withHoldingsTypeId(String.valueOf(UUID.randomUUID())).withPermanentLocationId(PERMANENT_LOCATION_ID); <14>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "DataImportEventPayload dataImportEventPayload = new DataImportEventPayload().withEventType(DI_SRS_MARC_HOLDING_RECORD_CREATED.value()).withJobExecutionId(UUID.randomUUID().toString()).withOkapiUrl(mockServer.baseUrl()).withContext(context).withProfileSnapshot(profileSnapshotWrapper).withCurrentNode(profileSnapshotWrapper.getChildSnapshotWrappers().get(0)); <21>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "var parsedHoldingsRecord = new JsonObject(TestUtil.readFileFromPath(PARSED_HOLDINGS_RECORD)); <15>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "DataImportEventPayload actualDataImportEventPayload = future.get(5,TimeUnit.SECONDS); <23>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Assert.assertNotNull(new JsonObject(actualDataImportEventPayload.getContext().get(HOLDINGS.value())).getString(\"id\")); <26>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "doAnswer(null).when(instanceRecordCollection).findByCql(anyString(),any(),any(),any()); <4...11>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.8 [style = solid, label="holdings"];
0.4 -> 0.5 [style = solid, label="parsedHoldingsRecord"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="record"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.9 [style = solid, label="record"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.9 [style = solid, label="record"];
0.7 -> 0.8 [style = solid, label="context"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="context"];
0.7 -> 0.10 [style = solid, label="context"];
0.8 -> 0.9 [style = solid, label="context"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="context"];
0.9 -> 0.10 [style = solid, label="context"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="dataImportEventPayload"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="future"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = solid, label="actualDataImportEventPayload"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.14 [style = solid, label="actualDataImportEventPayload"];
0.12 -> 0.15 [style = solid, label="actualDataImportEventPayload"];
0.12 -> 0.16 [style = solid, label="actualDataImportEventPayload"];
0.12 -> 0.17 [style = solid, label="actualDataImportEventPayload"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.18 -> 0.0 [style = dotted, label="true"];
0.18 -> 0.0 [style = bold, label=""];
0.18 -> 0.1 [style = dotted, label="true"];
0.18 -> 0.2 [style = dotted, label="true"];
0.18 -> 0.3 [style = dotted, label="true"];
0.18 -> 0.4 [style = dotted, label="true"];
0.18 -> 0.5 [style = dotted, label="true"];
0.18 -> 0.6 [style = dotted, label="true"];
0.18 -> 0.7 [style = dotted, label="true"];
0.18 -> 0.8 [style = dotted, label="true"];
0.18 -> 0.9 [style = dotted, label="true"];
0.18 -> 0.10 [style = dotted, label="true"];
0.18 -> 0.11 [style = dotted, label="true"];
0.18 -> 0.12 [style = dotted, label="true"];
0.18 -> 0.13 [style = dotted, label="true"];
0.18 -> 0.14 [style = dotted, label="true"];
0.18 -> 0.15 [style = dotted, label="true"];
0.18 -> 0.16 [style = dotted, label="true"];
0.18 -> 0.17 [style = dotted, label="true"];
}
