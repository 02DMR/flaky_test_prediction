digraph PDG {
label = "testPipelineCloseWithLogFailure <3...24>";
0.5 [style = filled, label = "ContainerWithPipeline containerWithPipeline = new ContainerWithPipeline(containerInfo,pipelineManager.getPipeline(containerInfo.getPipelineID())); <9>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "PipelineActionHandler pipelineActionTest = Mockito.mock(); <5>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "xceiverRatis.handleNodeLogFailure(groupId,null); <20>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "ContainerInfo containerInfo = containerManager.allocateContainer(new RatisReplicationConfig(ReplicationFactor.THREE),\"testOwner\"); <8>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "EventQueue eventQ = ((EventQueue)(scm.getEventQueue())); <4>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "catch ( PipelineNotFoundException e ) <14>", fillcolor = white, shape = diamond];
0.17 [style = filled, label = "verifyCloseForPipeline(openPipeline,actionsFromDatanode); <23>", fillcolor = deeppink, shape = ellipse];
0.6 [style = filled, label = "Pipeline openPipeline = containerWithPipeline.getPipeline(); <10>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "Enter <3...24>", fillcolor = aquamarine, shape = diamond];
0.8 [style = filled, label = "pipelineManager.getPipeline(openPipeline.getId()); <13>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "Assert.assertTrue(\"pipeline should exist\",false); <15>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "ArgumentCaptor<PipelineActionsFromDatanode> actionCaptor = ArgumentCaptor.forClass(); <7>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "DatanodeDetails datanodeDetails = openPipeline.getNodes().get(0); <17>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "XceiverServerRatis xceiverRatis = ((XceiverServerRatis)(cluster.getHddsDatanodes().get(index).getDatanodeStateMachine().getContainer().getWriteChannel())); <19>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "int index = cluster.getHddsDatanodeIndex(datanodeDetails); <18>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "eventQ.addHandler(PIPELINE_ACTIONS,pipelineActionTest); <6>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "RaftGroupId groupId = RaftGroupId.valueOf(openPipeline.getId().getId()); <11>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Mockito.verify(pipelineActionTest,Mockito.timeout(100)).onMessage(actionCaptor.capture(),Mockito.any()); <21>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "PipelineActionsFromDatanode actionsFromDatanode = actionCaptor.getValue(); <22>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="eventQ"];
0.1 -> 0.2 [style = solid, label="pipelineActionTest"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.15 [style = solid, label="pipelineActionTest"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.15 [style = solid, label="actionCaptor"];
0.3 -> 0.16 [style = solid, label="actionCaptor"];
0.4 -> 0.5 [style = solid, label="containerInfo"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="containerWithPipeline"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="openPipeline"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="openPipeline"];
0.6 -> 0.11 [style = solid, label="openPipeline"];
0.6 -> 0.17 [style = solid, label="openPipeline"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.14 [style = solid, label="groupId"];
0.8 -> 0.11 [style = bold, label=""];
0.9 -> 0.10 [style = dotted, label="true"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="datanodeDetails"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = solid, label="index"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = solid, label="xceiverRatis"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = solid, label="actionsFromDatanode"];
0.16 -> 0.17 [style = bold, label=""];
0.18 -> 0.0 [style = dotted, label="true"];
0.18 -> 0.0 [style = bold, label=""];
0.18 -> 0.1 [style = dotted, label="true"];
0.18 -> 0.2 [style = dotted, label="true"];
0.18 -> 0.3 [style = dotted, label="true"];
0.18 -> 0.4 [style = dotted, label="true"];
0.18 -> 0.5 [style = dotted, label="true"];
0.18 -> 0.6 [style = dotted, label="true"];
0.18 -> 0.7 [style = dotted, label="true"];
0.18 -> 0.8 [style = dotted, label="true"];
0.18 -> 0.11 [style = dotted, label="true"];
0.18 -> 0.12 [style = dotted, label="true"];
0.18 -> 0.13 [style = dotted, label="true"];
0.18 -> 0.14 [style = dotted, label="true"];
0.18 -> 0.15 [style = dotted, label="true"];
0.18 -> 0.16 [style = dotted, label="true"];
0.18 -> 0.17 [style = dotted, label="true"];
}
