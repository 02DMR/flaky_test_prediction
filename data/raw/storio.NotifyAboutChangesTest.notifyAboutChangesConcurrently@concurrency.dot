digraph PDG {
label = "notifyAboutChangesConcurrently <3...37>";
0.24 [style = filled, label = "Enter <3...37>", fillcolor = aquamarine, shape = diamond];
0.23 [style = filled, label = "assertThat(expectedChanges.containsAll(testSubscriber.values())).isTrue(); <36>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "expectedChanges.add(Changes.newInstance(table)); <11>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "Thread.yield(); <32>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "new Thread(new Runnable(){
@Override public void run ( ) {
try {
startAllThreadsLock.await();
}catch (catch ( InterruptedException e )) 
storIOSQLite.lowLevel().notifyAboutChanges(Changes.newInstance( ( \"test_table\" + finalI )));
}}).start(); <17...27>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "testSubscriber.assertNoErrors(); <34>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "int i = 0 <8>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "tables.add(table); <10>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "final TestSubscriber<Changes> testSubscriber = new TestSubscriber<Changes>(); <5>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "final int finalI = i; <16>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "final Set<String> tables = new HashSet<String>(); <6>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "storIOSQLite.observeChanges(LATEST).subscribe(testSubscriber); <13>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "final String table =  ( \"test_table\" + i ); <9>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = " ( i < numberOfThreads ) <8>", fillcolor = white, shape = diamond];
0.18 [style = filled, label = "final long startTime = SystemClock.elapsedRealtime(); <30>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "int i = 0 <15>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "final List<Changes> expectedChanges = new ArrayList<Changes>(); <7>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "while  ( ( ( testSubscriber.valueCount() != tables.size() )) && ( ( ( ( SystemClock.elapsedRealtime() - startTime )) < 20000 )) ) <31>", fillcolor = white, shape = diamond];
0.6 [style = filled, label = "i++ <8>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "i++ <15>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "final CountDownLatch startAllThreadsLock = new CountDownLatch(1); <14>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = " ( i < numberOfThreads ) <15>", fillcolor = white, shape = diamond];
0.22 [style = filled, label = "testSubscriber.assertValueCount(expectedChanges.size()); <35>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "startAllThreadsLock.countDown(); <29>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final int numberOfThreads = 100; <4>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.5 [style = solid, label="numberOfThreads"];
0.0 -> 0.13 [style = solid, label="numberOfThreads"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.10 [style = solid, label="testSubscriber"];
0.1 -> 0.19 [style = solid, label="testSubscriber"];
0.1 -> 0.21 [style = solid, label="testSubscriber"];
0.1 -> 0.22 [style = solid, label="testSubscriber"];
0.1 -> 0.23 [style = solid, label="testSubscriber"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="tables"];
0.2 -> 0.19 [style = solid, label="tables"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.9 [style = solid, label="expectedChanges"];
0.3 -> 0.22 [style = solid, label="expectedChanges"];
0.3 -> 0.23 [style = solid, label="expectedChanges"];
0.4 -> 0.5 [style = solid, label="i"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="i"];
0.4 -> 0.7 [style = solid, label="i"];
0.4 -> 0.13 [style = solid, label="i"];
0.4 -> 0.14 [style = solid, label="i"];
0.4 -> 0.15 [style = solid, label="i"];
0.5 -> 0.6 [style = dotted, label="true"];
0.5 -> 0.7 [style = dotted, label="true"];
0.5 -> 0.7 [style = bold, label=""];
0.5 -> 0.8 [style = dotted, label="true"];
0.5 -> 0.9 [style = dotted, label="true"];
0.5 -> 0.10 [style = bold, label=""];
0.6 -> 0.5 [style = solid, label="i"];
0.6 -> 0.5 [style = bold, label=""];
0.6 -> 0.6 [style = solid, label="i"];
0.6 -> 0.7 [style = solid, label="i"];
0.6 -> 0.13 [style = solid, label="i"];
0.6 -> 0.14 [style = solid, label="i"];
0.6 -> 0.15 [style = solid, label="i"];
0.7 -> 0.8 [style = solid, label="table"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="table"];
0.8 -> 0.8 [style = solid, label="tables"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.19 [style = solid, label="tables"];
0.9 -> 0.6 [style = bold, label=""];
0.9 -> 0.9 [style = solid, label="expectedChanges"];
0.9 -> 0.22 [style = solid, label="expectedChanges"];
0.9 -> 0.23 [style = solid, label="expectedChanges"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.16 [style = solid, label="startAllThreadsLock"];
0.11 -> 0.17 [style = solid, label="startAllThreadsLock"];
0.12 -> 0.13 [style = solid, label="i"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.14 [style = solid, label="i"];
0.12 -> 0.15 [style = solid, label="i"];
0.13 -> 0.14 [style = dotted, label="true"];
0.13 -> 0.15 [style = dotted, label="true"];
0.13 -> 0.15 [style = bold, label=""];
0.13 -> 0.16 [style = dotted, label="true"];
0.13 -> 0.17 [style = bold, label=""];
0.14 -> 0.13 [style = solid, label="i"];
0.14 -> 0.13 [style = bold, label=""];
0.14 -> 0.14 [style = solid, label="i"];
0.14 -> 0.15 [style = solid, label="i"];
0.15 -> 0.16 [style = solid, label="finalI"];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.14 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = solid, label="startTime"];
0.18 -> 0.19 [style = bold, label=""];
0.19 -> 0.19 [style = solid, label="tables"];
0.19 -> 0.20 [style = dotted, label="true"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.21 [style = solid, label="testSubscriber"];
0.19 -> 0.21 [style = bold, label=""];
0.19 -> 0.22 [style = solid, label="testSubscriber"];
0.19 -> 0.23 [style = solid, label="testSubscriber"];
0.20 -> 0.19 [style = bold, label=""];
0.21 -> 0.22 [style = solid, label="testSubscriber"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.23 [style = solid, label="testSubscriber"];
0.22 -> 0.23 [style = solid, label="testSubscriber"];
0.22 -> 0.23 [style = bold, label=""];
0.24 -> 0.0 [style = dotted, label="true"];
0.24 -> 0.0 [style = bold, label=""];
0.24 -> 0.1 [style = dotted, label="true"];
0.24 -> 0.2 [style = dotted, label="true"];
0.24 -> 0.3 [style = dotted, label="true"];
0.24 -> 0.4 [style = dotted, label="true"];
0.24 -> 0.5 [style = dotted, label="true"];
0.24 -> 0.10 [style = dotted, label="true"];
0.24 -> 0.11 [style = dotted, label="true"];
0.24 -> 0.12 [style = dotted, label="true"];
0.24 -> 0.13 [style = dotted, label="true"];
0.24 -> 0.17 [style = dotted, label="true"];
0.24 -> 0.18 [style = dotted, label="true"];
0.24 -> 0.19 [style = dotted, label="true"];
0.24 -> 0.21 [style = dotted, label="true"];
0.24 -> 0.22 [style = dotted, label="true"];
0.24 -> 0.23 [style = dotted, label="true"];
}
