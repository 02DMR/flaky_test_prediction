digraph PDG {
label = "shouldComplainIfServerPortIsAlreadyTaken <2...29>";
0.7 [style = filled, label = "assertThat(e.getMessage(),containsString(\"Starting Neo4j failed\")); <17>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "ListenSocketAddress contestedAddress = new ListenSocketAddress(\"localhost\",serverPort); <4>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "AssertableLogProvider logProvider = new AssertableLogProvider(); <7>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "server.stop(); <28>", fillcolor = deeppink, shape = ellipse];
0.4 [style = filled, label = "server.start(); <14>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "int serverPort = PortAuthority.allocatePort(); <3>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "catch ( ServerStartupException e ) <16>", fillcolor = white, shape = diamond];
0.8 [style = filled, label = "logProvider.assertAtLeastOnce(AssertableLogProvider.inLog(containsString(\"CommunityNeoServer\")).error(\"Failed to start Neo4j on %s: %s\",contestedAddress,format(\"Address %s is already in use, cannot bind to it.\",contestedAddress))); <20...26>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "CommunityNeoServer server = CommunityServerBuilder.server(logProvider).onAddress(contestedAddress).usingDataDir(folder.directory(name.getMethodName()).getAbsolutePath()).build(); <8...11>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "fail(\"Should have reported failure to start\"); <15>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "Enter <2...29>", fillcolor = aquamarine, shape = diamond];
0.0 -> 0.1 [style = solid, label="serverPort"];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="contestedAddress"];
0.1 -> 0.8 [style = solid, label="contestedAddress"];
0.2 -> 0.3 [style = solid, label="logProvider"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="logProvider"];
0.3 -> 0.4 [style = solid, label="server"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.9 [style = solid, label="server"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.9 [style = solid, label="server"];
0.5 -> 0.8 [style = bold, label=""];
0.6 -> 0.7 [style = dotted, label="true"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.10 -> 0.0 [style = dotted, label="true"];
0.10 -> 0.0 [style = bold, label=""];
0.10 -> 0.1 [style = dotted, label="true"];
0.10 -> 0.2 [style = dotted, label="true"];
0.10 -> 0.3 [style = dotted, label="true"];
0.10 -> 0.4 [style = dotted, label="true"];
0.10 -> 0.5 [style = dotted, label="true"];
0.10 -> 0.8 [style = dotted, label="true"];
0.10 -> 0.9 [style = dotted, label="true"];
}
