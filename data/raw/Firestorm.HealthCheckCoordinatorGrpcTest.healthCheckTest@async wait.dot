digraph PDG {
label = "healthCheckTest <3...45>";
0.31 [style = filled, label = "ServerNode node <39>", fillcolor = tomato, shape = box];
0.1 [style = filled, label = "Uninterruptibles.sleepUninterruptibly(3,TimeUnit.SECONDS); <5>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "assertEquals(INTERNAL_ERROR,response.getStatusCode()); <28>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "int i = 0; <30>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "tempDataFile.delete(); <29>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "CoordinatorTestUtils.waitForRegister(coordinatorClient,2); <21>", fillcolor = white, shape = ellipse];
0.32 [style = filled, label = "nodes <39>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "if  ( i == 10 ) <35>", fillcolor = white, shape = diamond];
0.19 [style = filled, label = "assertFalse(node.isHealthy()); <24>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "Uninterruptibles.sleepUninterruptibly(3,TimeUnit.SECONDS); <32>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Uninterruptibles.sleepUninterruptibly(3,TimeUnit.SECONDS); <20>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "i++; <34>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "response = coordinatorClient.getShuffleAssignments(request); <43>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "nodes = coordinators.get(0).getClusterManager().getServerList(Sets.newHashSet(SHUFFLE_SERVER_VERSION)); <22>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "fail(); <36>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = " ( nodes.size() != 2 ) <38>", fillcolor = white, shape = diamond];
0.34 [style = filled, label = "assertEquals(2,nodes.size()); <42>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "assertEquals(0,nodes.size()); <26>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "assertTrue(node.isHealthy()); <40>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "RssGetShuffleAssignmentsResponse response = coordinatorClient.getShuffleAssignments(request); <10>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "nodes = coordinators.get(0).getClusterManager().getServerList(Sets.newHashSet(SHUFFLE_SERVER_VERSION)); <33>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "nodes <12>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "byte[] bytes = new byte[][]; <15>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertFalse(response.getPartitionToServers().isEmpty()); <11>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "List<ServerNode> nodes = coordinators.get(0).getClusterManager().getServerList(Sets.newHashSet(SHUFFLE_SERVER_VERSION)); <7>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "assertFalse(response.getPartitionToServers().isEmpty()); <44>", fillcolor = deeppink, shape = ellipse];
0.37 [style = filled, label = "Enter <3...45>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "assertEquals(2,nodes.size()); <9>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertTrue(node.isHealthy()); <13>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "out.write(bytes); <18>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "new Random().nextBytes(bytes); <16>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "nodes <23>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "assertEquals(2,coordinatorClient.getShuffleServerList().getServersCount()); <8>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "RssGetShuffleAssignmentsRequest request = new RssGetShuffleAssignmentsRequest(\"1\",1,1,1,1,Sets.newHashSet(SHUFFLE_SERVER_VERSION)); <4>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "assertEquals(2,coordinatorClient.getShuffleServerList().getServersCount()); <6>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "ServerNode node <12>", fillcolor = tomato, shape = box];
0.17 [style = filled, label = "ServerNode node <23>", fillcolor = tomato, shape = box];
0.21 [style = filled, label = "response = coordinatorClient.getShuffleAssignments(request); <27>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.6 [style = solid, label="request"];
0.0 -> 0.21 [style = solid, label="request"];
0.0 -> 0.35 [style = solid, label="request"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="nodes"];
0.3 -> 0.20 [style = solid, label="nodes"];
0.3 -> 0.30 [style = solid, label="nodes"];
0.3 -> 0.34 [style = solid, label="nodes"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="response"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.22 [style = solid, label="response"];
0.6 -> 0.36 [style = solid, label="response"];
0.7 -> 0.10 [style = bold, label=""];
0.10 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="bytes"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="bytes"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.19 [style = bold, label=""];
0.16 -> 0.20 [style = solid, label="nodes"];
0.16 -> 0.30 [style = solid, label="nodes"];
0.16 -> 0.34 [style = solid, label="nodes"];
0.19 -> 0.19 [style = bold, label=""];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = bold, label=""];
0.21 -> 0.22 [style = solid, label="response"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.35 [style = solid, label="coordinatorClient"];
0.21 -> 0.36 [style = solid, label="response"];
0.22 -> 0.23 [style = bold, label=""];
0.23 -> 0.24 [style = bold, label=""];
0.24 -> 0.25 [style = bold, label=""];
0.24 -> 0.27 [style = solid, label="i"];
0.24 -> 0.28 [style = solid, label="i"];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.26 -> 0.30 [style = solid, label="nodes"];
0.26 -> 0.34 [style = solid, label="nodes"];
0.27 -> 0.27 [style = solid, label="i"];
0.27 -> 0.28 [style = solid, label="i"];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = dotted, label="true"];
0.28 -> 0.29 [style = bold, label=""];
0.28 -> 0.30 [style = bold, label=""];
0.29 -> 0.30 [style = bold, label=""];
0.30 -> 0.25 [style = dotted, label="true"];
0.30 -> 0.25 [style = bold, label=""];
0.30 -> 0.26 [style = dotted, label="true"];
0.30 -> 0.27 [style = dotted, label="true"];
0.30 -> 0.28 [style = dotted, label="true"];
0.30 -> 0.30 [style = solid, label="nodes"];
0.30 -> 0.33 [style = bold, label=""];
0.30 -> 0.34 [style = solid, label="nodes"];
0.33 -> 0.33 [style = bold, label=""];
0.33 -> 0.34 [style = bold, label=""];
0.34 -> 0.35 [style = bold, label=""];
0.35 -> 0.36 [style = solid, label="response"];
0.35 -> 0.36 [style = bold, label=""];
0.37 -> 0.0 [style = dotted, label="true"];
0.37 -> 0.0 [style = bold, label=""];
0.37 -> 0.1 [style = dotted, label="true"];
0.37 -> 0.2 [style = dotted, label="true"];
0.37 -> 0.3 [style = dotted, label="true"];
0.37 -> 0.4 [style = dotted, label="true"];
0.37 -> 0.5 [style = dotted, label="true"];
0.37 -> 0.6 [style = dotted, label="true"];
0.37 -> 0.7 [style = dotted, label="true"];
0.37 -> 0.8 [style = dotted, label="true"];
0.37 -> 0.9 [style = dotted, label="true"];
0.37 -> 0.10 [style = dotted, label="true"];
0.37 -> 0.11 [style = dotted, label="true"];
0.37 -> 0.12 [style = dotted, label="true"];
0.37 -> 0.13 [style = dotted, label="true"];
0.37 -> 0.14 [style = dotted, label="true"];
0.37 -> 0.15 [style = dotted, label="true"];
0.37 -> 0.16 [style = dotted, label="true"];
0.37 -> 0.17 [style = dotted, label="true"];
0.37 -> 0.18 [style = dotted, label="true"];
0.37 -> 0.19 [style = dotted, label="true"];
0.37 -> 0.20 [style = dotted, label="true"];
0.37 -> 0.21 [style = dotted, label="true"];
0.37 -> 0.22 [style = dotted, label="true"];
0.37 -> 0.23 [style = dotted, label="true"];
0.37 -> 0.24 [style = dotted, label="true"];
0.37 -> 0.30 [style = dotted, label="true"];
0.37 -> 0.31 [style = dotted, label="true"];
0.37 -> 0.32 [style = dotted, label="true"];
0.37 -> 0.33 [style = dotted, label="true"];
0.37 -> 0.34 [style = dotted, label="true"];
0.37 -> 0.35 [style = dotted, label="true"];
0.37 -> 0.36 [style = dotted, label="true"];
}
