digraph PDG {
label = "primitivePairs <3...36>";
0.12 [style = filled, label = "Object sampleOne = randomSample(oneType); <16>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "pairType = mapperWithModule().constructType(pairClass); <28>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "pairClass = ; <10>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "Class<?> twoType <6>", fillcolor = tomato, shape = box];
0.0 [style = filled, label = "List<Class<?>> types = Arrays.asList(,,,,,,,,); <4>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "if  ( twoType ==  ) <20>", fillcolor = white, shape = diamond];
0.15 [style = filled, label = "if  ( oneType ==  ) <19>", fillcolor = white, shape = diamond];
0.1 [style = filled, label = "Class<?> oneType <5>", fillcolor = tomato, shape = box];
0.23 [style = filled, label = "Object samplePair = factory.invoke(null,sampleOne,sampleTwo); <31>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "Assert.assertEquals(samplePair,mapperWithModule().readValue(expectedJson,pairType)); <33>", fillcolor = deeppink, shape = ellipse];
0.4 [style = filled, label = "types <6>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "factory = .getMethod(\"pair\",oneType,twoType); <14>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "pairType = mapperWithModule().getTypeFactory().constructParametricType(pairClass,sampleOne.getClass(),sampleTwo.getClass()); <21>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "String expectedJson =  ( ( ( ( ( ( ( \"{\"one\":\" + mapperWithModule().writeValueAsString(sampleOne) )) + \",\"two\":\" )) + mapperWithModule().writeValueAsString(sampleTwo) )) + \"}\" ); <30>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "Assert.assertEquals(expectedJson,mapperWithModule().writeValueAsString(samplePair)); <32>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Method factory; <8>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "pairType = mapperWithModule().getTypeFactory().constructParametricType(pairClass,sampleOne.getClass()); <23>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "JavaType pairType; <18>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "if  ( twoType ==  ) <25>", fillcolor = white, shape = diamond];
0.20 [style = filled, label = "pairType = mapperWithModule().getTypeFactory().constructParametricType(pairClass,sampleTwo.getClass()); <26>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "pairClass = Class.forName( ( ( ( ( ( \"org.eclipse.collections.api.tuple.primitive.\" + capitalize(oneType.getSimpleName()) )) + capitalize(twoType.getSimpleName()) )) + \"Pair\" )); <13>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "factory = .getMethod(\"pair\",,); <11>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Class<?> pairClass; <7>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Object sampleTwo = randomSample(twoType); <17>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "Enter <3...36>", fillcolor = aquamarine, shape = diamond];
0.7 [style = filled, label = "if  ( ( ( oneType ==  )) && ( ( twoType ==  )) ) <9>", fillcolor = white, shape = diamond];
0.2 [style = filled, label = "types <5>", fillcolor = white, shape = ellipse];
0.0 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.17 [style = solid, label="pairClass"];
0.5 -> 0.18 [style = solid, label="pairClass"];
0.5 -> 0.20 [style = solid, label="pairClass"];
0.5 -> 0.21 [style = solid, label="pairClass"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.23 [style = solid, label="factory"];
0.7 -> 0.8 [style = dotted, label="true"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = dotted, label="true"];
0.7 -> 0.10 [style = dotted, label="false"];
0.7 -> 0.10 [style = bold, label=""];
0.7 -> 0.11 [style = dotted, label="false"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.17 [style = solid, label="pairClass"];
0.8 -> 0.18 [style = solid, label="pairClass"];
0.8 -> 0.20 [style = solid, label="pairClass"];
0.8 -> 0.21 [style = solid, label="pairClass"];
0.9 -> 0.12 [style = bold, label=""];
0.9 -> 0.23 [style = solid, label="factory"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.17 [style = solid, label="pairClass"];
0.10 -> 0.18 [style = solid, label="pairClass"];
0.10 -> 0.20 [style = solid, label="pairClass"];
0.10 -> 0.21 [style = solid, label="pairClass"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.23 [style = solid, label="factory"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.17 [style = solid, label="sampleOne"];
0.12 -> 0.18 [style = solid, label="sampleOne"];
0.12 -> 0.22 [style = solid, label="sampleOne"];
0.12 -> 0.23 [style = solid, label="sampleOne"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.17 [style = solid, label="sampleTwo"];
0.13 -> 0.20 [style = solid, label="sampleTwo"];
0.13 -> 0.22 [style = solid, label="sampleTwo"];
0.13 -> 0.23 [style = solid, label="sampleTwo"];
0.14 -> 0.15 [style = bold, label=""];
0.14 -> 0.25 [style = solid, label="pairType"];
0.15 -> 0.16 [style = dotted, label="true"];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.19 [style = dotted, label="false"];
0.15 -> 0.19 [style = bold, label=""];
0.16 -> 0.17 [style = dotted, label="true"];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.18 [style = dotted, label="false"];
0.16 -> 0.18 [style = bold, label=""];
0.17 -> 0.22 [style = bold, label=""];
0.17 -> 0.25 [style = solid, label="pairType"];
0.18 -> 0.22 [style = bold, label=""];
0.18 -> 0.25 [style = solid, label="pairType"];
0.19 -> 0.20 [style = dotted, label="true"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.21 [style = dotted, label="false"];
0.19 -> 0.21 [style = bold, label=""];
0.20 -> 0.22 [style = bold, label=""];
0.20 -> 0.25 [style = solid, label="pairType"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.25 [style = solid, label="pairType"];
0.22 -> 0.23 [style = bold, label=""];
0.22 -> 0.24 [style = solid, label="expectedJson"];
0.22 -> 0.25 [style = solid, label="expectedJson"];
0.23 -> 0.24 [style = solid, label="samplePair"];
0.23 -> 0.24 [style = bold, label=""];
0.23 -> 0.25 [style = solid, label="samplePair"];
0.24 -> 0.25 [style = bold, label=""];
0.25 -> 0.5 [style = bold, label=""];
0.26 -> 0.0 [style = dotted, label="true"];
0.26 -> 0.0 [style = bold, label=""];
0.26 -> 0.1 [style = dotted, label="true"];
0.26 -> 0.2 [style = dotted, label="true"];
0.26 -> 0.3 [style = dotted, label="true"];
0.26 -> 0.4 [style = dotted, label="true"];
0.26 -> 0.5 [style = dotted, label="true"];
0.26 -> 0.6 [style = dotted, label="true"];
0.26 -> 0.7 [style = dotted, label="true"];
0.26 -> 0.12 [style = dotted, label="true"];
0.26 -> 0.13 [style = dotted, label="true"];
0.26 -> 0.14 [style = dotted, label="true"];
0.26 -> 0.15 [style = dotted, label="true"];
0.26 -> 0.22 [style = dotted, label="true"];
0.26 -> 0.23 [style = dotted, label="true"];
0.26 -> 0.24 [style = dotted, label="true"];
0.26 -> 0.25 [style = dotted, label="true"];
}
