digraph PDG {
label = "udpV4 <3...73>";
0.20 [style = filled, label = "byteBuf.readInt(); <39>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "assertEquals(0xa1b2c3d4,byteBuf.readInt()); <31>", fillcolor = white, shape = ellipse];
0.41 [style = filled, label = "assertEquals( ( cltAddr.getPort() & 0xffff ),udpPacket.readUnsignedShort()); <60>", fillcolor = white, shape = ellipse];
0.48 [style = filled, label = "assertTrue(srcMac.release()); <67>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "assertEquals(0x00,ipv4Packet.readByte()); <50>", fillcolor = white, shape = ellipse];
0.43 [style = filled, label = "assertEquals(12,udpPacket.readShort()); <62>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "ByteBuf ethernetPacket = byteBuf.readBytes(46); <42>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "assertEquals(0,byteBuf.readInt()); <35>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "assertEquals(0x0000,ipv4Packet.readShort()); <52>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "ByteBuf dstMac = ethernetPacket.readBytes(6); <43>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "assertEquals(46,byteBuf.readInt()); <41>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "assertEquals(1,byteBuf.readInt()); <37>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "byteBuf.readInt(); <38>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertTrue(eventLoopGroup.shutdownGracefully().sync().isSuccess()); <30>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "assertEquals(0x0000,ipv4Packet.readShort()); <53>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "assertArrayEquals(new byte[][]com.propertygraph.pe.ExpressionInfo@1a301,ByteBufUtil.getBytes(dstMac)); <45>", fillcolor = white, shape = ellipse];
0.50 [style = filled, label = "assertTrue(byteBuf.release()); <69>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "assertEquals((byte)17,ipv4Packet.readByte()); <55>", fillcolor = white, shape = ellipse];
0.39 [style = filled, label = "assertEquals(NetUtil.ipv4AddressToInt((Inet4Address)cltAddr.getAddress()),ipv4Packet.readInt()); <58>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "ByteBuf srcMac = ethernetPacket.readBytes(6); <44>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "assertEquals((byte)0xff,ipv4Packet.readByte()); <54>", fillcolor = white, shape = ellipse];
0.49 [style = filled, label = "assertTrue(payload.release()); <68>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "NioEventLoopGroup eventLoopGroup = new NioEventLoopGroup(2); <8>", fillcolor = white, shape = ellipse];
0.37 [style = filled, label = "assertEquals(0,ipv4Packet.readShort()); <56>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "assertArrayEquals(new byte[][]com.propertygraph.pe.ExpressionInfo@1a313,ByteBufUtil.getBytes(srcMac)); <46>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "assertEquals(2,byteBuf.readShort()); <32>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "assertEquals(4,byteBuf.readShort()); <33>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "assertEquals(46,byteBuf.readInt()); <40>", fillcolor = white, shape = ellipse];
0.51 [style = filled, label = "assertTrue(ethernetPacket.release()); <70>", fillcolor = white, shape = ellipse];
0.53 [style = filled, label = "assertTrue(udpPacket.release()); <72>", fillcolor = deeppink, shape = ellipse];
0.0 [style = filled, label = "ByteBuf byteBuf = Unpooled.buffer(); <5>", fillcolor = white, shape = ellipse];
0.44 [style = filled, label = "assertEquals(0x0001,udpPacket.readShort()); <63>", fillcolor = white, shape = ellipse];
0.47 [style = filled, label = "assertTrue(dstMac.release()); <66>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "ChannelFuture channelFutureClient = client.connect(srvAddr,cltAddr).sync(); <26>", fillcolor = white, shape = ellipse];
0.40 [style = filled, label = "ByteBuf udpPacket = ipv4Packet.readBytes(12); <59>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "InetSocketAddress srvAddr = new InetSocketAddress(\"127.0.0.1\",62001); <6>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertTrue(channelFutureServer.isSuccess()); <20>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertTrue(channelFutureClient.isSuccess()); <27>", fillcolor = white, shape = ellipse];
0.42 [style = filled, label = "assertEquals( ( srvAddr.getPort() & 0xffff ),udpPacket.readUnsignedShort()); <61>", fillcolor = white, shape = ellipse];
0.54 [style = filled, label = "Enter <3...73>", fillcolor = aquamarine, shape = diamond];
0.46 [style = filled, label = "assertArrayEquals(\"Meow\".getBytes(CharsetUtil.UTF_8),ByteBufUtil.getBytes(payload)); <65>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "assertEquals(0x45,ipv4Packet.readByte()); <49>", fillcolor = white, shape = ellipse];
0.45 [style = filled, label = "ByteBuf payload = udpPacket.readBytes(4); <64>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "assertEquals(0xffff,byteBuf.readInt()); <36>", fillcolor = white, shape = ellipse];
0.52 [style = filled, label = "assertTrue(ipv4Packet.release()); <71>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "ByteBuf ipv4Packet = ethernetPacket.readBytes(32); <48>", fillcolor = white, shape = ellipse];
0.38 [style = filled, label = "assertEquals(NetUtil.ipv4AddressToInt((Inet4Address)srvAddr.getAddress()),ipv4Packet.readInt()); <57>", fillcolor = white, shape = ellipse];
0.32 [style = filled, label = "assertEquals(32,ipv4Packet.readShort()); <51>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Bootstrap client = new Bootstrap().group(eventLoopGroup).channel().handler(new PcapWriteHandler(new ByteBufOutputStream(byteBuf))); <21...24>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "ChannelFuture channelFutureServer = server.bind(srvAddr).sync(); <19>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Bootstrap server = new Bootstrap().group(eventLoopGroup).channel().handler(new SimpleChannelInboundHandler<DatagramPacket>(){
@Override protected void channelRead0 (ChannelHandlerContext ctx ,DatagramPacket msg  ) {
}}); <9...17>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertTrue(channelFutureClient.channel().writeAndFlush(Unpooled.wrappedBuffer(\"Meow\".getBytes())).sync().isSuccess()); <28...29>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "InetSocketAddress cltAddr = new InetSocketAddress(\"127.0.0.1\",62002); <7>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "assertEquals(0,byteBuf.readInt()); <34>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "assertEquals(0x0800,ethernetPacket.readShort()); <47>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.7 [style = solid, label="byteBuf"];
0.0 -> 0.12 [style = solid, label="byteBuf"];
0.0 -> 0.13 [style = solid, label="byteBuf"];
0.0 -> 0.14 [style = solid, label="byteBuf"];
0.0 -> 0.15 [style = solid, label="byteBuf"];
0.0 -> 0.16 [style = solid, label="byteBuf"];
0.0 -> 0.17 [style = solid, label="byteBuf"];
0.0 -> 0.18 [style = solid, label="byteBuf"];
0.0 -> 0.19 [style = solid, label="byteBuf"];
0.0 -> 0.20 [style = solid, label="byteBuf"];
0.0 -> 0.21 [style = solid, label="byteBuf"];
0.0 -> 0.22 [style = solid, label="byteBuf"];
0.0 -> 0.23 [style = solid, label="byteBuf"];
0.0 -> 0.50 [style = solid, label="byteBuf"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="srvAddr"];
0.1 -> 0.8 [style = solid, label="srvAddr"];
0.1 -> 0.38 [style = solid, label="srvAddr"];
0.1 -> 0.42 [style = solid, label="srvAddr"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="cltAddr"];
0.2 -> 0.39 [style = solid, label="cltAddr"];
0.2 -> 0.41 [style = solid, label="cltAddr"];
0.3 -> 0.4 [style = solid, label="eventLoopGroup"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.7 [style = solid, label="eventLoopGroup"];
0.3 -> 0.11 [style = solid, label="eventLoopGroup"];
0.4 -> 0.5 [style = solid, label="server"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="channelFutureServer"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="client"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = solid, label="channelFutureClient"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="channelFutureClient"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = bold, label=""];
0.19 -> 0.20 [style = solid, label="byteBuf"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.21 [style = solid, label="byteBuf"];
0.19 -> 0.22 [style = solid, label="byteBuf"];
0.19 -> 0.23 [style = solid, label="byteBuf"];
0.19 -> 0.50 [style = solid, label="byteBuf"];
0.20 -> 0.21 [style = solid, label="byteBuf"];
0.20 -> 0.21 [style = bold, label=""];
0.20 -> 0.22 [style = solid, label="byteBuf"];
0.20 -> 0.23 [style = solid, label="byteBuf"];
0.20 -> 0.50 [style = solid, label="byteBuf"];
0.21 -> 0.22 [style = bold, label=""];
0.22 -> 0.23 [style = bold, label=""];
0.23 -> 0.24 [style = solid, label="ethernetPacket"];
0.23 -> 0.24 [style = bold, label=""];
0.23 -> 0.25 [style = solid, label="ethernetPacket"];
0.23 -> 0.28 [style = solid, label="ethernetPacket"];
0.23 -> 0.29 [style = solid, label="ethernetPacket"];
0.23 -> 0.51 [style = solid, label="ethernetPacket"];
0.24 -> 0.25 [style = bold, label=""];
0.24 -> 0.26 [style = solid, label="dstMac"];
0.24 -> 0.47 [style = solid, label="dstMac"];
0.25 -> 0.26 [style = bold, label=""];
0.25 -> 0.27 [style = solid, label="srcMac"];
0.25 -> 0.48 [style = solid, label="srcMac"];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = bold, label=""];
0.29 -> 0.30 [style = solid, label="ipv4Packet"];
0.29 -> 0.30 [style = bold, label=""];
0.29 -> 0.31 [style = solid, label="ipv4Packet"];
0.29 -> 0.32 [style = solid, label="ipv4Packet"];
0.29 -> 0.33 [style = solid, label="ipv4Packet"];
0.29 -> 0.34 [style = solid, label="ipv4Packet"];
0.29 -> 0.35 [style = solid, label="ipv4Packet"];
0.29 -> 0.36 [style = solid, label="ipv4Packet"];
0.29 -> 0.37 [style = solid, label="ipv4Packet"];
0.29 -> 0.38 [style = solid, label="ipv4Packet"];
0.29 -> 0.39 [style = solid, label="ipv4Packet"];
0.29 -> 0.40 [style = solid, label="ipv4Packet"];
0.29 -> 0.52 [style = solid, label="ipv4Packet"];
0.30 -> 0.31 [style = bold, label=""];
0.31 -> 0.32 [style = bold, label=""];
0.32 -> 0.33 [style = bold, label=""];
0.33 -> 0.34 [style = bold, label=""];
0.34 -> 0.35 [style = bold, label=""];
0.35 -> 0.36 [style = bold, label=""];
0.36 -> 0.37 [style = bold, label=""];
0.37 -> 0.38 [style = bold, label=""];
0.38 -> 0.39 [style = bold, label=""];
0.39 -> 0.40 [style = bold, label=""];
0.40 -> 0.41 [style = solid, label="udpPacket"];
0.40 -> 0.41 [style = bold, label=""];
0.40 -> 0.42 [style = solid, label="udpPacket"];
0.40 -> 0.43 [style = solid, label="udpPacket"];
0.40 -> 0.44 [style = solid, label="udpPacket"];
0.40 -> 0.45 [style = solid, label="udpPacket"];
0.40 -> 0.53 [style = solid, label="udpPacket"];
0.41 -> 0.42 [style = bold, label=""];
0.42 -> 0.43 [style = bold, label=""];
0.43 -> 0.44 [style = bold, label=""];
0.44 -> 0.45 [style = bold, label=""];
0.45 -> 0.46 [style = solid, label="payload"];
0.45 -> 0.46 [style = bold, label=""];
0.45 -> 0.49 [style = solid, label="payload"];
0.46 -> 0.47 [style = bold, label=""];
0.47 -> 0.48 [style = bold, label=""];
0.48 -> 0.49 [style = bold, label=""];
0.49 -> 0.50 [style = bold, label=""];
0.50 -> 0.51 [style = bold, label=""];
0.51 -> 0.52 [style = bold, label=""];
0.52 -> 0.53 [style = bold, label=""];
0.54 -> 0.0 [style = dotted, label="true"];
0.54 -> 0.0 [style = bold, label=""];
0.54 -> 0.1 [style = dotted, label="true"];
0.54 -> 0.2 [style = dotted, label="true"];
0.54 -> 0.3 [style = dotted, label="true"];
0.54 -> 0.4 [style = dotted, label="true"];
0.54 -> 0.5 [style = dotted, label="true"];
0.54 -> 0.6 [style = dotted, label="true"];
0.54 -> 0.7 [style = dotted, label="true"];
0.54 -> 0.8 [style = dotted, label="true"];
0.54 -> 0.9 [style = dotted, label="true"];
0.54 -> 0.10 [style = dotted, label="true"];
0.54 -> 0.11 [style = dotted, label="true"];
0.54 -> 0.12 [style = dotted, label="true"];
0.54 -> 0.13 [style = dotted, label="true"];
0.54 -> 0.14 [style = dotted, label="true"];
0.54 -> 0.15 [style = dotted, label="true"];
0.54 -> 0.16 [style = dotted, label="true"];
0.54 -> 0.17 [style = dotted, label="true"];
0.54 -> 0.18 [style = dotted, label="true"];
0.54 -> 0.19 [style = dotted, label="true"];
0.54 -> 0.20 [style = dotted, label="true"];
0.54 -> 0.21 [style = dotted, label="true"];
0.54 -> 0.22 [style = dotted, label="true"];
0.54 -> 0.23 [style = dotted, label="true"];
0.54 -> 0.24 [style = dotted, label="true"];
0.54 -> 0.25 [style = dotted, label="true"];
0.54 -> 0.26 [style = dotted, label="true"];
0.54 -> 0.27 [style = dotted, label="true"];
0.54 -> 0.28 [style = dotted, label="true"];
0.54 -> 0.29 [style = dotted, label="true"];
0.54 -> 0.30 [style = dotted, label="true"];
0.54 -> 0.31 [style = dotted, label="true"];
0.54 -> 0.32 [style = dotted, label="true"];
0.54 -> 0.33 [style = dotted, label="true"];
0.54 -> 0.34 [style = dotted, label="true"];
0.54 -> 0.35 [style = dotted, label="true"];
0.54 -> 0.36 [style = dotted, label="true"];
0.54 -> 0.37 [style = dotted, label="true"];
0.54 -> 0.38 [style = dotted, label="true"];
0.54 -> 0.39 [style = dotted, label="true"];
0.54 -> 0.40 [style = dotted, label="true"];
0.54 -> 0.41 [style = dotted, label="true"];
0.54 -> 0.42 [style = dotted, label="true"];
0.54 -> 0.43 [style = dotted, label="true"];
0.54 -> 0.44 [style = dotted, label="true"];
0.54 -> 0.45 [style = dotted, label="true"];
0.54 -> 0.46 [style = dotted, label="true"];
0.54 -> 0.47 [style = dotted, label="true"];
0.54 -> 0.48 [style = dotted, label="true"];
0.54 -> 0.49 [style = dotted, label="true"];
0.54 -> 0.50 [style = dotted, label="true"];
0.54 -> 0.51 [style = dotted, label="true"];
0.54 -> 0.52 [style = dotted, label="true"];
0.54 -> 0.53 [style = dotted, label="true"];
}
