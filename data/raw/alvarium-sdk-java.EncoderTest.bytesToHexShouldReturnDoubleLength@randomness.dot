digraph PDG {
label = "bytesToHexShouldReturnDoubleLength <4...11>";
0.0 [style = filled, label = "int i = 0 <5>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Enter <4...11>", fillcolor = aquamarine, shape = diamond];
0.1 [style = filled, label = " ( i < 20 ) <5>", fillcolor = deeppink, shape = diamond];
0.4 [style = filled, label = "SecureRandom.getInstanceStrong().nextBytes(data); <7>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertEquals( ( data.length * 2 ),hexResult.length()); <9>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "String hexResult = Encoder.bytesToHex(data); <8>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "i++ <5>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "byte[] data = new byte[][]; <6>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="i"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="i"];
0.1 -> 0.2 [style = dotted, label="true"];
0.1 -> 0.3 [style = dotted, label="true"];
0.1 -> 0.3 [style = bold, label=""];
0.1 -> 0.4 [style = dotted, label="true"];
0.1 -> 0.5 [style = dotted, label="true"];
0.1 -> 0.6 [style = dotted, label="true"];
0.2 -> 0.1 [style = solid, label="i"];
0.2 -> 0.1 [style = bold, label=""];
0.2 -> 0.2 [style = solid, label="i"];
0.3 -> 0.4 [style = solid, label="data"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="data"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="hexResult"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.2 [style = bold, label=""];
0.7 -> 0.0 [style = dotted, label="true"];
0.7 -> 0.0 [style = bold, label=""];
0.7 -> 0.1 [style = dotted, label="true"];
}
