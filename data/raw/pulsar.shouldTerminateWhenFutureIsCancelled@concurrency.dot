digraph PDG {
label = "shouldTerminateWhenFutureIsCancelled <3...42>";
0.3 [style = filled, label = "when(executorService.isShutdown()).thenReturn(true); <8>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "CompletableFuture<Void> future = shutdown.handle(); <35>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "verify(executorService,times(1)).awaitTermination(anyLong(),any()); <40>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "verify(executorService,times(1)).shutdownNow(); <41>", fillcolor = deeppink, shape = ellipse];
0.2 [style = filled, label = "ExecutorService executorService = mock(); <7>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "shutdown.shutdown(executorService); <34>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "shutdown.timeout(Duration.ofMillis(15000)); <6>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "when(executorService.awaitTermination(anyLong(),any())).thenAnswer(null); <14...28>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "when(executorService.shutdownNow()).thenAnswer(null); <29...32>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Awaitility.await().untilAsserted(null); <37...38>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "GracefulExecutorServicesShutdown shutdown = GracefulExecutorServicesShutdown.initiate(); <5>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "when(executorService.isTerminated()).thenAnswer(null); <12>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Enter <3...42>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "AtomicBoolean awaitTerminationInterrupted = new AtomicBoolean(); <10>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "AtomicBoolean terminated = new AtomicBoolean(); <9>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "future.cancel(false); <36>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="shutdown"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.9 [style = solid, label="shutdown"];
0.0 -> 0.10 [style = solid, label="shutdown"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.9 [style = solid, label="shutdown"];
0.1 -> 0.10 [style = solid, label="shutdown"];
0.2 -> 0.3 [style = solid, label="executorService"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.6 [style = solid, label="executorService"];
0.2 -> 0.7 [style = solid, label="executorService"];
0.2 -> 0.8 [style = solid, label="executorService"];
0.2 -> 0.9 [style = solid, label="executorService"];
0.2 -> 0.13 [style = solid, label="executorService"];
0.2 -> 0.14 [style = solid, label="executorService"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = solid, label="shutdown"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="future"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.15 -> 0.0 [style = dotted, label="true"];
0.15 -> 0.0 [style = bold, label=""];
0.15 -> 0.1 [style = dotted, label="true"];
0.15 -> 0.2 [style = dotted, label="true"];
0.15 -> 0.3 [style = dotted, label="true"];
0.15 -> 0.4 [style = dotted, label="true"];
0.15 -> 0.5 [style = dotted, label="true"];
0.15 -> 0.6 [style = dotted, label="true"];
0.15 -> 0.7 [style = dotted, label="true"];
0.15 -> 0.8 [style = dotted, label="true"];
0.15 -> 0.9 [style = dotted, label="true"];
0.15 -> 0.10 [style = dotted, label="true"];
0.15 -> 0.11 [style = dotted, label="true"];
0.15 -> 0.12 [style = dotted, label="true"];
0.15 -> 0.13 [style = dotted, label="true"];
0.15 -> 0.14 [style = dotted, label="true"];
}
