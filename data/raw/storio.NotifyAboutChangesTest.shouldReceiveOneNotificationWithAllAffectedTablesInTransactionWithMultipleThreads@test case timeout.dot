digraph PDG {
label = "shouldReceiveOneNotificationWithAllAffectedTablesInTransactionWithMultipleThreads <3...36>";
0.16 [style = filled, label = "lowLevel.endTransaction(); <31>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "List<Changes> actualChanges = testSubscriber.values(); <33>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "lowLevel.beginTransaction(); <10>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "i++ <13>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "startAllThreadsLock.countDown(); <28>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final String table1 = \"test_table1\"; <4>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "testSubscriber.assertValueCount(0); <30>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "final TestSubscriber<Changes> testSubscriber = new TestSubscriber<Changes>(); <7>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "Enter <3...36>", fillcolor = aquamarine, shape = diamond];
0.9 [style = filled, label = "int i = 0 <13>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "final String table2 = \"test_table2\"; <5>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "new Thread(new Runnable(){
@Override public void run ( ) {
try {
startAllThreadsLock.await();
}catch (catch ( InterruptedException e )) 
lowLevel.notifyAboutChanges(Changes.newInstance(table1));
lowLevel.notifyAboutChanges(Changes.newInstance(table2));
allThreadsFinishedLock.countDown();
}}).start(); <14...26>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "final CountDownLatch startAllThreadsLock = new CountDownLatch(1); <11>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "final StorIOSQLite.LowLevel lowLevel = storIOSQLite.lowLevel(); <9>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "assertThat(actualChanges.get(0).affectedTables()).containsOnly(\"test_table1\",\"test_table2\"); <35>", fillcolor = deeppink, shape = ellipse];
0.10 [style = filled, label = " ( i < numberOfThreads ) <13>", fillcolor = white, shape = diamond];
0.17 [style = filled, label = "testSubscriber.assertNoErrors(); <32>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "assertThat(actualChanges).hasSize(1); <34>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "storIOSQLite.observeChanges(LATEST).subscribe(testSubscriber); <8>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "final int numberOfThreads = ConcurrencyTesting.optimalTestThreadsCount(); <6>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "final CountDownLatch allThreadsFinishedLock = new CountDownLatch(numberOfThreads); <12>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "assertThat(allThreadsFinishedLock.await(25,SECONDS)).isTrue(); <29>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.12 [style = solid, label="table1"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.12 [style = solid, label="table2"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="numberOfThreads"];
0.2 -> 0.10 [style = solid, label="numberOfThreads"];
0.3 -> 0.4 [style = solid, label="testSubscriber"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.15 [style = solid, label="testSubscriber"];
0.3 -> 0.17 [style = solid, label="testSubscriber"];
0.3 -> 0.18 [style = solid, label="testSubscriber"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="lowLevel"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.12 [style = solid, label="lowLevel"];
0.5 -> 0.16 [style = solid, label="lowLevel"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.12 [style = solid, label="lowLevel"];
0.6 -> 0.16 [style = solid, label="lowLevel"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.12 [style = solid, label="startAllThreadsLock"];
0.7 -> 0.13 [style = solid, label="startAllThreadsLock"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.12 [style = solid, label="allThreadsFinishedLock"];
0.8 -> 0.14 [style = solid, label="allThreadsFinishedLock"];
0.9 -> 0.10 [style = solid, label="i"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="i"];
0.10 -> 0.11 [style = dotted, label="true"];
0.10 -> 0.12 [style = dotted, label="true"];
0.10 -> 0.12 [style = bold, label=""];
0.10 -> 0.13 [style = bold, label=""];
0.11 -> 0.10 [style = solid, label="i"];
0.11 -> 0.10 [style = bold, label=""];
0.11 -> 0.11 [style = solid, label="i"];
0.12 -> 0.11 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.17 [style = solid, label="testSubscriber"];
0.15 -> 0.18 [style = solid, label="testSubscriber"];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = solid, label="testSubscriber"];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = solid, label="actualChanges"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.20 [style = solid, label="actualChanges"];
0.19 -> 0.20 [style = bold, label=""];
0.21 -> 0.0 [style = dotted, label="true"];
0.21 -> 0.0 [style = bold, label=""];
0.21 -> 0.1 [style = dotted, label="true"];
0.21 -> 0.2 [style = dotted, label="true"];
0.21 -> 0.3 [style = dotted, label="true"];
0.21 -> 0.4 [style = dotted, label="true"];
0.21 -> 0.5 [style = dotted, label="true"];
0.21 -> 0.6 [style = dotted, label="true"];
0.21 -> 0.7 [style = dotted, label="true"];
0.21 -> 0.8 [style = dotted, label="true"];
0.21 -> 0.9 [style = dotted, label="true"];
0.21 -> 0.10 [style = dotted, label="true"];
0.21 -> 0.13 [style = dotted, label="true"];
0.21 -> 0.14 [style = dotted, label="true"];
0.21 -> 0.15 [style = dotted, label="true"];
0.21 -> 0.16 [style = dotted, label="true"];
0.21 -> 0.17 [style = dotted, label="true"];
0.21 -> 0.18 [style = dotted, label="true"];
0.21 -> 0.19 [style = dotted, label="true"];
0.21 -> 0.20 [style = dotted, label="true"];
}
