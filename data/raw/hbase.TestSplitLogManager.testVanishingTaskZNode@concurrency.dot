digraph PDG {
label = "testVanishingTaskZNode <3...37>";
0.19 [style = filled, label = "Enter <3...37>", fillcolor = aquamarine, shape = diamond];
0.15 [style = filled, label = "waitForCounter(tot_mgr_get_data_nonode,0,1,30000); <28>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "waitForCounter(tot_mgr_node_create_result,0,1,10000); <25>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "FileSystem fs = TEST_UTIL.getTestFileSystem(); <8>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "thread.start(); <24>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "thread = new Thread(){
public void run ( ) {
try {
slm.splitLogDistributed(logDir);
}catch (catch ( Exception e )) 
}}; <15...23>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "conf.setInt(\"hbase.splitlog.manager.unassigned.timeout\",0); <5>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "slm = new SplitLogManager(zkw,conf,stopper,\"dummy-master\",null); <6>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "{
if ( ( thread != null )) {
thread.interrupt();
}
fs.delete(logDir,true);
} <31...36>", fillcolor = deeppink, shape = ellipse];
0.16 [style = filled, label = "waitForCounter(tot_mgr_log_split_batch_success,0,1,1000); <29>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "fs.createNewFile(logFile); <14>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Path logFile = new Path(logDir,UUID.randomUUID().toString()); <13>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "String znode = ZKSplitLog.getEncodedNodeName(zkw,logFile.toString()); <26>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "fs.mkdirs(logDir); <10>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "LOG.info(\"testVanishingTaskZNode\"); <4>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "final Path logDir = new Path(fs.getWorkingDirectory(),UUID.randomUUID().toString()); <9>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Thread thread = null; <11>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "ZKUtil.deleteNode(zkw,znode); <27>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "assertTrue(fs.exists(logFile)); <30>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "slm.finishInitialization(); <7>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = solid, label="conf"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = solid, label="slm"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.10 [style = solid, label="slm"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.10 [style = solid, label="slm"];
0.4 -> 0.5 [style = solid, label="fs"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="fs"];
0.4 -> 0.9 [style = solid, label="fs"];
0.4 -> 0.17 [style = solid, label="fs"];
0.4 -> 0.18 [style = solid, label="fs"];
0.5 -> 0.6 [style = solid, label="logDir"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.8 [style = solid, label="logDir"];
0.5 -> 0.10 [style = solid, label="logDir"];
0.5 -> 0.18 [style = solid, label="logDir"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.9 [style = solid, label="fs"];
0.6 -> 0.17 [style = solid, label="fs"];
0.6 -> 0.18 [style = solid, label="fs"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.11 [style = solid, label="thread"];
0.7 -> 0.18 [style = solid, label="thread"];
0.8 -> 0.9 [style = solid, label="logFile"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.13 [style = solid, label="logFile"];
0.8 -> 0.17 [style = solid, label="logFile"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.17 [style = solid, label="fs"];
0.9 -> 0.18 [style = solid, label="fs"];
0.10 -> 0.11 [style = solid, label="thread"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.18 [style = solid, label="thread"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.18 [style = solid, label="thread"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = solid, label="znode"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.19 -> 0.0 [style = dotted, label="true"];
0.19 -> 0.0 [style = bold, label=""];
0.19 -> 0.1 [style = dotted, label="true"];
0.19 -> 0.2 [style = dotted, label="true"];
0.19 -> 0.3 [style = dotted, label="true"];
0.19 -> 0.4 [style = dotted, label="true"];
0.19 -> 0.5 [style = dotted, label="true"];
0.19 -> 0.6 [style = dotted, label="true"];
0.19 -> 0.7 [style = dotted, label="true"];
0.19 -> 0.8 [style = dotted, label="true"];
0.19 -> 0.9 [style = dotted, label="true"];
0.19 -> 0.10 [style = dotted, label="true"];
0.19 -> 0.11 [style = dotted, label="true"];
0.19 -> 0.12 [style = dotted, label="true"];
0.19 -> 0.13 [style = dotted, label="true"];
0.19 -> 0.14 [style = dotted, label="true"];
0.19 -> 0.15 [style = dotted, label="true"];
0.19 -> 0.16 [style = dotted, label="true"];
0.19 -> 0.17 [style = dotted, label="true"];
}
