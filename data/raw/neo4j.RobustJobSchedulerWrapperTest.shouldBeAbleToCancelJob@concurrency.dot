digraph PDG {
label = "shouldBeAbleToCancelJob <3...12>";
0.7 [style = filled, label = "assertEquals(finalCount,count.get()); <11>", fillcolor = deeppink, shape = ellipse];
0.6 [style = filled, label = "Thread.sleep(50); <10>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "robustWrapper.cancelAndWaitTermination(jobHandle); <8>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Enter <3...12>", fillcolor = aquamarine, shape = diamond];
0.0 [style = filled, label = "RobustJobSchedulerWrapper robustWrapper = new RobustJobSchedulerWrapper(actualScheduler,log); <4>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "assertEventually(\"run count\",null,Matchers.greaterThanOrEqualTo(100),DEFAULT_TIMEOUT_MS,MILLISECONDS); <7>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "JobHandle jobHandle = robustWrapper.scheduleRecurring(\"JobName\",1,null); <6>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "AtomicInteger count = new AtomicInteger(); <5>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "int finalCount = count.get(); <9>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="robustWrapper"];
0.0 -> 0.4 [style = solid, label="robustWrapper"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="count"];
0.1 -> 0.7 [style = solid, label="count"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="jobHandle"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="finalCount"];
0.6 -> 0.7 [style = bold, label=""];
0.8 -> 0.0 [style = dotted, label="true"];
0.8 -> 0.0 [style = bold, label=""];
0.8 -> 0.1 [style = dotted, label="true"];
0.8 -> 0.2 [style = dotted, label="true"];
0.8 -> 0.3 [style = dotted, label="true"];
0.8 -> 0.4 [style = dotted, label="true"];
0.8 -> 0.5 [style = dotted, label="true"];
0.8 -> 0.6 [style = dotted, label="true"];
0.8 -> 0.7 [style = dotted, label="true"];
}
