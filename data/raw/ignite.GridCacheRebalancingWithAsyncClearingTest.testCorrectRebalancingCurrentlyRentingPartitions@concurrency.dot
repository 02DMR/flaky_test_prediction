digraph PDG {
label = "testCorrectRebalancingCurrentlyRentingPartitions <3...30>";
0.3 [style = filled, label = "log.info(\"Writing initial data...\"); <8>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "log.info(\"Writing initial data finished.\"); <16>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "k++ <10>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "if  ( ( ( k % 10000 )) == 0 ) <12>", fillcolor = white, shape = diamond];
0.16 [style = filled, label = "stopGrid(1); <22>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = " ( k <= keysCnt ) <10>", fillcolor = white, shape = diamond];
0.2 [style = filled, label = "final int keysCnt = SF.applyLB(300000,10000); <6>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "int k = 1 <25>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "resetBaselineTopology(); <19>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "Integer val = ((Integer)(ignite.cache(CACHE_NAME).get(k))); <26>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "awaitPartitionMapExchange(); <24>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "startGrid(3); <18>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "Assert.assertEquals( ( ( ( ( ( \"Check failed for \" + k )) + \" = \" )) + val ),k,((int)(val))); <28>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "ignite.cluster().active(true); <5>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "Enter <3...30>", fillcolor = aquamarine, shape = diamond];
0.4 [style = filled, label = "ds.allowOverwrite(true); <9>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "stopGrid(3); <20>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "k++ <25>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "startGrid(1); <23>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "int k = 1 <10>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = " ( k <= keysCnt ) <25>", fillcolor = deeppink, shape = diamond];
0.15 [style = filled, label = "resetBaselineTopology(); <21>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "Assert.assertNotNull( ( ( ( \"Value for \" + k )) + \" is null\" ),val); <27>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "IgniteEx ignite = ((IgniteEx)(startGrids(3))); <4>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "log.info( ( ( ( \"Written \" + k )) + \" entities.\" )); <13>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "ds.addData(k,k); <11>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="ignite"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.22 [style = solid, label="ignite"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.6 [style = solid, label="keysCnt"];
0.2 -> 0.20 [style = solid, label="keysCnt"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.10 [style = solid, label="log"];
0.3 -> 0.11 [style = solid, label="log"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.8 [style = solid, label="ds"];
0.5 -> 0.6 [style = solid, label="k"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="k"];
0.5 -> 0.8 [style = solid, label="k"];
0.5 -> 0.9 [style = solid, label="k"];
0.5 -> 0.10 [style = solid, label="k"];
0.5 -> 0.20 [style = solid, label="k"];
0.5 -> 0.21 [style = solid, label="k"];
0.5 -> 0.22 [style = solid, label="k"];
0.5 -> 0.23 [style = solid, label="k"];
0.5 -> 0.24 [style = solid, label="k"];
0.6 -> 0.7 [style = dotted, label="true"];
0.6 -> 0.8 [style = dotted, label="true"];
0.6 -> 0.8 [style = bold, label=""];
0.6 -> 0.9 [style = dotted, label="true"];
0.6 -> 0.11 [style = bold, label=""];
0.7 -> 0.6 [style = solid, label="k"];
0.7 -> 0.6 [style = bold, label=""];
0.7 -> 0.7 [style = solid, label="k"];
0.7 -> 0.8 [style = solid, label="k"];
0.7 -> 0.9 [style = solid, label="k"];
0.7 -> 0.10 [style = solid, label="k"];
0.7 -> 0.20 [style = solid, label="k"];
0.7 -> 0.21 [style = solid, label="k"];
0.7 -> 0.22 [style = solid, label="k"];
0.7 -> 0.23 [style = solid, label="k"];
0.7 -> 0.24 [style = solid, label="k"];
0.8 -> 0.8 [style = solid, label="ds"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.7 [style = bold, label=""];
0.9 -> 0.10 [style = dotted, label="true"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.7 [style = bold, label=""];
0.10 -> 0.10 [style = solid, label="log"];
0.10 -> 0.11 [style = solid, label="log"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = bold, label=""];
0.19 -> 0.20 [style = solid, label="k"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.21 [style = solid, label="k"];
0.19 -> 0.22 [style = solid, label="k"];
0.19 -> 0.23 [style = solid, label="k"];
0.19 -> 0.24 [style = solid, label="k"];
0.20 -> 0.21 [style = dotted, label="true"];
0.20 -> 0.22 [style = dotted, label="true"];
0.20 -> 0.22 [style = bold, label=""];
0.20 -> 0.23 [style = dotted, label="true"];
0.20 -> 0.24 [style = dotted, label="true"];
0.21 -> 0.20 [style = solid, label="k"];
0.21 -> 0.20 [style = bold, label=""];
0.21 -> 0.21 [style = solid, label="k"];
0.21 -> 0.22 [style = solid, label="k"];
0.21 -> 0.23 [style = solid, label="k"];
0.21 -> 0.24 [style = solid, label="k"];
0.22 -> 0.23 [style = solid, label="val"];
0.22 -> 0.23 [style = bold, label=""];
0.22 -> 0.24 [style = solid, label="val"];
0.23 -> 0.24 [style = bold, label=""];
0.24 -> 0.21 [style = bold, label=""];
0.25 -> 0.0 [style = dotted, label="true"];
0.25 -> 0.0 [style = bold, label=""];
0.25 -> 0.1 [style = dotted, label="true"];
0.25 -> 0.2 [style = dotted, label="true"];
0.25 -> 0.3 [style = dotted, label="true"];
0.25 -> 0.4 [style = dotted, label="true"];
0.25 -> 0.5 [style = dotted, label="true"];
0.25 -> 0.6 [style = dotted, label="true"];
0.25 -> 0.11 [style = dotted, label="true"];
0.25 -> 0.12 [style = dotted, label="true"];
0.25 -> 0.13 [style = dotted, label="true"];
0.25 -> 0.14 [style = dotted, label="true"];
0.25 -> 0.15 [style = dotted, label="true"];
0.25 -> 0.16 [style = dotted, label="true"];
0.25 -> 0.17 [style = dotted, label="true"];
0.25 -> 0.18 [style = dotted, label="true"];
0.25 -> 0.19 [style = dotted, label="true"];
0.25 -> 0.20 [style = dotted, label="true"];
}
