digraph PDG {
label = "testErrorNotGzipped <3...15>";
0.6 [style = filled, label = "assertTrue( ( ( ( contentEncoding == null )) || (!contentEncoding.contains(\"gzip\")) )); <10>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "String contentEncoding = response.getHeader(\"Content-Encoding\"); <9>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Header[] headers = new Header[][]; <4>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "headers[1] = new Header(\"Accept-Encoding\",\"gzip\"); <6>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Enter <3...15>", fillcolor = aquamarine, shape = diamond];
0.1 [style = filled, label = "headers[0] = new Header(\"Accept\",Constants.MIMETYPE_BINARY); <5>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "response = client.get( ( \"/\" + TABLE ),headers); <11>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "Response response = client.get( ( ( ( ( ( ( ( ( ( \"/\" + TABLE )) + \"/\" )) + ROW_1 )) + \"/\" )) + COLUMN_2 ),headers); <7>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "assertEquals(response.getCode(),404); <8>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertTrue( ( ( ( contentEncoding == null )) || (!contentEncoding.contains(\"gzip\")) )); <14>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "contentEncoding = response.getHeader(\"Content-Encoding\"); <13>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "assertEquals(response.getCode(),405); <12>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.3 [style = solid, label="headers"];
0.0 -> 0.7 [style = solid, label="headers"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="headers"];
0.1 -> 0.7 [style = solid, label="headers"];
0.2 -> 0.3 [style = solid, label="headers"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.7 [style = solid, label="headers"];
0.3 -> 0.4 [style = solid, label="response"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="response"];
0.3 -> 0.8 [style = solid, label="response"];
0.3 -> 0.9 [style = solid, label="response"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="contentEncoding"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.10 [style = solid, label="contentEncoding"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="response"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="response"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = solid, label="contentEncoding"];
0.9 -> 0.10 [style = bold, label=""];
0.11 -> 0.0 [style = dotted, label="true"];
0.11 -> 0.0 [style = bold, label=""];
0.11 -> 0.1 [style = dotted, label="true"];
0.11 -> 0.2 [style = dotted, label="true"];
0.11 -> 0.3 [style = dotted, label="true"];
0.11 -> 0.4 [style = dotted, label="true"];
0.11 -> 0.5 [style = dotted, label="true"];
0.11 -> 0.6 [style = dotted, label="true"];
0.11 -> 0.7 [style = dotted, label="true"];
0.11 -> 0.8 [style = dotted, label="true"];
0.11 -> 0.9 [style = dotted, label="true"];
0.11 -> 0.10 [style = dotted, label="true"];
}
