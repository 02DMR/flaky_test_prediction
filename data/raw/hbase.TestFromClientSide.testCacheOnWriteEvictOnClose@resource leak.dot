digraph PDG {
label = "testCacheOnWriteEvictOnClose <3...70>";
0.5 [style = filled, label = "Store store = region.getStores().values().iterator().next(); <9>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "assertEquals(startBlockHits,cache.getStats().getHitCount()); <22>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "cacheConf.setCacheDataOnWrite(true); <11>", fillcolor = white, shape = ellipse];
0.50 [style = filled, label = "store.triggerMajorCompaction(); <54>", fillcolor = white, shape = ellipse];
0.48 [style = filled, label = "System.out.println(\"Compacting\"); <52>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "BlockCache cache = cacheConf.getBlockCache(); <13>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "HTable table = TEST_UTIL.createTable(tableName,new byte[][][]com.propertygraph.pe.ExpressionInfo@16ae4); <6>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Put put = new Put(ROW); <17>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "put.add(FAMILY,QUALIFIER2,data2); <39>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "String regionName = table.getRegionLocations().firstKey().getEncodedName(); <7>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "assertTrue(Bytes.equals(table.get(new Get(ROW)).value(),data)); <20>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "long expectedBlockCount =  ( startBlockCount + 1 ); <26>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "put = new Put(ROW); <38>", fillcolor = white, shape = ellipse];
0.59 [style = filled, label = "r = table.get(new Get(ROW)); <63>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "assertEquals(startBlockCount,cache.getBlockCount()); <21>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "assertEquals(expectedBlockMiss,cache.getStats().getMissCount()); <35>", fillcolor = white, shape = ellipse];
0.44 [style = filled, label = "region.flushcache(); <48>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "table.put(put); <40>", fillcolor = white, shape = ellipse];
0.54 [style = filled, label = "expectedBlockCount -= 2; <58>", fillcolor = white, shape = ellipse];
0.65 [style = filled, label = "assertEquals(++expectedBlockMiss,cache.getStats().getMissCount()); <69>", fillcolor = deeppink, shape = ellipse];
0.14 [style = filled, label = "put.add(FAMILY,QUALIFIER,data); <18>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "byte[] data2 = Bytes.add(data,data); <37>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "CacheConfig cacheConf = store.getCacheConfig(); <10>", fillcolor = white, shape = ellipse];
0.64 [style = filled, label = "assertEquals(expectedBlockHits,cache.getStats().getHitCount()); <68>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "long startBlockHits = cache.getStats().getHitCount(); <15>", fillcolor = white, shape = ellipse];
0.57 [style = filled, label = "assertEquals(expectedBlockMiss,cache.getStats().getMissCount()); <61>", fillcolor = white, shape = ellipse];
0.43 [style = filled, label = "System.out.println(\"Flushing cache\"); <47>", fillcolor = white, shape = ellipse];
0.39 [style = filled, label = "assertTrue(Bytes.equals(r.getValue(FAMILY,QUALIFIER2),data2)); <43>", fillcolor = white, shape = ellipse];
0.47 [style = filled, label = "assertEquals(expectedBlockMiss,cache.getStats().getMissCount()); <51>", fillcolor = white, shape = ellipse];
0.41 [style = filled, label = "assertEquals(++expectedBlockHits,cache.getStats().getHitCount()); <45>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "long startBlockMiss = cache.getStats().getMissCount(); <16>", fillcolor = white, shape = ellipse];
0.42 [style = filled, label = "assertEquals(expectedBlockMiss,cache.getStats().getMissCount()); <46>", fillcolor = white, shape = ellipse];
0.53 [style = filled, label = "assertEquals(1,store.getNumberOfStoreFiles()); <57>", fillcolor = white, shape = ellipse];
0.37 [style = filled, label = "Result r = table.get(new Get(ROW)); <41>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "long startBlockCount = cache.getBlockCount(); <14>", fillcolor = white, shape = ellipse];
0.52 [style = filled, label = "waitForStoreFileCount(store,1,10000); <56>", fillcolor = white, shape = ellipse];
0.45 [style = filled, label = "assertEquals(++expectedBlockCount,cache.getBlockCount()); <49>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "assertEquals(++expectedBlockHits,cache.getStats().getHitCount()); <34>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "assertEquals(expectedBlockCount,cache.getBlockCount()); <33>", fillcolor = white, shape = ellipse];
0.55 [style = filled, label = "assertEquals(expectedBlockCount,cache.getBlockCount()); <59>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "HRegion region = TEST_UTIL.getRSForFirstRegionInTable(tableName).getFromOnlineRegions(regionName); <8>", fillcolor = white, shape = ellipse];
0.66 [style = filled, label = "Enter <3...70>", fillcolor = aquamarine, shape = diamond];
0.62 [style = filled, label = "expectedBlockCount += 1; <66>", fillcolor = white, shape = ellipse];
0.38 [style = filled, label = "assertTrue(Bytes.equals(r.getValue(FAMILY,QUALIFIER),data)); <42>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "assertEquals(expectedBlockHits,cache.getStats().getHitCount()); <30>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "assertEquals(startBlockMiss,cache.getStats().getMissCount()); <23>", fillcolor = white, shape = ellipse];
0.61 [style = filled, label = "assertTrue(Bytes.equals(r.getValue(FAMILY,QUALIFIER2),data2)); <65>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "byte[] data = Bytes.toBytes(\"data\"); <5>", fillcolor = white, shape = ellipse];
0.32 [style = filled, label = "byte[] QUALIFIER2 = Bytes.add(QUALIFIER,QUALIFIER); <36>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "byte[] tableName = Bytes.toBytes(\"testCOWEOCfromClient\"); <4>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "region.flushcache(); <25>", fillcolor = white, shape = ellipse];
0.56 [style = filled, label = "expectedBlockHits += 2; <60>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "long expectedBlockMiss = startBlockMiss; <28>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "assertTrue(Bytes.equals(table.get(new Get(ROW)).value(),data)); <32>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "cacheConf.setEvictOnClose(true); <12>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "long expectedBlockHits = startBlockHits; <27>", fillcolor = white, shape = ellipse];
0.58 [style = filled, label = "assertEquals(expectedBlockHits,cache.getStats().getHitCount()); <62>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "assertEquals(expectedBlockMiss,cache.getStats().getMissCount()); <31>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "table.put(put); <19>", fillcolor = white, shape = ellipse];
0.51 [style = filled, label = "region.compactStores(); <55>", fillcolor = white, shape = ellipse];
0.63 [style = filled, label = "assertEquals(expectedBlockCount,cache.getBlockCount()); <67>", fillcolor = white, shape = ellipse];
0.60 [style = filled, label = "assertTrue(Bytes.equals(r.getValue(FAMILY,QUALIFIER),data)); <64>", fillcolor = white, shape = ellipse];
0.49 [style = filled, label = "assertEquals(2,store.getNumberOfStoreFiles()); <53>", fillcolor = white, shape = ellipse];
0.46 [style = filled, label = "assertEquals(expectedBlockHits,cache.getStats().getHitCount()); <50>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "System.out.println(\"Flushing cache\"); <24>", fillcolor = white, shape = ellipse];
0.40 [style = filled, label = "assertEquals(expectedBlockCount,cache.getBlockCount()); <44>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "assertEquals(expectedBlockCount,cache.getBlockCount()); <29>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="tableName"];
0.0 -> 0.4 [style = solid, label="tableName"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.14 [style = solid, label="data"];
0.1 -> 0.16 [style = solid, label="data"];
0.1 -> 0.28 [style = solid, label="data"];
0.1 -> 0.33 [style = solid, label="data"];
0.1 -> 0.38 [style = solid, label="data"];
0.1 -> 0.60 [style = solid, label="data"];
0.2 -> 0.3 [style = solid, label="table"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.15 [style = solid, label="table"];
0.2 -> 0.16 [style = solid, label="table"];
0.2 -> 0.28 [style = solid, label="table"];
0.2 -> 0.36 [style = solid, label="table"];
0.2 -> 0.37 [style = solid, label="table"];
0.2 -> 0.59 [style = solid, label="table"];
0.3 -> 0.4 [style = solid, label="regionName"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = solid, label="region"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.21 [style = solid, label="region"];
0.4 -> 0.44 [style = solid, label="region"];
0.4 -> 0.51 [style = solid, label="region"];
0.5 -> 0.6 [style = solid, label="store"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.49 [style = solid, label="store"];
0.5 -> 0.50 [style = solid, label="store"];
0.5 -> 0.52 [style = solid, label="store"];
0.5 -> 0.53 [style = solid, label="store"];
0.6 -> 0.7 [style = solid, label="cacheConf"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="cacheConf"];
0.6 -> 0.9 [style = solid, label="cacheConf"];
0.7 -> 0.8 [style = solid, label="cacheConf"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="cacheConf"];
0.8 -> 0.9 [style = solid, label="cacheConf"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = solid, label="cache"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="cache"];
0.9 -> 0.12 [style = solid, label="cache"];
0.9 -> 0.17 [style = solid, label="cache"];
0.9 -> 0.18 [style = solid, label="cache"];
0.9 -> 0.19 [style = solid, label="cache"];
0.9 -> 0.25 [style = solid, label="cache"];
0.9 -> 0.26 [style = solid, label="cache"];
0.9 -> 0.27 [style = solid, label="cache"];
0.9 -> 0.29 [style = solid, label="cache"];
0.9 -> 0.30 [style = solid, label="cache"];
0.9 -> 0.31 [style = solid, label="cache"];
0.9 -> 0.40 [style = solid, label="cache"];
0.9 -> 0.41 [style = solid, label="cache"];
0.9 -> 0.42 [style = solid, label="cache"];
0.9 -> 0.45 [style = solid, label="cache"];
0.9 -> 0.46 [style = solid, label="cache"];
0.9 -> 0.47 [style = solid, label="cache"];
0.9 -> 0.55 [style = solid, label="cache"];
0.9 -> 0.57 [style = solid, label="cache"];
0.9 -> 0.58 [style = solid, label="cache"];
0.9 -> 0.63 [style = solid, label="cache"];
0.9 -> 0.64 [style = solid, label="cache"];
0.9 -> 0.65 [style = solid, label="cache"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.17 [style = solid, label="startBlockCount"];
0.10 -> 0.22 [style = solid, label="startBlockCount"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.18 [style = solid, label="startBlockHits"];
0.11 -> 0.23 [style = solid, label="startBlockHits"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.19 [style = solid, label="startBlockMiss"];
0.12 -> 0.24 [style = solid, label="startBlockMiss"];
0.13 -> 0.14 [style = solid, label="put"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.15 [style = solid, label="put"];
0.13 -> 0.35 [style = solid, label="put"];
0.13 -> 0.36 [style = solid, label="put"];
0.14 -> 0.15 [style = solid, label="put"];
0.14 -> 0.15 [style = bold, label=""];
0.14 -> 0.35 [style = solid, label="put"];
0.14 -> 0.36 [style = solid, label="put"];
0.15 -> 0.16 [style = solid, label="table"];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.28 [style = solid, label="table"];
0.15 -> 0.36 [style = solid, label="table"];
0.15 -> 0.37 [style = solid, label="table"];
0.15 -> 0.59 [style = solid, label="table"];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = bold, label=""];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = bold, label=""];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.44 [style = solid, label="region"];
0.21 -> 0.51 [style = solid, label="region"];
0.22 -> 0.23 [style = bold, label=""];
0.22 -> 0.25 [style = solid, label="expectedBlockCount"];
0.22 -> 0.29 [style = solid, label="expectedBlockCount"];
0.22 -> 0.40 [style = solid, label="expectedBlockCount"];
0.22 -> 0.45 [style = solid, label="expectedBlockCount"];
0.22 -> 0.55 [style = solid, label="expectedBlockCount"];
0.22 -> 0.63 [style = solid, label="expectedBlockCount"];
0.23 -> 0.24 [style = bold, label=""];
0.23 -> 0.26 [style = solid, label="expectedBlockHits"];
0.23 -> 0.30 [style = solid, label="expectedBlockHits"];
0.23 -> 0.41 [style = solid, label="expectedBlockHits"];
0.23 -> 0.46 [style = solid, label="expectedBlockHits"];
0.23 -> 0.58 [style = solid, label="expectedBlockHits"];
0.23 -> 0.64 [style = solid, label="expectedBlockHits"];
0.24 -> 0.25 [style = bold, label=""];
0.24 -> 0.27 [style = solid, label="expectedBlockMiss"];
0.24 -> 0.31 [style = solid, label="expectedBlockMiss"];
0.24 -> 0.42 [style = solid, label="expectedBlockMiss"];
0.24 -> 0.47 [style = solid, label="expectedBlockMiss"];
0.24 -> 0.57 [style = solid, label="expectedBlockMiss"];
0.24 -> 0.65 [style = solid, label="expectedBlockMiss"];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = bold, label=""];
0.29 -> 0.30 [style = bold, label=""];
0.30 -> 0.31 [style = bold, label=""];
0.31 -> 0.32 [style = bold, label=""];
0.32 -> 0.33 [style = bold, label=""];
0.32 -> 0.35 [style = solid, label="QUALIFIER2"];
0.32 -> 0.39 [style = solid, label="QUALIFIER2"];
0.32 -> 0.61 [style = solid, label="QUALIFIER2"];
0.33 -> 0.34 [style = bold, label=""];
0.33 -> 0.35 [style = solid, label="data2"];
0.33 -> 0.39 [style = solid, label="data2"];
0.33 -> 0.61 [style = solid, label="data2"];
0.34 -> 0.35 [style = solid, label="put"];
0.34 -> 0.35 [style = bold, label=""];
0.34 -> 0.36 [style = solid, label="put"];
0.35 -> 0.36 [style = solid, label="put"];
0.35 -> 0.36 [style = bold, label=""];
0.36 -> 0.37 [style = solid, label="table"];
0.36 -> 0.37 [style = bold, label=""];
0.36 -> 0.59 [style = solid, label="table"];
0.37 -> 0.38 [style = solid, label="r"];
0.37 -> 0.38 [style = bold, label=""];
0.37 -> 0.39 [style = solid, label="r"];
0.37 -> 0.60 [style = solid, label="r"];
0.37 -> 0.61 [style = solid, label="r"];
0.38 -> 0.39 [style = bold, label=""];
0.39 -> 0.40 [style = bold, label=""];
0.40 -> 0.41 [style = bold, label=""];
0.41 -> 0.42 [style = bold, label=""];
0.42 -> 0.43 [style = bold, label=""];
0.43 -> 0.44 [style = bold, label=""];
0.44 -> 0.45 [style = bold, label=""];
0.44 -> 0.51 [style = solid, label="region"];
0.45 -> 0.46 [style = bold, label=""];
0.46 -> 0.47 [style = bold, label=""];
0.47 -> 0.48 [style = bold, label=""];
0.48 -> 0.49 [style = bold, label=""];
0.49 -> 0.50 [style = bold, label=""];
0.50 -> 0.51 [style = bold, label=""];
0.50 -> 0.52 [style = solid, label="store"];
0.50 -> 0.53 [style = solid, label="store"];
0.51 -> 0.52 [style = bold, label=""];
0.52 -> 0.53 [style = bold, label=""];
0.53 -> 0.54 [style = bold, label=""];
0.54 -> 0.55 [style = solid, label="expectedBlockCount"];
0.54 -> 0.55 [style = bold, label=""];
0.54 -> 0.63 [style = solid, label="expectedBlockCount"];
0.55 -> 0.56 [style = bold, label=""];
0.56 -> 0.57 [style = bold, label=""];
0.56 -> 0.58 [style = solid, label="expectedBlockHits"];
0.56 -> 0.64 [style = solid, label="expectedBlockHits"];
0.57 -> 0.58 [style = bold, label=""];
0.58 -> 0.59 [style = bold, label=""];
0.59 -> 0.60 [style = solid, label="r"];
0.59 -> 0.60 [style = bold, label=""];
0.59 -> 0.61 [style = solid, label="r"];
0.60 -> 0.61 [style = bold, label=""];
0.61 -> 0.62 [style = bold, label=""];
0.62 -> 0.63 [style = solid, label="expectedBlockCount"];
0.62 -> 0.63 [style = bold, label=""];
0.63 -> 0.64 [style = bold, label=""];
0.64 -> 0.65 [style = bold, label=""];
0.66 -> 0.0 [style = dotted, label="true"];
0.66 -> 0.0 [style = bold, label=""];
0.66 -> 0.1 [style = dotted, label="true"];
0.66 -> 0.2 [style = dotted, label="true"];
0.66 -> 0.3 [style = dotted, label="true"];
0.66 -> 0.4 [style = dotted, label="true"];
0.66 -> 0.5 [style = dotted, label="true"];
0.66 -> 0.6 [style = dotted, label="true"];
0.66 -> 0.7 [style = dotted, label="true"];
0.66 -> 0.8 [style = dotted, label="true"];
0.66 -> 0.9 [style = dotted, label="true"];
0.66 -> 0.10 [style = dotted, label="true"];
0.66 -> 0.11 [style = dotted, label="true"];
0.66 -> 0.12 [style = dotted, label="true"];
0.66 -> 0.13 [style = dotted, label="true"];
0.66 -> 0.14 [style = dotted, label="true"];
0.66 -> 0.15 [style = dotted, label="true"];
0.66 -> 0.16 [style = dotted, label="true"];
0.66 -> 0.17 [style = dotted, label="true"];
0.66 -> 0.18 [style = dotted, label="true"];
0.66 -> 0.19 [style = dotted, label="true"];
0.66 -> 0.20 [style = dotted, label="true"];
0.66 -> 0.21 [style = dotted, label="true"];
0.66 -> 0.22 [style = dotted, label="true"];
0.66 -> 0.23 [style = dotted, label="true"];
0.66 -> 0.24 [style = dotted, label="true"];
0.66 -> 0.25 [style = dotted, label="true"];
0.66 -> 0.26 [style = dotted, label="true"];
0.66 -> 0.27 [style = dotted, label="true"];
0.66 -> 0.28 [style = dotted, label="true"];
0.66 -> 0.29 [style = dotted, label="true"];
0.66 -> 0.30 [style = dotted, label="true"];
0.66 -> 0.31 [style = dotted, label="true"];
0.66 -> 0.32 [style = dotted, label="true"];
0.66 -> 0.33 [style = dotted, label="true"];
0.66 -> 0.34 [style = dotted, label="true"];
0.66 -> 0.35 [style = dotted, label="true"];
0.66 -> 0.36 [style = dotted, label="true"];
0.66 -> 0.37 [style = dotted, label="true"];
0.66 -> 0.38 [style = dotted, label="true"];
0.66 -> 0.39 [style = dotted, label="true"];
0.66 -> 0.40 [style = dotted, label="true"];
0.66 -> 0.41 [style = dotted, label="true"];
0.66 -> 0.42 [style = dotted, label="true"];
0.66 -> 0.43 [style = dotted, label="true"];
0.66 -> 0.44 [style = dotted, label="true"];
0.66 -> 0.45 [style = dotted, label="true"];
0.66 -> 0.46 [style = dotted, label="true"];
0.66 -> 0.47 [style = dotted, label="true"];
0.66 -> 0.48 [style = dotted, label="true"];
0.66 -> 0.49 [style = dotted, label="true"];
0.66 -> 0.50 [style = dotted, label="true"];
0.66 -> 0.51 [style = dotted, label="true"];
0.66 -> 0.52 [style = dotted, label="true"];
0.66 -> 0.53 [style = dotted, label="true"];
0.66 -> 0.54 [style = dotted, label="true"];
0.66 -> 0.55 [style = dotted, label="true"];
0.66 -> 0.56 [style = dotted, label="true"];
0.66 -> 0.57 [style = dotted, label="true"];
0.66 -> 0.58 [style = dotted, label="true"];
0.66 -> 0.59 [style = dotted, label="true"];
0.66 -> 0.60 [style = dotted, label="true"];
0.66 -> 0.61 [style = dotted, label="true"];
0.66 -> 0.62 [style = dotted, label="true"];
0.66 -> 0.63 [style = dotted, label="true"];
0.66 -> 0.64 [style = dotted, label="true"];
0.66 -> 0.65 [style = dotted, label="true"];
}
