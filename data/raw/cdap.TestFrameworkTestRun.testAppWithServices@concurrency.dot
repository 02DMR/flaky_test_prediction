digraph PDG {
label = "testAppWithServices <3...85>";
0.43 [style = filled, label = "Assert.assertEquals(1,handlerMetrics.getProcessed()); <61>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "serviceMetrics.waitForinput(3,5,TimeUnit.SECONDS); <26>", fillcolor = white, shape = ellipse];
0.41 [style = filled, label = "handlerMetrics.waitForinput(1,5,TimeUnit.SECONDS); <59>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "LOG.info(\"Service Started\"); <9>", fillcolor = white, shape = ellipse];
0.56 [style = filled, label = "LOG.info(\"ServerService Stopped\"); <76>", fillcolor = white, shape = ellipse];
0.44 [style = filled, label = "Assert.assertEquals(0,handlerMetrics.getException()); <62>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "LOG.info(\"Deployed.\"); <6>", fillcolor = white, shape = ellipse];
0.58 [style = filled, label = "decodedResult = new Gson().fromJson(result,); <79>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "WorkerManager datasetWorker = applicationManager.getWorkerManager(AppWithServices.DATASET_UPDATE_WORKER).start(args); <44...45>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Assert.assertEquals(500,response.getResponseCode()); <19>", fillcolor = white, shape = ellipse];
0.57 [style = filled, label = "result = callServiceGet(noopManager.getServiceURL(), ( \"ping/\" + AppWithServices.DATASET_TEST_KEY_STOP )); <78>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "ServiceManager noopManager = applicationManager.getServiceManager(\"NoOpService\").start(); <48>", fillcolor = white, shape = ellipse];
0.51 [style = filled, label = "datasetWorkerServiceManager.stop(); <71>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "Assert.assertEquals(1,handlerMetrics.getException()); <37>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "RuntimeMetrics handlerMetrics = getMetricsManager().getServiceHandlerMetrics(Id.Namespace.DEFAULT.getId(),AppWithServices.APP_NAME,AppWithServices.SERVICE_NAME,AppWithServices.SERVICE_NAME); <30...33>", fillcolor = white, shape = ellipse];
0.47 [style = filled, label = "request = HttpRequest.get(url).build(); <66>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "HttpResponse response = HttpRequests.execute(request); <14>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "Assert.assertEquals(2,serviceMetrics.getProcessed()); <28>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "Assert.assertEquals(200,response.getResponseCode()); <15>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "HttpRequest request = HttpRequest.get(url).build(); <13>", fillcolor = white, shape = ellipse];
0.37 [style = filled, label = "String result = callServiceGet(noopManager.getServiceURL(), ( \"ping/\" + AppWithServices.DATASET_TEST_KEY )); <51>", fillcolor = white, shape = ellipse];
0.62 [style = filled, label = "Assert.assertEquals(AppWithServices.DATASET_TEST_VALUE_STOP_2,decodedResult); <84>", fillcolor = deeppink, shape = ellipse];
0.53 [style = filled, label = "LOG.info(\"DatasetUpdateService Stopped\"); <73>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "request = HttpRequest.get(url).build(); <22>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "Assert.assertEquals(2,handlerMetrics.getProcessed()); <36>", fillcolor = white, shape = ellipse];
0.52 [style = filled, label = "datasetWorkerServiceManager.waitForStatus(false); <72>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "url = new URL(serviceURL,\"verifyClassLoader\"); <21>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "ApplicationManager applicationManager = deployApplication(); <5>", fillcolor = white, shape = ellipse];
0.48 [style = filled, label = "response = HttpRequests.execute(request); <67>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Assert.assertEquals(200,response.getResponseCode()); <24>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "Assert.assertEquals(3,handlerMetrics.getInput()); <35>", fillcolor = white, shape = ellipse];
0.42 [style = filled, label = "Assert.assertEquals(1,handlerMetrics.getInput()); <60>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "request = HttpRequest.get(url).build(); <17>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "URL url = new URL(serviceURL,\"ping2\"); <12>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "handlerMetrics.waitForinput(3,5,TimeUnit.SECONDS); <34>", fillcolor = white, shape = ellipse];
0.60 [style = filled, label = "result = callServiceGet(noopManager.getServiceURL(), ( \"ping/\" + AppWithServices.DATASET_TEST_KEY_STOP_2 )); <82>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "RuntimeMetrics serviceMetrics = serviceManager.getMetrics(); <25>", fillcolor = white, shape = ellipse];
0.38 [style = filled, label = "String decodedResult = new Gson().fromJson(result,); <52>", fillcolor = white, shape = ellipse];
0.39 [style = filled, label = "Assert.assertEquals(AppWithServices.DATASET_TEST_VALUE,decodedResult); <53>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "ServiceManager serviceManager = applicationManager.getServiceManager(AppWithServices.SERVICE_NAME).start(); <7>", fillcolor = white, shape = ellipse];
0.46 [style = filled, label = "url = new URL(serviceURL,path); <65>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "Assert.assertEquals(1,serviceMetrics.getException()); <29>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "serviceManager.waitForStatus(true,2,1); <49>", fillcolor = white, shape = ellipse];
0.32 [style = filled, label = "ServiceManager datasetWorkerServiceManager = applicationManager.getServiceManager(AppWithServices.DATASET_WORKER_SERVICE_NAME).start(args); <42...43>", fillcolor = white, shape = ellipse];
0.61 [style = filled, label = "decodedResult = new Gson().fromJson(result,); <83>", fillcolor = white, shape = ellipse];
0.59 [style = filled, label = "Assert.assertEquals(AppWithServices.DATASET_TEST_VALUE_STOP,decodedResult); <80>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Assert.assertTrue(response.getResponseBodyAsString().contains(\"Exception\")); <20>", fillcolor = white, shape = ellipse];
0.50 [style = filled, label = "datasetWorker.stop(); <70>", fillcolor = white, shape = ellipse];
0.63 [style = filled, label = "Enter <3...85>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "URL serviceURL = serviceManager.getServiceURL(15,TimeUnit.SECONDS); <10>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "serviceManager.waitForStatus(true); <8>", fillcolor = white, shape = ellipse];
0.54 [style = filled, label = "serviceManager.stop(); <74>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "Assert.assertEquals(3,serviceMetrics.getInput()); <27>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "response = HttpRequests.execute(request); <18>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "response = HttpRequests.execute(request); <23>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "LOG.info(\"DatasetUpdateService Started\"); <38>", fillcolor = white, shape = ellipse];
0.49 [style = filled, label = "Assert.assertEquals(200,response.getResponseCode()); <68>", fillcolor = white, shape = ellipse];
0.40 [style = filled, label = "handlerMetrics = getMetricsManager().getServiceHandlerMetrics(Id.Namespace.DEFAULT.getId(),AppWithServices.APP_NAME,\"NoOpService\",\"NoOpHandler\"); <55...58>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "datasetWorkerServiceManager.waitForStatus(true); <46>", fillcolor = white, shape = ellipse];
0.55 [style = filled, label = "serviceManager.waitForStatus(false); <75>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "Map<String,String> args = ImmutableMap.of(AppWithServices.WRITE_VALUE_RUN_KEY,AppWithServices.DATASET_TEST_VALUE,AppWithServices.WRITE_VALUE_STOP_KEY,AppWithServices.DATASET_TEST_VALUE_STOP); <39...41>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Assert.assertNotNull(serviceURL); <11>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "url = new URL(serviceURL,\"failure\"); <16>", fillcolor = white, shape = ellipse];
0.45 [style = filled, label = "String path = String.format(\"discover/%s/%s\",AppWithServices.APP_NAME,AppWithServices.DATASET_WORKER_SERVICE_NAME); <63...64>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="applicationManager"];
0.0 -> 0.32 [style = solid, label="applicationManager"];
0.0 -> 0.33 [style = solid, label="applicationManager"];
0.0 -> 0.35 [style = solid, label="applicationManager"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = solid, label="serviceManager"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.5 [style = solid, label="serviceManager"];
0.2 -> 0.20 [style = solid, label="serviceManager"];
0.2 -> 0.36 [style = solid, label="serviceManager"];
0.2 -> 0.54 [style = solid, label="serviceManager"];
0.2 -> 0.55 [style = solid, label="serviceManager"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="serviceManager"];
0.3 -> 0.20 [style = solid, label="serviceManager"];
0.3 -> 0.36 [style = solid, label="serviceManager"];
0.3 -> 0.54 [style = solid, label="serviceManager"];
0.3 -> 0.55 [style = solid, label="serviceManager"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="serviceURL"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="serviceURL"];
0.5 -> 0.11 [style = solid, label="serviceURL"];
0.5 -> 0.16 [style = solid, label="serviceURL"];
0.5 -> 0.46 [style = solid, label="serviceURL"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="url"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.12 [style = solid, label="url"];
0.7 -> 0.17 [style = solid, label="url"];
0.7 -> 0.47 [style = solid, label="url"];
0.8 -> 0.9 [style = solid, label="request"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.13 [style = solid, label="request"];
0.8 -> 0.18 [style = solid, label="request"];
0.8 -> 0.48 [style = solid, label="request"];
0.9 -> 0.10 [style = solid, label="response"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.14 [style = solid, label="response"];
0.9 -> 0.15 [style = solid, label="response"];
0.9 -> 0.19 [style = solid, label="response"];
0.9 -> 0.49 [style = solid, label="response"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="url"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.17 [style = solid, label="url"];
0.11 -> 0.47 [style = solid, label="url"];
0.12 -> 0.13 [style = solid, label="request"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.18 [style = solid, label="request"];
0.12 -> 0.48 [style = solid, label="request"];
0.13 -> 0.14 [style = solid, label="response"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.15 [style = solid, label="response"];
0.13 -> 0.19 [style = solid, label="response"];
0.13 -> 0.49 [style = solid, label="response"];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = solid, label="url"];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.47 [style = solid, label="url"];
0.17 -> 0.18 [style = solid, label="request"];
0.17 -> 0.18 [style = bold, label=""];
0.17 -> 0.48 [style = solid, label="request"];
0.18 -> 0.19 [style = solid, label="response"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.49 [style = solid, label="response"];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = solid, label="serviceMetrics"];
0.20 -> 0.21 [style = bold, label=""];
0.20 -> 0.22 [style = solid, label="serviceMetrics"];
0.20 -> 0.23 [style = solid, label="serviceMetrics"];
0.20 -> 0.24 [style = solid, label="serviceMetrics"];
0.21 -> 0.22 [style = solid, label="serviceMetrics"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.23 [style = solid, label="serviceMetrics"];
0.21 -> 0.24 [style = solid, label="serviceMetrics"];
0.22 -> 0.23 [style = bold, label=""];
0.23 -> 0.24 [style = bold, label=""];
0.24 -> 0.25 [style = bold, label=""];
0.25 -> 0.26 [style = solid, label="handlerMetrics"];
0.25 -> 0.26 [style = bold, label=""];
0.25 -> 0.27 [style = solid, label="handlerMetrics"];
0.25 -> 0.28 [style = solid, label="handlerMetrics"];
0.25 -> 0.29 [style = solid, label="handlerMetrics"];
0.25 -> 0.41 [style = solid, label="handlerMetrics"];
0.25 -> 0.42 [style = solid, label="handlerMetrics"];
0.25 -> 0.43 [style = solid, label="handlerMetrics"];
0.25 -> 0.44 [style = solid, label="handlerMetrics"];
0.26 -> 0.27 [style = solid, label="handlerMetrics"];
0.26 -> 0.27 [style = bold, label=""];
0.26 -> 0.28 [style = solid, label="handlerMetrics"];
0.26 -> 0.29 [style = solid, label="handlerMetrics"];
0.26 -> 0.41 [style = solid, label="handlerMetrics"];
0.26 -> 0.42 [style = solid, label="handlerMetrics"];
0.26 -> 0.43 [style = solid, label="handlerMetrics"];
0.26 -> 0.44 [style = solid, label="handlerMetrics"];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = bold, label=""];
0.29 -> 0.30 [style = bold, label=""];
0.30 -> 0.31 [style = bold, label=""];
0.31 -> 0.32 [style = solid, label="args"];
0.31 -> 0.32 [style = bold, label=""];
0.31 -> 0.33 [style = solid, label="args"];
0.32 -> 0.33 [style = bold, label=""];
0.32 -> 0.34 [style = solid, label="datasetWorkerServiceManager"];
0.32 -> 0.51 [style = solid, label="datasetWorkerServiceManager"];
0.32 -> 0.52 [style = solid, label="datasetWorkerServiceManager"];
0.33 -> 0.34 [style = bold, label=""];
0.33 -> 0.50 [style = solid, label="datasetWorker"];
0.34 -> 0.35 [style = bold, label=""];
0.34 -> 0.51 [style = solid, label="datasetWorkerServiceManager"];
0.34 -> 0.52 [style = solid, label="datasetWorkerServiceManager"];
0.35 -> 0.36 [style = bold, label=""];
0.35 -> 0.37 [style = solid, label="noopManager"];
0.35 -> 0.57 [style = solid, label="noopManager"];
0.35 -> 0.60 [style = solid, label="noopManager"];
0.36 -> 0.37 [style = bold, label=""];
0.36 -> 0.54 [style = solid, label="serviceManager"];
0.36 -> 0.55 [style = solid, label="serviceManager"];
0.37 -> 0.38 [style = solid, label="result"];
0.37 -> 0.38 [style = bold, label=""];
0.37 -> 0.58 [style = solid, label="result"];
0.37 -> 0.61 [style = solid, label="result"];
0.38 -> 0.39 [style = solid, label="decodedResult"];
0.38 -> 0.39 [style = bold, label=""];
0.38 -> 0.59 [style = solid, label="decodedResult"];
0.38 -> 0.62 [style = solid, label="decodedResult"];
0.39 -> 0.40 [style = bold, label=""];
0.40 -> 0.41 [style = solid, label="handlerMetrics"];
0.40 -> 0.41 [style = bold, label=""];
0.40 -> 0.42 [style = solid, label="handlerMetrics"];
0.40 -> 0.43 [style = solid, label="handlerMetrics"];
0.40 -> 0.44 [style = solid, label="handlerMetrics"];
0.41 -> 0.42 [style = solid, label="handlerMetrics"];
0.41 -> 0.42 [style = bold, label=""];
0.41 -> 0.43 [style = solid, label="handlerMetrics"];
0.41 -> 0.44 [style = solid, label="handlerMetrics"];
0.42 -> 0.43 [style = bold, label=""];
0.43 -> 0.44 [style = bold, label=""];
0.44 -> 0.45 [style = bold, label=""];
0.45 -> 0.46 [style = solid, label="path"];
0.45 -> 0.46 [style = bold, label=""];
0.46 -> 0.47 [style = solid, label="url"];
0.46 -> 0.47 [style = bold, label=""];
0.47 -> 0.48 [style = solid, label="request"];
0.47 -> 0.48 [style = bold, label=""];
0.48 -> 0.49 [style = solid, label="response"];
0.48 -> 0.49 [style = bold, label=""];
0.49 -> 0.50 [style = bold, label=""];
0.50 -> 0.51 [style = bold, label=""];
0.51 -> 0.52 [style = solid, label="datasetWorkerServiceManager"];
0.51 -> 0.52 [style = bold, label=""];
0.52 -> 0.53 [style = bold, label=""];
0.53 -> 0.54 [style = bold, label=""];
0.54 -> 0.55 [style = solid, label="serviceManager"];
0.54 -> 0.55 [style = bold, label=""];
0.55 -> 0.56 [style = bold, label=""];
0.56 -> 0.57 [style = bold, label=""];
0.57 -> 0.58 [style = solid, label="result"];
0.57 -> 0.58 [style = bold, label=""];
0.57 -> 0.61 [style = solid, label="result"];
0.58 -> 0.59 [style = solid, label="decodedResult"];
0.58 -> 0.59 [style = bold, label=""];
0.58 -> 0.62 [style = solid, label="decodedResult"];
0.59 -> 0.60 [style = bold, label=""];
0.60 -> 0.61 [style = solid, label="result"];
0.60 -> 0.61 [style = bold, label=""];
0.61 -> 0.62 [style = solid, label="decodedResult"];
0.61 -> 0.62 [style = bold, label=""];
0.63 -> 0.0 [style = dotted, label="true"];
0.63 -> 0.0 [style = bold, label=""];
0.63 -> 0.1 [style = dotted, label="true"];
0.63 -> 0.2 [style = dotted, label="true"];
0.63 -> 0.3 [style = dotted, label="true"];
0.63 -> 0.4 [style = dotted, label="true"];
0.63 -> 0.5 [style = dotted, label="true"];
0.63 -> 0.6 [style = dotted, label="true"];
0.63 -> 0.7 [style = dotted, label="true"];
0.63 -> 0.8 [style = dotted, label="true"];
0.63 -> 0.9 [style = dotted, label="true"];
0.63 -> 0.10 [style = dotted, label="true"];
0.63 -> 0.11 [style = dotted, label="true"];
0.63 -> 0.12 [style = dotted, label="true"];
0.63 -> 0.13 [style = dotted, label="true"];
0.63 -> 0.14 [style = dotted, label="true"];
0.63 -> 0.15 [style = dotted, label="true"];
0.63 -> 0.16 [style = dotted, label="true"];
0.63 -> 0.17 [style = dotted, label="true"];
0.63 -> 0.18 [style = dotted, label="true"];
0.63 -> 0.19 [style = dotted, label="true"];
0.63 -> 0.20 [style = dotted, label="true"];
0.63 -> 0.21 [style = dotted, label="true"];
0.63 -> 0.22 [style = dotted, label="true"];
0.63 -> 0.23 [style = dotted, label="true"];
0.63 -> 0.24 [style = dotted, label="true"];
0.63 -> 0.25 [style = dotted, label="true"];
0.63 -> 0.26 [style = dotted, label="true"];
0.63 -> 0.27 [style = dotted, label="true"];
0.63 -> 0.28 [style = dotted, label="true"];
0.63 -> 0.29 [style = dotted, label="true"];
0.63 -> 0.30 [style = dotted, label="true"];
0.63 -> 0.31 [style = dotted, label="true"];
0.63 -> 0.32 [style = dotted, label="true"];
0.63 -> 0.33 [style = dotted, label="true"];
0.63 -> 0.34 [style = dotted, label="true"];
0.63 -> 0.35 [style = dotted, label="true"];
0.63 -> 0.36 [style = dotted, label="true"];
0.63 -> 0.37 [style = dotted, label="true"];
0.63 -> 0.38 [style = dotted, label="true"];
0.63 -> 0.39 [style = dotted, label="true"];
0.63 -> 0.40 [style = dotted, label="true"];
0.63 -> 0.41 [style = dotted, label="true"];
0.63 -> 0.42 [style = dotted, label="true"];
0.63 -> 0.43 [style = dotted, label="true"];
0.63 -> 0.44 [style = dotted, label="true"];
0.63 -> 0.45 [style = dotted, label="true"];
0.63 -> 0.46 [style = dotted, label="true"];
0.63 -> 0.47 [style = dotted, label="true"];
0.63 -> 0.48 [style = dotted, label="true"];
0.63 -> 0.49 [style = dotted, label="true"];
0.63 -> 0.50 [style = dotted, label="true"];
0.63 -> 0.51 [style = dotted, label="true"];
0.63 -> 0.52 [style = dotted, label="true"];
0.63 -> 0.53 [style = dotted, label="true"];
0.63 -> 0.54 [style = dotted, label="true"];
0.63 -> 0.55 [style = dotted, label="true"];
0.63 -> 0.56 [style = dotted, label="true"];
0.63 -> 0.57 [style = dotted, label="true"];
0.63 -> 0.58 [style = dotted, label="true"];
0.63 -> 0.59 [style = dotted, label="true"];
0.63 -> 0.60 [style = dotted, label="true"];
0.63 -> 0.61 [style = dotted, label="true"];
0.63 -> 0.62 [style = dotted, label="true"];
}
