digraph PDG {
label = "shouldExitBeforeGivenWaitTime_WhenWaitingThreadInterrupted <3...27>";
0.13 [style = filled, label = "Enter <3...27>", fillcolor = aquamarine, shape = diamond];
0.2 [style = filled, label = "var executioner = new SystemExecutioner(executionStrategy); <6>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "executorService.shutdown(); <25>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertThat(TimeUnit.NANOSECONDS.toMillis(elapsedNanos)).describedAs(\"Elapsed millis must be greater than %d\",killerSleepTimeMillis).isGreaterThan(killerSleepTimeMillis); <24>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "var startTime = new AtomicLong(); <7>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "long elapsedNanos =  ( System.nanoTime() - startTime.get() ); <22>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "await().atMost(ONE_SECOND).until(null); <26>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "assertThat(executionStrategy.didExit()).describedAs(\"Execution strategy exit() should have been called\").isTrue(); <23>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "await().atMost(ONE_SECOND).until(null); <21>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "var killerSleepTimeMillis = 100; <13>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "var executionStrategy = new ExecutionStrategies.ExitFlaggingExecutionStrategy(); <5>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "var killerFuture = executorService.submit(null); <14...20>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "var executorService = Executors.newFixedThreadPool(2); <4>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "var executionFuture = executorService.submit(null); <8...12>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.4 [style = solid, label="executorService"];
0.0 -> 0.6 [style = solid, label="executorService"];
0.0 -> 0.11 [style = solid, label="executorService"];
0.1 -> 0.2 [style = solid, label="executionStrategy"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.9 [style = solid, label="executionStrategy"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.8 [style = solid, label="startTime"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.10 [style = solid, label="killerSleepTimeMillis"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="elapsedNanos"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.13 -> 0.0 [style = dotted, label="true"];
0.13 -> 0.0 [style = bold, label=""];
0.13 -> 0.1 [style = dotted, label="true"];
0.13 -> 0.2 [style = dotted, label="true"];
0.13 -> 0.3 [style = dotted, label="true"];
0.13 -> 0.4 [style = dotted, label="true"];
0.13 -> 0.5 [style = dotted, label="true"];
0.13 -> 0.6 [style = dotted, label="true"];
0.13 -> 0.7 [style = dotted, label="true"];
0.13 -> 0.8 [style = dotted, label="true"];
0.13 -> 0.9 [style = dotted, label="true"];
0.13 -> 0.10 [style = dotted, label="true"];
0.13 -> 0.11 [style = dotted, label="true"];
0.13 -> 0.12 [style = dotted, label="true"];
}
