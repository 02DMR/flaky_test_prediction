digraph PDG {
label = "testCheckoutPrepareBuildMultiModuleProject <4...21>";
0.7 [style = filled, label = "while  ( (!prepareBuildQueue.getQueueSnapshot().isEmpty()) || ( ( prepareBuildTaskQueueExecutor.getCurrentTask() != null )) ) <12>", fillcolor = white, shape = diamond];
0.13 [style = filled, label = "assertTrue(\"checkout directory of project 'module-A' does not exist.\",new File(workingDir,Integer.toString(moduleA.getId())).exists()); <19>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "assertTrue(\"checkout directory of project 'multi-module-parent' does not exist.\",new File(workingDir,Integer.toString(rootProject.getId())).exists()); <18>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "File workingDir = configurationService.getWorkingDirectory(); <17>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "this.prepareBuildQueue.put(task); <6>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Project moduleB = getProjectDao().getProjectByName(\"module-B\"); <11>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Project moduleA = getProjectDao().getProjectByName(\"module-A\"); <10>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Thread.sleep(10); <13>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Project rootProject = getProjectDao().getProjectByName(\"multi-module-parent\"); <9>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Enter <4...21>", fillcolor = aquamarine, shape = diamond];
0.2 [style = filled, label = "List<Project> projects = getProjectDao().getProjectsInGroup(task.getProjectGroupId()); <7>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "PrepareBuildProjectsTask task = createTask(\"src/test-projects/multi-module/pom.xml\",false,false); <5>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "ProjectScmRoot scmRoot = projectScmRootDao.getProjectScmRoot(task.getProjectScmRootId()); <15>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "assertTrue(\"checkout directory of project 'module-B' does not exist.\",new File(workingDir,Integer.toString(moduleB.getId())).exists()); <20>", fillcolor = deeppink, shape = ellipse];
0.10 [style = filled, label = "assertEquals(\"Failed to update multi-module project\",UPDATED,scmRoot.getState()); <16>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "assertEquals(\"failed to add all projects\",3,projects.size()); <8>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="task"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="task"];
0.0 -> 0.9 [style = solid, label="task"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = solid, label="projects"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.12 [style = solid, label="rootProject"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.13 [style = solid, label="moduleA"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.14 [style = solid, label="moduleB"];
0.7 -> 0.7 [style = solid, label="prepareBuildTaskQueueExecutor"];
0.7 -> 0.8 [style = dotted, label="true"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = bold, label=""];
0.8 -> 0.7 [style = bold, label=""];
0.9 -> 0.10 [style = solid, label="scmRoot"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="workingDir"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="workingDir"];
0.11 -> 0.14 [style = solid, label="workingDir"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.15 -> 0.0 [style = dotted, label="true"];
0.15 -> 0.0 [style = bold, label=""];
0.15 -> 0.1 [style = dotted, label="true"];
0.15 -> 0.2 [style = dotted, label="true"];
0.15 -> 0.3 [style = dotted, label="true"];
0.15 -> 0.4 [style = dotted, label="true"];
0.15 -> 0.5 [style = dotted, label="true"];
0.15 -> 0.6 [style = dotted, label="true"];
0.15 -> 0.7 [style = dotted, label="true"];
0.15 -> 0.9 [style = dotted, label="true"];
0.15 -> 0.10 [style = dotted, label="true"];
0.15 -> 0.11 [style = dotted, label="true"];
0.15 -> 0.12 [style = dotted, label="true"];
0.15 -> 0.13 [style = dotted, label="true"];
0.15 -> 0.14 [style = dotted, label="true"];
}
