digraph PDG {
label = "testNotAllowNullSchema <3...20>";
0.0 [style = filled, label = "AvroSchema<Foo> avroSchema = AvroSchema.of(SchemaDefinition.builder().withPojo().withAlwaysAllowNull(false).build()); <4>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "Assert.assertNotNull(field); <12>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "Schema.Parser parser = new Schema.Parser(); <6>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Assert.assertNotNull(field.schema().getTypes().get(1).getField(\"field1\")); <14>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Schema.Field field = schema.getField(fieldName); <11>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "assertEquals(schemaJson,SCHEMA_AVRO_NOT_ALLOW_NULL); <8>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "assertEquals(avroSchema.getSchemaInfo().getType(),AVRO); <5>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "if field.name().equals(\"fieldUnableNull\") <16>", fillcolor = deeppink, shape = diamond];
0.10 [style = filled, label = "if field.name().equals(\"field4\") <13>", fillcolor = white, shape = diamond];
0.14 [style = filled, label = "Enter <3...20>", fillcolor = aquamarine, shape = diamond];
0.7 [style = filled, label = "FOO_FIELDS <10>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Schema schema = parser.parse(schemaJson); <9>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Assert.assertNotNull(field.schema().getType()); <17>", fillcolor = deeppink, shape = ellipse];
0.6 [style = filled, label = "String fieldName <10>", fillcolor = tomato, shape = box];
0.3 [style = filled, label = "String schemaJson = new String(avroSchema.getSchemaInfo().getSchema()); <7>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="avroSchema"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.3 [style = solid, label="avroSchema"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.5 [style = solid, label="parser"];
0.3 -> 0.4 [style = solid, label="schemaJson"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="schemaJson"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.8 [style = solid, label="schema"];
0.5 -> 0.8 [style = bold, label=""];
0.5 -> 0.11 [style = solid, label="schema"];
0.5 -> 0.13 [style = solid, label="schema"];
0.8 -> 0.9 [style = solid, label="field"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="field"];
0.8 -> 0.11 [style = solid, label="field"];
0.8 -> 0.12 [style = solid, label="field"];
0.8 -> 0.13 [style = solid, label="field"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = dotted, label="true"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.8 [style = bold, label=""];
0.12 -> 0.13 [style = dotted, label="true"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.8 [style = bold, label=""];
0.14 -> 0.0 [style = dotted, label="true"];
0.14 -> 0.0 [style = bold, label=""];
0.14 -> 0.1 [style = dotted, label="true"];
0.14 -> 0.2 [style = dotted, label="true"];
0.14 -> 0.3 [style = dotted, label="true"];
0.14 -> 0.4 [style = dotted, label="true"];
0.14 -> 0.5 [style = dotted, label="true"];
0.14 -> 0.6 [style = dotted, label="true"];
0.14 -> 0.7 [style = dotted, label="true"];
0.14 -> 0.8 [style = dotted, label="true"];
0.14 -> 0.9 [style = dotted, label="true"];
0.14 -> 0.10 [style = dotted, label="true"];
0.14 -> 0.12 [style = dotted, label="true"];
}
