digraph PDG {
label = "testFlowPendingMetric <4...58>";
0.47 [style = filled, label = "waitForPending(tagsForAllToSink,0,100); <54>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "Map<String,String> tagsForTwoToSink = metricTagsForQueue(\"forward-two\",\"queue\",\"sink\"); <22>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "long totalPending =  ( intPending + stringPending ); <32>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "Map<String,String> tagsForAll = metricTagsForQueue(null,null,null); <26>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "waitForPending(tagsForAll,10,9L,100); <36>", fillcolor = white, shape = ellipse];
0.42 [style = filled, label = "waitForPending(tagsForTwoToSink,8,1000); <49>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "final Program program <9>", fillcolor = tomato, shape = box];
0.3 [style = filled, label = "ProgramController controller = null; <8>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Map<String,String> tagsForSourceToOne = metricTagsForQueue(\"source\",\"ints\",\"forward-one\"); <17>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "waitForPending(tagsForSourceToOne,0,2000); <38>", fillcolor = white, shape = ellipse];
0.38 [style = filled, label = "waitForPending(tagsForSourceToTwoStrings,0,1000); <45>", fillcolor = white, shape = ellipse];
0.46 [style = filled, label = "waitForPending(tagsForTwoToSink,0,2000); <53>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "ProgramRunnerFactory runnerFactory = AppFabricTestHelper.getInjector().getInstance(); <6>", fillcolor = white, shape = ellipse];
0.41 [style = filled, label = "waitForPending(tagsForOneToSink,3,1000); <48>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Map<String,String> tagsForSourceToTwo = metricTagsForQueue(\"source\",null,\"forward-two\"); <18>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "Map<String,String> tagsForAllToOne = metricTagsForQueue(null,null,\"forward-one\"); <23>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "waitForPending(tagsForSourceToTwo,7,6L,500); <34>", fillcolor = white, shape = ellipse];
0.49 [style = filled, label = "Enter <4...58>", fillcolor = aquamarine, shape = diamond];
0.35 [style = filled, label = "Assert.assertTrue(new File(tempFolder,\"two-i\").createNewFile()); <42>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Map<String,String> tagsForAllToSink = metricTagsForQueue(null,null,\"sink\"); <25>", fillcolor = white, shape = ellipse];
0.45 [style = filled, label = "waitForPending(tagsForOneToSink,0,2000); <52>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Map<String,String> tagsForOneToSink = metricTagsForQueue(\"forward-one\",\"queue\",\"sink\"); <21>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final ApplicationWithPrograms app = AppFabricTestHelper.deployApplicationWithManager(,TEMP_FOLDER_SUPPLIER); <5>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "waitForPending(tagsForAllToSink,3,100); <41>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "waitForPending(tagsForAllToOne,3,100); <29>", fillcolor = white, shape = ellipse];
0.44 [style = filled, label = "Assert.assertTrue(new File(tempFolder,\"three\").createNewFile()); <51>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "waitForPending(tagsForAllToTwo,7,6L,100); <35>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "ProgramRunner runner = runnerFactory.create(program.getType()); <11>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "Map<String,String> tagsForAllToTwo = metricTagsForQueue(null,null,\"forward-two\"); <24>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "waitForPending(tagsForOneToSink,3,1000); <40>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "BasicArguments systemArgs = new BasicArguments(ImmutableMap.of(RUN_ID,RunIds.generate().getId())); <12>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "long stringPending = waitForPending(tagsForSourceToTwoStrings,3,4L,1000); <31>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "Assert.assertTrue(new File(tempFolder,\"two-s\").createNewFile()); <43>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "long intPending = waitForPending(tagsForSourceToTwoInts,3,4L,1000); <30>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "Assert.assertTrue(String.format(\"Expected the pending events count to be 6, 7 or 8. But it was %d\",totalPending), ( ( ( ( ( totalPending == 6 )) || ( ( totalPending == 7 )) )) || ( ( totalPending == 8 )) )); <33>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "Assert.assertTrue(new File(tempFolder,\"one\").createNewFile()); <37>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "Assert.assertNotNull(controller); <16>", fillcolor = white, shape = ellipse];
0.37 [style = filled, label = "waitForPending(tagsForSourceToTwoInts,0,2000); <44>", fillcolor = white, shape = ellipse];
0.48 [style = filled, label = "{
controller.stop();
} <55...57>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "controller = runner.run(program,new SimpleProgramOptions(program.getName(),systemArgs,new BasicArguments(ImmutableMap.of(\"temp\",tempFolder.getAbsolutePath(),\"count\",\"4\")))); <13>", fillcolor = white, shape = ellipse];
0.43 [style = filled, label = "waitForPending(tagsForAllToSink,11,100); <50>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "File tempFolder = TEMP_FOLDER_SUPPLIER.get(); <7>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Map<String,String> tagsForSourceToTwoStrings = metricTagsForQueue(\"source\",\"strings\",\"forward-two\"); <20>", fillcolor = white, shape = ellipse];
0.39 [style = filled, label = "waitForPending(tagsForSourceToTwo,0,1000); <46>", fillcolor = white, shape = ellipse];
0.40 [style = filled, label = "waitForPending(tagsForAllToTwo,0,100); <47>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "waitForPending(tagsForSourceToOne,3,5000); <28>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "app.getPrograms() <9>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Map<String,String> tagsForSourceToTwoInts = metricTagsForQueue(\"source\",\"ints\",\"forward-two\"); <19>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "if  ( program.getType() == ProgramType.FLOW ) <10>", fillcolor = white, shape = diamond];
0.32 [style = filled, label = "waitForPending(tagsForAllToOne,0,100); <39>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.7 [style = solid, label="runnerFactory"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.9 [style = solid, label="tempFolder"];
0.2 -> 0.30 [style = solid, label="tempFolder"];
0.2 -> 0.35 [style = solid, label="tempFolder"];
0.2 -> 0.36 [style = solid, label="tempFolder"];
0.2 -> 0.44 [style = solid, label="tempFolder"];
0.3 -> 0.6 [style = bold, label=""];
0.3 -> 0.10 [style = solid, label="controller"];
0.3 -> 0.48 [style = solid, label="controller"];
0.6 -> 0.6 [style = solid, label="program"];
0.6 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = dotted, label="true"];
0.6 -> 0.7 [style = solid, label="program"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = dotted, label="true"];
0.6 -> 0.9 [style = dotted, label="true"];
0.6 -> 0.9 [style = solid, label="program"];
0.6 -> 0.10 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="runner"];
0.8 -> 0.9 [style = solid, label="systemArgs"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.6 [style = bold, label=""];
0.9 -> 0.9 [style = solid, label="runner"];
0.9 -> 0.10 [style = solid, label="controller"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.48 [style = solid, label="controller"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.21 [style = solid, label="tagsForSourceToOne"];
0.11 -> 0.31 [style = solid, label="tagsForSourceToOne"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.27 [style = solid, label="tagsForSourceToTwo"];
0.12 -> 0.39 [style = solid, label="tagsForSourceToTwo"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.23 [style = solid, label="tagsForSourceToTwoInts"];
0.13 -> 0.37 [style = solid, label="tagsForSourceToTwoInts"];
0.14 -> 0.15 [style = bold, label=""];
0.14 -> 0.24 [style = solid, label="tagsForSourceToTwoStrings"];
0.14 -> 0.38 [style = solid, label="tagsForSourceToTwoStrings"];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.33 [style = solid, label="tagsForOneToSink"];
0.15 -> 0.41 [style = solid, label="tagsForOneToSink"];
0.15 -> 0.45 [style = solid, label="tagsForOneToSink"];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.42 [style = solid, label="tagsForTwoToSink"];
0.16 -> 0.46 [style = solid, label="tagsForTwoToSink"];
0.17 -> 0.18 [style = bold, label=""];
0.17 -> 0.22 [style = solid, label="tagsForAllToOne"];
0.17 -> 0.32 [style = solid, label="tagsForAllToOne"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.28 [style = solid, label="tagsForAllToTwo"];
0.18 -> 0.40 [style = solid, label="tagsForAllToTwo"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.34 [style = solid, label="tagsForAllToSink"];
0.19 -> 0.43 [style = solid, label="tagsForAllToSink"];
0.19 -> 0.47 [style = solid, label="tagsForAllToSink"];
0.20 -> 0.21 [style = bold, label=""];
0.20 -> 0.29 [style = solid, label="tagsForAll"];
0.21 -> 0.22 [style = bold, label=""];
0.22 -> 0.23 [style = bold, label=""];
0.23 -> 0.24 [style = bold, label=""];
0.23 -> 0.25 [style = solid, label="intPending"];
0.24 -> 0.25 [style = solid, label="stringPending"];
0.24 -> 0.25 [style = bold, label=""];
0.25 -> 0.26 [style = solid, label="totalPending"];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = bold, label=""];
0.29 -> 0.30 [style = bold, label=""];
0.30 -> 0.31 [style = bold, label=""];
0.31 -> 0.32 [style = bold, label=""];
0.32 -> 0.33 [style = bold, label=""];
0.33 -> 0.34 [style = bold, label=""];
0.34 -> 0.35 [style = bold, label=""];
0.35 -> 0.36 [style = bold, label=""];
0.36 -> 0.37 [style = bold, label=""];
0.37 -> 0.38 [style = bold, label=""];
0.38 -> 0.39 [style = bold, label=""];
0.39 -> 0.40 [style = bold, label=""];
0.40 -> 0.41 [style = bold, label=""];
0.41 -> 0.42 [style = bold, label=""];
0.42 -> 0.43 [style = bold, label=""];
0.43 -> 0.44 [style = bold, label=""];
0.44 -> 0.45 [style = bold, label=""];
0.45 -> 0.46 [style = bold, label=""];
0.46 -> 0.47 [style = bold, label=""];
0.47 -> 0.48 [style = bold, label=""];
0.49 -> 0.0 [style = dotted, label="true"];
0.49 -> 0.0 [style = bold, label=""];
0.49 -> 0.1 [style = dotted, label="true"];
0.49 -> 0.2 [style = dotted, label="true"];
0.49 -> 0.3 [style = dotted, label="true"];
0.49 -> 0.4 [style = dotted, label="true"];
0.49 -> 0.5 [style = dotted, label="true"];
0.49 -> 0.6 [style = dotted, label="true"];
0.49 -> 0.10 [style = dotted, label="true"];
0.49 -> 0.11 [style = dotted, label="true"];
0.49 -> 0.12 [style = dotted, label="true"];
0.49 -> 0.13 [style = dotted, label="true"];
0.49 -> 0.14 [style = dotted, label="true"];
0.49 -> 0.15 [style = dotted, label="true"];
0.49 -> 0.16 [style = dotted, label="true"];
0.49 -> 0.17 [style = dotted, label="true"];
0.49 -> 0.18 [style = dotted, label="true"];
0.49 -> 0.19 [style = dotted, label="true"];
0.49 -> 0.20 [style = dotted, label="true"];
0.49 -> 0.21 [style = dotted, label="true"];
0.49 -> 0.22 [style = dotted, label="true"];
0.49 -> 0.23 [style = dotted, label="true"];
0.49 -> 0.24 [style = dotted, label="true"];
0.49 -> 0.25 [style = dotted, label="true"];
0.49 -> 0.26 [style = dotted, label="true"];
0.49 -> 0.27 [style = dotted, label="true"];
0.49 -> 0.28 [style = dotted, label="true"];
0.49 -> 0.29 [style = dotted, label="true"];
0.49 -> 0.30 [style = dotted, label="true"];
0.49 -> 0.31 [style = dotted, label="true"];
0.49 -> 0.32 [style = dotted, label="true"];
0.49 -> 0.33 [style = dotted, label="true"];
0.49 -> 0.34 [style = dotted, label="true"];
0.49 -> 0.35 [style = dotted, label="true"];
0.49 -> 0.36 [style = dotted, label="true"];
0.49 -> 0.37 [style = dotted, label="true"];
0.49 -> 0.38 [style = dotted, label="true"];
0.49 -> 0.39 [style = dotted, label="true"];
0.49 -> 0.40 [style = dotted, label="true"];
0.49 -> 0.41 [style = dotted, label="true"];
0.49 -> 0.42 [style = dotted, label="true"];
0.49 -> 0.43 [style = dotted, label="true"];
0.49 -> 0.44 [style = dotted, label="true"];
0.49 -> 0.45 [style = dotted, label="true"];
0.49 -> 0.46 [style = dotted, label="true"];
0.49 -> 0.47 [style = dotted, label="true"];
}
