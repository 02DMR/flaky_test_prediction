digraph PDG {
label = "assertDurationIsInRange <4...23>";
0.1 [style = filled, label = "long minimum = (long)( ( (double)expectedMillis * 0.90 )); <6>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "long maximum = Math.max((long)( ( (double)expectedMillis * 1.10 )),10); <8...9>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "if  ( duration < minimum ) <14>", fillcolor = white, shape = diamond];
0.0 [style = filled, label = "long expectedMillis <4>", fillcolor = tomato, shape = box];
0.3 [style = filled, label = "long waitMillis = Math.max( ( expectedMillis * 10 ),10); <10>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "long duration = getDurationMillis(waitMillis); <12>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Assert.fail( ( \"expected duration: \" + expectedMillis ) + \" minimum duration: \" + minimum + \" actual duration too short: \" + duration); <15...17>", fillcolor = deeppink, shape = ellipse];
0.7 [style = filled, label = "if  ( duration > maximum ) <18>", fillcolor = deeppink, shape = diamond];
0.8 [style = filled, label = "Assert.fail( ( \"expected duration: \" + expectedMillis ) + \" maximum duration: \" + maximum + \" actual duration too long: \" + duration); <19...21>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "Enter <4...23>", fillcolor = aquamarine, shape = diamond];
0.0 -> 0.1 [style = solid, label="expectedMillis"];
0.0 -> 0.2 [style = solid, label="expectedMillis"];
0.0 -> 0.3 [style = solid, label="expectedMillis"];
0.0 -> 0.6 [style = solid, label="expectedMillis"];
0.0 -> 0.8 [style = solid, label="expectedMillis"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="minimum"];
0.1 -> 0.6 [style = solid, label="minimum"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.7 [style = solid, label="maximum"];
0.2 -> 0.8 [style = solid, label="maximum"];
0.3 -> 0.4 [style = solid, label="waitMillis"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = solid, label="duration"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="duration"];
0.4 -> 0.7 [style = solid, label="duration"];
0.4 -> 0.8 [style = solid, label="duration"];
0.5 -> 0.6 [style = dotted, label="true"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = dotted, label="false"];
0.5 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = dotted, label="true"];
0.7 -> 0.8 [style = bold, label=""];
0.9 -> 0.0 [style = solid, label="expectedMillis"];
0.9 -> 0.1 [style = dotted, label="true"];
0.9 -> 0.1 [style = bold, label=""];
0.9 -> 0.2 [style = dotted, label="true"];
0.9 -> 0.3 [style = dotted, label="true"];
0.9 -> 0.4 [style = dotted, label="true"];
0.9 -> 0.5 [style = dotted, label="true"];
}
