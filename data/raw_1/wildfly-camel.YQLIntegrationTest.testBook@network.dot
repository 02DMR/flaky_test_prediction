digraph PDG {
label = "testBook <3...36>";
0.18 [style = filled, label = "{
camelctx.stop();
} <33...35>", fillcolor = deeppink, shape = ellipse];
0.12 [style = filled, label = "Assert.assertThat(httpRequest,containsString(\"format=xml\")); <27>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "Assert.assertThat(httpRequest,containsString(\"https\")); <25>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "final Integer status = exchange.getIn().getHeader(CAMEL_YQL_HTTP_STATUS,); <23>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "camelctx.start(); <13>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "final Exchange exchange = mockEndpoint.getReceivedExchanges().get(0); <19>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "ProducerTemplate template = camelctx.createProducerTemplate(); <16>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Assert.assertThat(httpRequest,containsString(\"debug=false\")); <29>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Assert.assertThat(httpRequest,containsString(\"crossProduct=optimized\")); <30>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "template.sendBody(\"direct:start\",null); <17>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "final String httpRequest = exchange.getIn().getHeader(CAMEL_YQL_HTTP_REQUEST,); <24>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Assert.assertThat(httpRequest,containsString(\"diagnostics=false\")); <28>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "CamelContext camelctx = new DefaultCamelContext(); <4>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "final String body = exchange.getIn().getBody(); <22>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "Assert.assertNotNull(body); <31>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Assert.assertThat(httpRequest,containsString( ( \"q=\" + URLEncoder.encode(BOOK_QUERY,\"UTF-8\") ))); <26>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "MockEndpoint mockEndpoint = camelctx.getEndpoint(\"mock:result\",); <15>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Enter <3...36>", fillcolor = aquamarine, shape = diamond];
0.1 [style = filled, label = "camelctx.addRoutes(new RouteBuilder(){
@Override public void configure ( ) {
from(\"direct:start\").toF(\"yql://%s?format=xml&crossProduct=optimized&env=%s\",BOOK_QUERY,ENV).to(\"mock:result\");
}}); <5...12>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "Assert.assertEquals(HttpStatus.SC_OK,status.intValue()); <32>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="camelctx"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="camelctx"];
0.0 -> 0.3 [style = solid, label="camelctx"];
0.0 -> 0.4 [style = solid, label="camelctx"];
0.0 -> 0.18 [style = solid, label="camelctx"];
0.1 -> 0.2 [style = solid, label="camelctx"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="camelctx"];
0.1 -> 0.4 [style = solid, label="camelctx"];
0.1 -> 0.18 [style = solid, label="camelctx"];
0.2 -> 0.3 [style = solid, label="camelctx"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="camelctx"];
0.2 -> 0.18 [style = solid, label="camelctx"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.6 [style = solid, label="mockEndpoint"];
0.4 -> 0.5 [style = solid, label="template"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="exchange"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="exchange"];
0.6 -> 0.9 [style = solid, label="exchange"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.16 [style = solid, label="body"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.17 [style = solid, label="status"];
0.9 -> 0.10 [style = solid, label="httpRequest"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="httpRequest"];
0.9 -> 0.12 [style = solid, label="httpRequest"];
0.9 -> 0.13 [style = solid, label="httpRequest"];
0.9 -> 0.14 [style = solid, label="httpRequest"];
0.9 -> 0.15 [style = solid, label="httpRequest"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.19 -> 0.0 [style = dotted, label="true"];
0.19 -> 0.0 [style = bold, label=""];
0.19 -> 0.1 [style = dotted, label="true"];
0.19 -> 0.2 [style = dotted, label="true"];
0.19 -> 0.3 [style = dotted, label="true"];
0.19 -> 0.4 [style = dotted, label="true"];
0.19 -> 0.5 [style = dotted, label="true"];
0.19 -> 0.6 [style = dotted, label="true"];
0.19 -> 0.7 [style = dotted, label="true"];
0.19 -> 0.8 [style = dotted, label="true"];
0.19 -> 0.9 [style = dotted, label="true"];
0.19 -> 0.10 [style = dotted, label="true"];
0.19 -> 0.11 [style = dotted, label="true"];
0.19 -> 0.12 [style = dotted, label="true"];
0.19 -> 0.13 [style = dotted, label="true"];
0.19 -> 0.14 [style = dotted, label="true"];
0.19 -> 0.15 [style = dotted, label="true"];
0.19 -> 0.16 [style = dotted, label="true"];
0.19 -> 0.17 [style = dotted, label="true"];
}
