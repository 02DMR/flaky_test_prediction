digraph PDG {
label = "testRemoveSuperColumn <2...22>";
0.14 [style = filled, label = "assert( ( resolved.getAllColumns().first().getMarkedForDeleteAt() == 1 )); <17>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "List<ColumnFamily> families = store.getColumnFamilies(\"key1\",\"Super1\",new IdentityFilter()); <13>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "assert(!families.get(1).getAllColumns().first().isMarkedForDelete()); <15>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "ColumnFamily resolved = ColumnFamily.resolve(families); <16>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "assertNull(ColumnFamilyStore.removeDeleted(resolved,Integer.MAX_VALUE)); <21>", fillcolor = deeppink, shape = ellipse];
0.16 [style = filled, label = "assert( ( subColumns.size() == 1 )); <19>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "RowMutation rm; <5>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "rm = new RowMutation(\"Table1\",\"key1\"); <10>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "store.forceBlockingFlush(); <9>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assert( ( families.get(0).getAllColumns().first().getMarkedForDeleteAt() == 1 )); <14>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Collection<IColumn> subColumns = resolved.getAllColumns().first().getSubColumns(); <18>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Enter <2...22>", fillcolor = aquamarine, shape = diamond];
0.3 [style = filled, label = "rm = new RowMutation(\"Table1\",\"key1\"); <6>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "rm.apply(); <12>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "rm.add(\"Super1:SC1:Column1\",\"asdf\".getBytes(),0); <7>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "rm.apply(); <8>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Table table = Table.open(\"Table1\"); <3>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "assert( ( subColumns.iterator().next().timestamp() == 0 )); <20>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "ColumnFamilyStore store = table.getColumnFamilyStore(\"Super1\"); <4>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "rm.delete(\"Super1:SC1\",1); <11>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="table"];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.6 [style = solid, label="store"];
0.1 -> 0.10 [style = solid, label="store"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="rm"];
0.2 -> 0.5 [style = solid, label="rm"];
0.2 -> 0.8 [style = solid, label="rm"];
0.2 -> 0.9 [style = solid, label="rm"];
0.3 -> 0.4 [style = solid, label="rm"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="rm"];
0.3 -> 0.8 [style = solid, label="rm"];
0.3 -> 0.9 [style = solid, label="rm"];
0.4 -> 0.5 [style = solid, label="rm"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.8 [style = solid, label="rm"];
0.4 -> 0.9 [style = solid, label="rm"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.8 [style = solid, label="rm"];
0.5 -> 0.9 [style = solid, label="rm"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.10 [style = solid, label="store"];
0.7 -> 0.8 [style = solid, label="rm"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="rm"];
0.8 -> 0.9 [style = solid, label="rm"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="families"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="families"];
0.10 -> 0.13 [style = solid, label="families"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = solid, label="resolved"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.15 [style = solid, label="resolved"];
0.13 -> 0.18 [style = solid, label="resolved"];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = solid, label="subColumns"];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.17 [style = solid, label="subColumns"];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.19 -> 0.0 [style = dotted, label="true"];
0.19 -> 0.0 [style = bold, label=""];
0.19 -> 0.1 [style = dotted, label="true"];
0.19 -> 0.2 [style = dotted, label="true"];
0.19 -> 0.3 [style = dotted, label="true"];
0.19 -> 0.4 [style = dotted, label="true"];
0.19 -> 0.5 [style = dotted, label="true"];
0.19 -> 0.6 [style = dotted, label="true"];
0.19 -> 0.7 [style = dotted, label="true"];
0.19 -> 0.8 [style = dotted, label="true"];
0.19 -> 0.9 [style = dotted, label="true"];
0.19 -> 0.10 [style = dotted, label="true"];
0.19 -> 0.11 [style = dotted, label="true"];
0.19 -> 0.12 [style = dotted, label="true"];
0.19 -> 0.13 [style = dotted, label="true"];
0.19 -> 0.14 [style = dotted, label="true"];
0.19 -> 0.15 [style = dotted, label="true"];
0.19 -> 0.16 [style = dotted, label="true"];
0.19 -> 0.17 [style = dotted, label="true"];
0.19 -> 0.18 [style = dotted, label="true"];
}
