digraph PDG {
label = "testMarkRegionsRecoveringInZK <3...28>";
0.3 [style = filled, label = "master.balanceSwitch(false); <7>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "startCluster(NUM_RS,curConf); <6>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "HRegionInfo region = regions.get(0); <14>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Enter <3...28>", fillcolor = aquamarine, shape = diamond];
0.4 [style = filled, label = "List<RegionServerThread> rsts = cluster.getLiveRegionServerThreads(); <8>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "curConf.setBoolean(DISTRIBUTED_LOG_REPLAY_KEY,true); <5>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "final HRegionServer hrs = rsts.get(0).getRegionServer(); <12>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "List<String> recoveringRegions = ZKUtil.listChildrenNoWatch(zkw,ZKUtil.joinZNode(zkw.recoveringRegionsZNode,region.getEncodedName())); <19>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Configuration curConf = HBaseConfiguration.create(); <4>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "HTable ht = installTable(zkw,\"table\",\"family\",40); <10>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "final ZooKeeperWatcher zkw = master.getZooKeeperWatcher(); <9>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "assertEquals(recoveringRegions.size(),2); <20>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "ht.close(); <27>", fillcolor = deeppink, shape = ellipse];
0.7 [style = filled, label = "final SplitLogManager slm = master.getMasterFileSystem().splitLogManager; <11>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Set<HRegionInfo> regionSet = new HashSet<HRegionInfo>(); <15>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "TEST_UTIL.waitFor(60000,1000,new Waiter.Predicate<Exception>(){
@Override public boolean evaluate ( ) {
return  ( hrs.getRecoveringRegions().size() == 0 );
}}); <21...26>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "slm.markRegionsRecoveringInZK(rsts.get(0).getRegionServer().getServerName(),regionSet); <17>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "regionSet.add(region); <16>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "slm.markRegionsRecoveringInZK(rsts.get(1).getRegionServer().getServerName(),regionSet); <18>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "List<HRegionInfo> regions = ProtobufUtil.getOnlineRegions(hrs); <13>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="curConf"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="curConf"];
0.1 -> 0.2 [style = solid, label="curConf"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="master"];
0.3 -> 0.7 [style = solid, label="master"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.8 [style = solid, label="rsts"];
0.4 -> 0.13 [style = solid, label="rsts"];
0.4 -> 0.14 [style = solid, label="rsts"];
0.5 -> 0.6 [style = solid, label="zkw"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.15 [style = solid, label="zkw"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.18 [style = solid, label="ht"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.13 [style = solid, label="slm"];
0.7 -> 0.14 [style = solid, label="slm"];
0.8 -> 0.9 [style = solid, label="hrs"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.17 [style = solid, label="hrs"];
0.9 -> 0.10 [style = solid, label="regions"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="region"];
0.10 -> 0.15 [style = solid, label="region"];
0.11 -> 0.12 [style = solid, label="regionSet"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="regionSet"];
0.11 -> 0.14 [style = solid, label="regionSet"];
0.12 -> 0.13 [style = solid, label="regionSet"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.14 [style = solid, label="regionSet"];
0.13 -> 0.14 [style = solid, label="slm"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = solid, label="recoveringRegions"];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.19 -> 0.0 [style = dotted, label="true"];
0.19 -> 0.0 [style = bold, label=""];
0.19 -> 0.1 [style = dotted, label="true"];
0.19 -> 0.2 [style = dotted, label="true"];
0.19 -> 0.3 [style = dotted, label="true"];
0.19 -> 0.4 [style = dotted, label="true"];
0.19 -> 0.5 [style = dotted, label="true"];
0.19 -> 0.6 [style = dotted, label="true"];
0.19 -> 0.7 [style = dotted, label="true"];
0.19 -> 0.8 [style = dotted, label="true"];
0.19 -> 0.9 [style = dotted, label="true"];
0.19 -> 0.10 [style = dotted, label="true"];
0.19 -> 0.11 [style = dotted, label="true"];
0.19 -> 0.12 [style = dotted, label="true"];
0.19 -> 0.13 [style = dotted, label="true"];
0.19 -> 0.14 [style = dotted, label="true"];
0.19 -> 0.15 [style = dotted, label="true"];
0.19 -> 0.16 [style = dotted, label="true"];
0.19 -> 0.17 [style = dotted, label="true"];
0.19 -> 0.18 [style = dotted, label="true"];
}
