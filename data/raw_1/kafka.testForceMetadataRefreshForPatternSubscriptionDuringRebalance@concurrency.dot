digraph PDG {
label = "testForceMetadataRefreshForPatternSubscriptionDuringRebalance <3...30>";
0.1 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener); <5>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "metadata.requestUpdate(); <27>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "Enter <3...30>", fillcolor = aquamarine, shape = diamond];
0.14 [style = filled, label = "client.poll(Long.MAX_VALUE,time.milliseconds()); <28>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE)); <23>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "final Set<String> updatedSubscriptionSet = new HashSet<>(Arrays.asList(topic1,topic2)); <25>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE)); <8>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,singletonList(t1p))); <21>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){
@Override public boolean matches (AbstractRequest body  ) {
SyncGroupRequest sync = (SyncGroupRequest)body;
return  (  ( sync.memberId().equals(consumerId) &&  ( sync.generationId() == 1 ) ) && sync.groupAssignment().isEmpty() );
}},syncGroupResponse(singletonList(t1p),Errors.NONE)); <12...20>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "client.prepareMetadataUpdate(metadataResponse); <10>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription()); <7>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "assertEquals(updatedSubscriptionSet,subscriptions.subscription()); <26>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,consumerId,\"leader\",Errors.NONE)); <11>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending()); <29>", fillcolor = deeppink, shape = ellipse];
0.2 [style = filled, label = "client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1))); <6>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE)); <9>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final String consumerId = \"consumer\"; <4>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.7 [style = solid, label="consumerId"];
0.0 -> 0.8 [style = solid, label="consumerId"];
0.0 -> 0.9 [style = solid, label="consumerId"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="subscriptions"];
0.1 -> 0.12 [style = solid, label="subscriptions"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="client"];
0.2 -> 0.6 [style = solid, label="client"];
0.2 -> 0.7 [style = solid, label="client"];
0.2 -> 0.8 [style = solid, label="client"];
0.2 -> 0.14 [style = solid, label="client"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="client"];
0.4 -> 0.7 [style = solid, label="client"];
0.4 -> 0.8 [style = solid, label="client"];
0.4 -> 0.14 [style = solid, label="client"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.10 [style = solid, label="coordinator"];
0.5 -> 0.15 [style = solid, label="coordinator"];
0.6 -> 0.7 [style = solid, label="client"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="client"];
0.6 -> 0.14 [style = solid, label="client"];
0.7 -> 0.8 [style = solid, label="client"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.14 [style = solid, label="client"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.14 [style = solid, label="client"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.15 [style = solid, label="coordinator"];
0.11 -> 0.12 [style = solid, label="updatedSubscriptionSet"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.16 -> 0.0 [style = dotted, label="true"];
0.16 -> 0.0 [style = bold, label=""];
0.16 -> 0.1 [style = dotted, label="true"];
0.16 -> 0.2 [style = dotted, label="true"];
0.16 -> 0.3 [style = dotted, label="true"];
0.16 -> 0.4 [style = dotted, label="true"];
0.16 -> 0.5 [style = dotted, label="true"];
0.16 -> 0.6 [style = dotted, label="true"];
0.16 -> 0.7 [style = dotted, label="true"];
0.16 -> 0.8 [style = dotted, label="true"];
0.16 -> 0.9 [style = dotted, label="true"];
0.16 -> 0.10 [style = dotted, label="true"];
0.16 -> 0.11 [style = dotted, label="true"];
0.16 -> 0.12 [style = dotted, label="true"];
0.16 -> 0.13 [style = dotted, label="true"];
0.16 -> 0.14 [style = dotted, label="true"];
0.16 -> 0.15 [style = dotted, label="true"];
}
