digraph PDG {
label = "testAddAndRetrieve <4...17>";
0.2 [style = filled, label = "FakePeer peer = new FakePeer(dnId,false); <10>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertEquals(peer,cache.get(dnId,false)); <14>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "Enter <4...17>", fillcolor = aquamarine, shape = diamond];
0.4 [style = filled, label = "assertTrue(!peer.isClosed()); <12>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "DatanodeID dnId = new DatanodeID(\"192.168.0.1\",\"fakehostname\",\"fake_storage_id\",100,101,102); <7...9>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "PeerCache cache = PeerCache.getInstance(3,100000); <6>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "cache.put(dnId,peer); <11>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "assertEquals(1,cache.size()); <13>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertEquals(0,cache.size()); <15>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "cache.close(); <16>", fillcolor = deeppink, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.3 [style = solid, label="cache"];
0.0 -> 0.5 [style = solid, label="cache"];
0.0 -> 0.6 [style = solid, label="cache"];
0.0 -> 0.7 [style = solid, label="cache"];
0.0 -> 0.8 [style = solid, label="cache"];
0.1 -> 0.2 [style = solid, label="dnId"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="dnId"];
0.1 -> 0.6 [style = solid, label="dnId"];
0.2 -> 0.3 [style = solid, label="peer"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="peer"];
0.2 -> 0.6 [style = solid, label="peer"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="cache"];
0.3 -> 0.6 [style = solid, label="cache"];
0.3 -> 0.7 [style = solid, label="cache"];
0.3 -> 0.8 [style = solid, label="cache"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.9 -> 0.0 [style = dotted, label="true"];
0.9 -> 0.0 [style = bold, label=""];
0.9 -> 0.1 [style = dotted, label="true"];
0.9 -> 0.2 [style = dotted, label="true"];
0.9 -> 0.3 [style = dotted, label="true"];
0.9 -> 0.4 [style = dotted, label="true"];
0.9 -> 0.5 [style = dotted, label="true"];
0.9 -> 0.6 [style = dotted, label="true"];
0.9 -> 0.7 [style = dotted, label="true"];
0.9 -> 0.8 [style = dotted, label="true"];
}
