digraph PDG {
label = "testBrokerSelectionForAntiAffinityGroup <3...36>";
0.18 [style = filled, label = "int i = 0 <22>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = " ( i < 5 ) <22>", fillcolor = white, shape = diamond];
0.11 [style = filled, label = "domain2.brokers = Sets.newHashSet(broker2); <15>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "admin1.clusters().createFailureDomain(cluster,\"domain2\",domain2); <16>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "String selectedBroker2 = primaryLoadManager.selectBrokerForAssignment(serviceUnit2).get(); <34>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "ServiceUnitId serviceUnit1 = makeBundle(tenant,cluster,\"ns1\"); <31>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "i++ <22>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "Enter <3...36>", fillcolor = aquamarine, shape = diamond];
0.16 [style = filled, label = "admin1.namespaces().setNamespaceAntiAffinityGroup(namespace1,namespaceAntiAffinityGroup); <20>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "final String cluster = pulsar1.getConfiguration().getClusterName(); <6>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final String broker1 = primaryHost; <4>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "final String namespace1 =  ( ( ( ( ( tenant + \"/\" )) + cluster )) + \"/ns1\" ); <8>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "assertNotEquals(selectedBroker1,selectedBroker2); <35>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "admin1.clusters().createFailureDomain(cluster,\"domain1\",domain1); <13>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "FailureDomain domain2 = new FailureDomain(); <14>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "ServiceUnitId serviceUnit2 = makeBundle(tenant,cluster,\"ns2\"); <33>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "admin1.namespaces().createNamespace(namespace1); <18>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "final String broker2 = secondaryHost; <5>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "domain1.brokers = Sets.newHashSet(broker1); <12>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "Thread.sleep(200); <24>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "FailureDomain domain1 = new FailureDomain(); <11>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "assertTrue(isLoadManagerUpdatedDomainCache(secondaryLoadManager)); <30>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "if  ( (!isLoadManagerUpdatedDomainCache(primaryLoadManager)) || (!isLoadManagerUpdatedDomainCache(secondaryLoadManager)) ) <23>", fillcolor = white, shape = diamond];
0.13 [style = filled, label = "admin1.tenants().createTenant(tenant,new TenantInfo(null,Sets.newHashSet(cluster))); <17>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "final String namespaceAntiAffinityGroup = \"group\"; <10>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "final String namespace2 =  ( ( ( ( ( tenant + \"/\" )) + cluster )) + \"/ns2\" ); <9>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "assertTrue(isLoadManagerUpdatedDomainCache(primaryLoadManager)); <29>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "String selectedBroker1 = primaryLoadManager.selectBrokerForAssignment(serviceUnit1).get(); <32>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "final String tenant =  ( \"tenant-\" + UUID.randomUUID().toString() ); <7>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "admin1.namespaces().createNamespace(namespace2); <19>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "admin1.namespaces().setNamespaceAntiAffinityGroup(namespace2,namespaceAntiAffinityGroup); <21>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.8 [style = solid, label="broker1"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.11 [style = solid, label="broker2"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="cluster"];
0.2 -> 0.5 [style = solid, label="cluster"];
0.2 -> 0.9 [style = solid, label="cluster"];
0.2 -> 0.12 [style = solid, label="cluster"];
0.2 -> 0.13 [style = solid, label="cluster"];
0.2 -> 0.25 [style = solid, label="cluster"];
0.2 -> 0.27 [style = solid, label="cluster"];
0.3 -> 0.4 [style = solid, label="tenant"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="tenant"];
0.3 -> 0.13 [style = solid, label="tenant"];
0.3 -> 0.25 [style = solid, label="tenant"];
0.3 -> 0.27 [style = solid, label="tenant"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.14 [style = solid, label="namespace1"];
0.4 -> 0.16 [style = solid, label="namespace1"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.15 [style = solid, label="namespace2"];
0.5 -> 0.17 [style = solid, label="namespace2"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.16 [style = solid, label="namespaceAntiAffinityGroup"];
0.6 -> 0.17 [style = solid, label="namespaceAntiAffinityGroup"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="domain1"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="domain2"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = solid, label="i"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.20 [style = solid, label="i"];
0.19 -> 0.20 [style = dotted, label="true"];
0.19 -> 0.21 [style = dotted, label="true"];
0.19 -> 0.21 [style = bold, label=""];
0.19 -> 0.23 [style = bold, label=""];
0.20 -> 0.19 [style = solid, label="i"];
0.20 -> 0.19 [style = bold, label=""];
0.20 -> 0.20 [style = solid, label="i"];
0.21 -> 0.22 [style = dotted, label="true"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.23 [style = bold, label=""];
0.22 -> 0.20 [style = bold, label=""];
0.23 -> 0.24 [style = bold, label=""];
0.24 -> 0.25 [style = bold, label=""];
0.25 -> 0.26 [style = solid, label="serviceUnit1"];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.26 -> 0.29 [style = solid, label="selectedBroker1"];
0.27 -> 0.28 [style = solid, label="serviceUnit2"];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = solid, label="selectedBroker2"];
0.28 -> 0.29 [style = bold, label=""];
0.30 -> 0.0 [style = dotted, label="true"];
0.30 -> 0.0 [style = bold, label=""];
0.30 -> 0.1 [style = dotted, label="true"];
0.30 -> 0.2 [style = dotted, label="true"];
0.30 -> 0.3 [style = dotted, label="true"];
0.30 -> 0.4 [style = dotted, label="true"];
0.30 -> 0.5 [style = dotted, label="true"];
0.30 -> 0.6 [style = dotted, label="true"];
0.30 -> 0.7 [style = dotted, label="true"];
0.30 -> 0.8 [style = dotted, label="true"];
0.30 -> 0.9 [style = dotted, label="true"];
0.30 -> 0.10 [style = dotted, label="true"];
0.30 -> 0.11 [style = dotted, label="true"];
0.30 -> 0.12 [style = dotted, label="true"];
0.30 -> 0.13 [style = dotted, label="true"];
0.30 -> 0.14 [style = dotted, label="true"];
0.30 -> 0.15 [style = dotted, label="true"];
0.30 -> 0.16 [style = dotted, label="true"];
0.30 -> 0.17 [style = dotted, label="true"];
0.30 -> 0.18 [style = dotted, label="true"];
0.30 -> 0.19 [style = dotted, label="true"];
0.30 -> 0.23 [style = dotted, label="true"];
0.30 -> 0.24 [style = dotted, label="true"];
0.30 -> 0.25 [style = dotted, label="true"];
0.30 -> 0.26 [style = dotted, label="true"];
0.30 -> 0.27 [style = dotted, label="true"];
0.30 -> 0.28 [style = dotted, label="true"];
0.30 -> 0.29 [style = dotted, label="true"];
}
