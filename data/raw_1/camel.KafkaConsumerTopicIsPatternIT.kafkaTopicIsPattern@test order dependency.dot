digraph PDG {
label = "kafkaTopicIsPattern <4...16>";
0.3 [style = filled, label = "to.expectedHeaderValuesReceivedInAnyOrder(LAST_RECORD_BEFORE_COMMIT,null,null,null,null,null); <8>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Enter <4...16>", fillcolor = aquamarine, shape = diamond];
0.8 [style = filled, label = "ProducerRecord<String,String> data = new ProducerRecord<>(TOPIC,\"1\",msg); <11>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "to.expectedMessageCount(5); <5>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "producer.send(data); <12>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertEquals(5,StreamSupport.stream(recordsCaptured.get(0).records(TOPIC).spliterator(),false).count()); <15>", fillcolor = deeppink, shape = ellipse];
0.1 [style = filled, label = "to.expectedBodiesReceivedInAnyOrder(\"message-0\",\"message-1\",\"message-2\",\"message-3\",\"message-4\"); <6>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "int k = 0 <9>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "k++ <9>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "to.assertIsSatisfied(3000); <14>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "String msg =  ( \"message-\" + k ); <10>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "to.allMessages().header(TOPIC).isEqualTo(\"test\"); <7>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = " ( k < 5 ) <9>", fillcolor = white, shape = diamond];
0.0 -> 0.1 [style = solid, label="to"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="to"];
0.0 -> 0.3 [style = solid, label="to"];
0.0 -> 0.10 [style = solid, label="to"];
0.1 -> 0.2 [style = solid, label="to"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="to"];
0.1 -> 0.10 [style = solid, label="to"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.10 [style = solid, label="to"];
0.4 -> 0.5 [style = solid, label="k"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="k"];
0.4 -> 0.7 [style = solid, label="k"];
0.5 -> 0.6 [style = dotted, label="true"];
0.5 -> 0.7 [style = dotted, label="true"];
0.5 -> 0.7 [style = bold, label=""];
0.5 -> 0.8 [style = dotted, label="true"];
0.5 -> 0.9 [style = dotted, label="true"];
0.5 -> 0.10 [style = bold, label=""];
0.6 -> 0.5 [style = solid, label="k"];
0.6 -> 0.5 [style = bold, label=""];
0.6 -> 0.6 [style = solid, label="k"];
0.6 -> 0.7 [style = solid, label="k"];
0.7 -> 0.8 [style = solid, label="msg"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = solid, label="data"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.6 [style = bold, label=""];
0.9 -> 0.9 [style = solid, label="producer"];
0.10 -> 0.11 [style = bold, label=""];
0.12 -> 0.0 [style = dotted, label="true"];
0.12 -> 0.0 [style = bold, label=""];
0.12 -> 0.1 [style = dotted, label="true"];
0.12 -> 0.2 [style = dotted, label="true"];
0.12 -> 0.3 [style = dotted, label="true"];
0.12 -> 0.4 [style = dotted, label="true"];
0.12 -> 0.5 [style = dotted, label="true"];
0.12 -> 0.10 [style = dotted, label="true"];
0.12 -> 0.11 [style = dotted, label="true"];
}
