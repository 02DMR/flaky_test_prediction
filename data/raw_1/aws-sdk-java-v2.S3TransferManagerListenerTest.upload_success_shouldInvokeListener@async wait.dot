digraph PDG {
label = "upload_success_shouldInvokeListener <3...30>";
0.12 [style = filled, label = "ArgumentCaptor<TransferListener.Context.BytesTransferred> captor2 = ArgumentCaptor.forClass(); <16>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "Files.write(path,randomBytes(contentLength)); <6>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "upload.completionFuture().join(); <9>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "ArgumentCaptor<TransferListener.Context.TransferInitiated> captor1 = ArgumentCaptor.forClass(); <10>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertThat(ctx1.request()).isSameAs(uploadRequest); <13>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "verify(listener,times(1)).bytesTransferred(captor2.capture()); <17>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "ArgumentCaptor<TransferListener.Context.TransferComplete> captor3 = ArgumentCaptor.forClass(); <22>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "TransferListener.Context.TransferComplete ctx3 = captor3.getValue(); <24>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "verify(listener,times(1)).transferInitiated(captor1.capture()); <11>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "assertThat(ctx3.request()).isSameAs(uploadRequest); <25>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Upload upload = tm.upload(uploadRequest); <8>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertThat(ctx1.progressSnapshot().bytesTransferred()).isZero(); <15>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "verifyNoMoreInteractions(listener); <29>", fillcolor = deeppink, shape = ellipse];
0.16 [style = filled, label = "assertThat(ctx2.progressSnapshot().transferSizeInBytes()).hasValue(contentLength); <20>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertThat(ctx1.progressSnapshot().transferSizeInBytes()).hasValue(contentLength); <14>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "assertThat(ctx3.completedTransfer()).isSameAs(upload.completionFuture().get()); <28>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "assertThat(ctx3.progressSnapshot().bytesTransferred()).isEqualTo(contentLength); <27>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "TransferListener listener = mock(); <4>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "assertThat(ctx3.progressSnapshot().transferSizeInBytes()).hasValue(contentLength); <26>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "assertThat(ctx2.progressSnapshot().bytesTransferred()).isPositive(); <21>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "TransferListener.Context.TransferInitiated ctx1 = captor1.getValue(); <12>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "Enter <3...30>", fillcolor = aquamarine, shape = diamond];
0.19 [style = filled, label = "verify(listener,times(1)).transferComplete(captor3.capture()); <23>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "UploadRequest uploadRequest = UploadRequest.builder().putObjectRequest(null).source(path).overrideConfiguration(null).build(); <7>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "assertThat(ctx2.request()).isSameAs(uploadRequest); <19>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "Path path = newTempFile(); <5>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "TransferListener.Context.BytesTransferred ctx2 = captor2.getValue(); <18>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.7 [style = solid, label="listener"];
0.0 -> 0.13 [style = solid, label="listener"];
0.0 -> 0.19 [style = solid, label="listener"];
0.0 -> 0.25 [style = solid, label="listener"];
0.1 -> 0.2 [style = solid, label="path"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="path"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = solid, label="uploadRequest"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.9 [style = solid, label="uploadRequest"];
0.3 -> 0.15 [style = solid, label="uploadRequest"];
0.3 -> 0.21 [style = solid, label="uploadRequest"];
0.4 -> 0.5 [style = solid, label="upload"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.24 [style = solid, label="upload"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="captor1"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="captor1"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = solid, label="ctx1"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="ctx1"];
0.8 -> 0.11 [style = solid, label="ctx1"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = solid, label="captor2"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.14 [style = solid, label="captor2"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = solid, label="ctx2"];
0.14 -> 0.15 [style = bold, label=""];
0.14 -> 0.16 [style = solid, label="ctx2"];
0.14 -> 0.17 [style = solid, label="ctx2"];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = solid, label="captor3"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.20 [style = solid, label="captor3"];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = solid, label="ctx3"];
0.20 -> 0.21 [style = bold, label=""];
0.20 -> 0.22 [style = solid, label="ctx3"];
0.20 -> 0.23 [style = solid, label="ctx3"];
0.20 -> 0.24 [style = solid, label="ctx3"];
0.21 -> 0.22 [style = bold, label=""];
0.22 -> 0.23 [style = bold, label=""];
0.23 -> 0.24 [style = bold, label=""];
0.24 -> 0.25 [style = bold, label=""];
0.26 -> 0.0 [style = dotted, label="true"];
0.26 -> 0.0 [style = bold, label=""];
0.26 -> 0.1 [style = dotted, label="true"];
0.26 -> 0.2 [style = dotted, label="true"];
0.26 -> 0.3 [style = dotted, label="true"];
0.26 -> 0.4 [style = dotted, label="true"];
0.26 -> 0.5 [style = dotted, label="true"];
0.26 -> 0.6 [style = dotted, label="true"];
0.26 -> 0.7 [style = dotted, label="true"];
0.26 -> 0.8 [style = dotted, label="true"];
0.26 -> 0.9 [style = dotted, label="true"];
0.26 -> 0.10 [style = dotted, label="true"];
0.26 -> 0.11 [style = dotted, label="true"];
0.26 -> 0.12 [style = dotted, label="true"];
0.26 -> 0.13 [style = dotted, label="true"];
0.26 -> 0.14 [style = dotted, label="true"];
0.26 -> 0.15 [style = dotted, label="true"];
0.26 -> 0.16 [style = dotted, label="true"];
0.26 -> 0.17 [style = dotted, label="true"];
0.26 -> 0.18 [style = dotted, label="true"];
0.26 -> 0.19 [style = dotted, label="true"];
0.26 -> 0.20 [style = dotted, label="true"];
0.26 -> 0.21 [style = dotted, label="true"];
0.26 -> 0.22 [style = dotted, label="true"];
0.26 -> 0.23 [style = dotted, label="true"];
0.26 -> 0.24 [style = dotted, label="true"];
0.26 -> 0.25 [style = dotted, label="true"];
}
