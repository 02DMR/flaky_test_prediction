digraph PDG {
label = "testLockExpiration <3...24>";
0.12 [style = filled, label = "assertFalse(message,lockedNode.isLocked()); <17>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "assertFalse(message,lockedNode.hasProperty(JCR_LOCK_IS_DEEP)); <19>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "{
} <11...12>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "lockedNode.unlock(); <4>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "long remaining = lock.getSecondsRemaining(); <7>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "Enter <3...24>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "wait( ( remaining * 2000 )); <10>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "long secs = lock.getSecondsRemaining(); <13>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "if  ( remaining <= hint ) <8>", fillcolor = white, shape = diamond];
0.1 [style = filled, label = "long hint = 1; <5>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertTrue( ( \"A released lock must return a negative number of seconds, was: \" + secs ), ( secs < 0 )); <14>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertFalse(message,lock.isLive()); <16>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "throw new NotExecutableException(\"timeout hint was ignored.\"); <22>", fillcolor = deeppink, shape = ellipse];
0.15 [style = filled, label = "assertFalse(message,lockedNode.hasProperty(JCR_LOCK_OWNER)); <20>", fillcolor = deeppink, shape = ellipse];
0.6 [style = filled, label = "catch ( InterruptedException ignore ) <11>", fillcolor = white, shape = diamond];
0.2 [style = filled, label = "lock = lockMgr.lock(lockedNode.getPath(),isDeep(),isSessionScoped(),hint,null); <6>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "String message =  ( \"If the timeout hint is respected the lock\" + \" must be automatically released.\" ); <15>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "assertFalse(message,lockMgr.isLocked(lockedNode.getPath())); <18>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="lockedNode"];
0.0 -> 0.12 [style = solid, label="lockedNode"];
0.0 -> 0.13 [style = solid, label="lockedNode"];
0.0 -> 0.14 [style = solid, label="lockedNode"];
0.0 -> 0.15 [style = solid, label="lockedNode"];
0.1 -> 0.2 [style = solid, label="hint"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.4 [style = solid, label="hint"];
0.2 -> 0.3 [style = solid, label="lock"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="lock"];
0.2 -> 0.11 [style = solid, label="lock"];
0.2 -> 0.13 [style = solid, label="lockMgr"];
0.3 -> 0.4 [style = solid, label="remaining"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="remaining"];
0.4 -> 0.5 [style = dotted, label="true"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.8 [style = dotted, label="true"];
0.4 -> 0.9 [style = dotted, label="true"];
0.4 -> 0.10 [style = dotted, label="true"];
0.4 -> 0.11 [style = dotted, label="true"];
0.4 -> 0.12 [style = dotted, label="true"];
0.4 -> 0.13 [style = dotted, label="true"];
0.4 -> 0.14 [style = dotted, label="true"];
0.4 -> 0.15 [style = dotted, label="true"];
0.4 -> 0.16 [style = dotted, label="false"];
0.4 -> 0.16 [style = bold, label=""];
0.5 -> 0.8 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = solid, label="secs"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="message"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="message"];
0.10 -> 0.13 [style = solid, label="message"];
0.10 -> 0.14 [style = solid, label="message"];
0.10 -> 0.15 [style = solid, label="message"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.17 -> 0.0 [style = dotted, label="true"];
0.17 -> 0.0 [style = bold, label=""];
0.17 -> 0.1 [style = dotted, label="true"];
0.17 -> 0.2 [style = dotted, label="true"];
0.17 -> 0.3 [style = dotted, label="true"];
0.17 -> 0.4 [style = dotted, label="true"];
}
