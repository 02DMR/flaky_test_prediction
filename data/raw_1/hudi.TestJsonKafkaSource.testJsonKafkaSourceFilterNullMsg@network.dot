digraph PDG {
label = "testJsonKafkaSourceFilterNullMsg <4...15>";
0.10 [style = filled, label = "Enter <4...15>", fillcolor = aquamarine, shape = diamond];
0.4 [style = filled, label = "SourceFormatAdapter kafkaSource = new SourceFormatAdapter(jsonSource); <9>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "testUtils.sendMessages(TEST_TOPIC_NAME,new String[][]); <12>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "assertEquals(Option.empty(),kafkaSource.fetchNewDataInAvroFormat(Option.empty(),Long.MAX_VALUE).getBatch()); <10>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "testUtils.sendMessages(TEST_TOPIC_NAME,Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\",1000))); <11>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "InputBatch<JavaRDD<GenericRecord>> fetch1 = kafkaSource.fetchNewDataInAvroFormat(Option.empty(),Long.MAX_VALUE); <13>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "testUtils.createTopic(TEST_TOPIC_NAME,2); <5>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "Source jsonSource = new JsonKafkaSource(props,jsc,sparkSession,schemaProvider,metrics); <8>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "TypedProperties props = createPropsForJsonSource(null,\"earliest\"); <7>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator(); <6>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertEquals(1000,fetch1.getBatch().get().count()); <14>", fillcolor = deeppink, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.6 [style = solid, label="testUtils"];
0.0 -> 0.7 [style = solid, label="testUtils"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.6 [style = solid, label="dataGenerator"];
0.2 -> 0.3 [style = solid, label="props"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = solid, label="jsonSource"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = solid, label="kafkaSource"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.8 [style = solid, label="kafkaSource"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="testUtils"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = solid, label="fetch1"];
0.8 -> 0.9 [style = bold, label=""];
0.10 -> 0.0 [style = dotted, label="true"];
0.10 -> 0.0 [style = bold, label=""];
0.10 -> 0.1 [style = dotted, label="true"];
0.10 -> 0.2 [style = dotted, label="true"];
0.10 -> 0.3 [style = dotted, label="true"];
0.10 -> 0.4 [style = dotted, label="true"];
0.10 -> 0.5 [style = dotted, label="true"];
0.10 -> 0.6 [style = dotted, label="true"];
0.10 -> 0.7 [style = dotted, label="true"];
0.10 -> 0.8 [style = dotted, label="true"];
0.10 -> 0.9 [style = dotted, label="true"];
}
