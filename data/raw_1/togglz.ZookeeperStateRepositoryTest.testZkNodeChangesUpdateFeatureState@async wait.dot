digraph PDG {
label = "testZkNodeChangesUpdateFeatureState <3...31>";
0.11 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1); <15>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "FeatureState savedFeatureState = new FeatureState(TestFeature.FEATURE); <5>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "latch.await(2,TimeUnit.SECONDS); <27>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "loadedFeatureState = stateRepository.getFeatureState(TestFeature.FEATURE); <29>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "stateRepository.setFeatureState(savedFeatureState); <8>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Thread.sleep(25); <28>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "assertThat(reflectionEquals(externallySetState,loadedFeatureState),is(true)); <30>", fillcolor = deeppink, shape = ellipse];
0.12 [style = filled, label = "new Thread(new Runnable(){
@Override public void run ( ) {
try {
serverClientPair.client.setData().forPath( ( TEST_ZNODE + \"/FEATURE\" ),json.getBytes(\"UTF-8\"));
latch.countDown();
}catch (catch ( Exception e )) 
}}).start(); <16...26>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "setupTestWithEmptyDatastore(); <4>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "FeatureState loadedFeatureState = stateRepository.getFeatureState(TestFeature.FEATURE); <9>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "FeatureStateStorageWrapper externallySetStateWrapper = new FeatureStateStorageWrapper(); <11>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "savedFeatureState.setParameter(PARAM_USERS,\"user1, user2, user3\"); <7>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "FeatureState externallySetState = new FeatureState(TestFeature.FEATURE); <12>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "savedFeatureState.setStrategyId(ID); <6>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "final String json = objectMapper.writeValueAsString(externallySetStateWrapper); <14>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertThat(reflectionEquals(savedFeatureState,loadedFeatureState),is(true)); <10>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "Enter <3...31>", fillcolor = aquamarine, shape = diamond];
0.9 [style = filled, label = "ObjectMapper objectMapper = new ObjectMapper(); <13>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = solid, label="savedFeatureState"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="savedFeatureState"];
0.1 -> 0.4 [style = solid, label="savedFeatureState"];
0.1 -> 0.6 [style = solid, label="savedFeatureState"];
0.2 -> 0.3 [style = solid, label="savedFeatureState"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="savedFeatureState"];
0.2 -> 0.6 [style = solid, label="savedFeatureState"];
0.3 -> 0.4 [style = solid, label="savedFeatureState"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.6 [style = solid, label="savedFeatureState"];
0.4 -> 0.5 [style = solid, label="stateRepository"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.15 [style = solid, label="stateRepository"];
0.5 -> 0.6 [style = solid, label="loadedFeatureState"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.16 [style = solid, label="loadedFeatureState"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.10 [style = solid, label="externallySetStateWrapper"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.16 [style = solid, label="externallySetState"];
0.9 -> 0.10 [style = solid, label="objectMapper"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="json"];
0.11 -> 0.12 [style = solid, label="latch"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.13 [style = solid, label="latch"];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = solid, label="loadedFeatureState"];
0.15 -> 0.16 [style = bold, label=""];
0.17 -> 0.0 [style = dotted, label="true"];
0.17 -> 0.0 [style = bold, label=""];
0.17 -> 0.1 [style = dotted, label="true"];
0.17 -> 0.2 [style = dotted, label="true"];
0.17 -> 0.3 [style = dotted, label="true"];
0.17 -> 0.4 [style = dotted, label="true"];
0.17 -> 0.5 [style = dotted, label="true"];
0.17 -> 0.6 [style = dotted, label="true"];
0.17 -> 0.7 [style = dotted, label="true"];
0.17 -> 0.8 [style = dotted, label="true"];
0.17 -> 0.9 [style = dotted, label="true"];
0.17 -> 0.10 [style = dotted, label="true"];
0.17 -> 0.11 [style = dotted, label="true"];
0.17 -> 0.12 [style = dotted, label="true"];
0.17 -> 0.13 [style = dotted, label="true"];
0.17 -> 0.14 [style = dotted, label="true"];
0.17 -> 0.15 [style = dotted, label="true"];
0.17 -> 0.16 [style = dotted, label="true"];
}
