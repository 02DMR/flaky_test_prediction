digraph PDG {
label = "testLogicalTypePreviewRun <4...65>";
0.5 [style = filled, label = "ETLBatchConfig etlConfig = ETLBatchConfig.builder().addStage(new ETLStage(\"source\",MockSource.getPlugin(sourceTableName,schema))).addStage(new ETLStage(\"transform\",IdentityTransform.getPlugin())).addStage(new ETLStage(\"sink\",MockSink.getPlugin(sinkTableName))).addConnection(\"source\",\"transform\").addConnection(\"transform\",\"sink\").setEngine(engine).setNumOfRecordsPreview(100).build(); <15...23>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Tasks.waitFor(PreviewStatus.Status.COMPLETED,new Callable<PreviewStatus.Status>(){
@Override public PreviewStatus.Status call ( ) {
PreviewStatus status = previewManager.getStatus(previewId);
return  ( status == null )? null: status.getStatus();
}},5,TimeUnit.MINUTES); <38...44>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Engine engine <4>", fillcolor = tomato, shape = box];
0.2 [style = filled, label = "String sourceTableName = \"singleInput\"; <6>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "ZonedDateTime expectedMillis = ZonedDateTime.of(2018,11,11,11,11,11, ( 123 * 1000 ) * 1000,ZoneId.ofOffset(\"UTC\",ZoneOffset.UTC)); <29...30>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Schema schema = Schema.recordOf(\"testRecord\",Schema.Field.of(\"name\",Schema.of(Schema.Type.STRING)),Schema.Field.of(\"date\",Schema.of(Schema.LogicalType.DATE)),Schema.Field.of(\"ts\",Schema.of(Schema.LogicalType.TIMESTAMP_MILLIS))); <8...13>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "StructuredRecord recordBob = StructuredRecord.builder(schema).set(\"name\",\"bob\").setDate(\"date\",LocalDate.of(2003,11,18)).setTimestamp(\"ts\",expectedMillis).build(); <33...34>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Assert.assertEquals(actualRecordSamuel.get(\"date\"),\"2002-11-18\"); <48>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "validateMetric(2,previewId,\"source.records.out\",previewManager); <56>", fillcolor = white, shape = ellipse];
0.34 [style = filled, label = "deleteDatasetInstance(NamespaceId.DEFAULT.dataset(sourceTableName)); <63>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "StructuredRecord recordSamuel = StructuredRecord.builder(schema).set(\"name\",\"samuel\").setDate(\"date\",LocalDate.of(2002,11,18)).setTimestamp(\"ts\",expectedMillis).build(); <31...32>", fillcolor = white, shape = ellipse];
0.35 [style = filled, label = "Assert.assertNotNull(previewManager.getRunId(previewId)); <64>", fillcolor = deeppink, shape = ellipse];
0.32 [style = filled, label = "DataSetManager<Table> sinkManager = getDataset(sinkTableName); <61>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "Assert.assertEquals(actualRecordBob.get(\"date\"),\"2003-11-18\"); <51>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "validateMetric(2,previewId,\"source.records.in\",previewManager); <55>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "DataSetManager<Table> inputManager = getDataset(NamespaceId.DEFAULT.dataset(sourceTableName)); <28>", fillcolor = white, shape = ellipse];
0.28 [style = filled, label = "validateMetric(2,previewId,\"transform.records.in\",previewManager); <57>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "validateMetric(2,previewId,\"sink.records.in\",previewManager); <60>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "AppRequest<ETLBatchConfig> appRequest = new AppRequest<>(APP_ARTIFACT_RANGE,etlConfig,previewConfig); <36>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "addDatasetInstance(.getName(),sourceTableName,DatasetProperties.of(ImmutableMap.of(\"schema\",schema.toString()))); <26...27>", fillcolor = white, shape = ellipse];
0.33 [style = filled, label = "Assert.assertNull(sinkManager.get()); <62>", fillcolor = white, shape = ellipse];
0.36 [style = filled, label = "Enter <4...65>", fillcolor = aquamarine, shape = diamond];
0.18 [style = filled, label = "StructuredRecord actualRecordSamuel = GSON.fromJson(data.get(0),); <47>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "List<JsonElement> data = previewManager.getData(previewId,\"source\").get(DATA_TRACER_PROPERTY); <46>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "validateMetric(2,previewId,\"transform.records.out\",previewManager); <58>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "checkPreviewStore(previewManager,previewId,\"source\",2); <45>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "String sinkTableName = \"singleOutput\"; <7>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "PreviewConfig previewConfig = new PreviewConfig(SmartWorkflow.NAME,ProgramType.WORKFLOW,Collections.emptyMap(),10); <24...25>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "checkPreviewStore(previewManager,previewId,\"transform\",2); <53>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "PreviewManager previewManager = getPreviewManager(); <5>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "ApplicationId previewId = previewManager.start(NamespaceId.DEFAULT,appRequest); <37>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "MockSource.writeInput(inputManager,ImmutableList.of(recordSamuel,recordBob)); <35>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "validateMetric(2,previewId,\"sink.records.out\",previewManager); <59>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "Assert.assertEquals(actualRecordSamuel.get(\"ts\"),\"2018-11-11T11:11:11.123Z[UTC]\"); <49>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "checkPreviewStore(previewManager,previewId,\"sink\",2); <54>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "StructuredRecord actualRecordBob = GSON.fromJson(data.get(1),); <50>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "Assert.assertEquals(actualRecordBob.get(\"ts\"),\"2018-11-11T11:11:11.123Z[UTC]\"); <52>", fillcolor = white, shape = ellipse];
0.0 -> 0.5 [style = solid, label="engine"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.14 [style = solid, label="previewManager"];
0.1 -> 0.15 [style = solid, label="previewManager"];
0.1 -> 0.16 [style = solid, label="previewManager"];
0.1 -> 0.17 [style = solid, label="previewManager"];
0.1 -> 0.24 [style = solid, label="previewManager"];
0.1 -> 0.25 [style = solid, label="previewManager"];
0.1 -> 0.26 [style = solid, label="previewManager"];
0.1 -> 0.27 [style = solid, label="previewManager"];
0.1 -> 0.28 [style = solid, label="previewManager"];
0.1 -> 0.29 [style = solid, label="previewManager"];
0.1 -> 0.30 [style = solid, label="previewManager"];
0.1 -> 0.31 [style = solid, label="previewManager"];
0.1 -> 0.35 [style = solid, label="previewManager"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.5 [style = solid, label="sourceTableName"];
0.2 -> 0.7 [style = solid, label="sourceTableName"];
0.2 -> 0.8 [style = solid, label="sourceTableName"];
0.2 -> 0.34 [style = solid, label="sourceTableName"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="sinkTableName"];
0.3 -> 0.32 [style = solid, label="sinkTableName"];
0.4 -> 0.5 [style = solid, label="schema"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.7 [style = solid, label="schema"];
0.4 -> 0.10 [style = solid, label="schema"];
0.4 -> 0.11 [style = solid, label="schema"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.13 [style = solid, label="etlConfig"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.13 [style = solid, label="previewConfig"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.12 [style = solid, label="inputManager"];
0.9 -> 0.10 [style = solid, label="expectedMillis"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="expectedMillis"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="recordSamuel"];
0.11 -> 0.12 [style = solid, label="recordBob"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.13 -> 0.14 [style = solid, label="appRequest"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = solid, label="previewId"];
0.14 -> 0.15 [style = bold, label=""];
0.14 -> 0.16 [style = solid, label="previewId"];
0.14 -> 0.17 [style = solid, label="previewId"];
0.14 -> 0.24 [style = solid, label="previewId"];
0.14 -> 0.25 [style = solid, label="previewId"];
0.14 -> 0.26 [style = solid, label="previewId"];
0.14 -> 0.27 [style = solid, label="previewId"];
0.14 -> 0.28 [style = solid, label="previewId"];
0.14 -> 0.29 [style = solid, label="previewId"];
0.14 -> 0.30 [style = solid, label="previewId"];
0.14 -> 0.31 [style = solid, label="previewId"];
0.14 -> 0.35 [style = solid, label="previewId"];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = solid, label="data"];
0.17 -> 0.18 [style = bold, label=""];
0.17 -> 0.21 [style = solid, label="data"];
0.18 -> 0.19 [style = solid, label="actualRecordSamuel"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.20 [style = solid, label="actualRecordSamuel"];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = bold, label=""];
0.21 -> 0.22 [style = solid, label="actualRecordBob"];
0.21 -> 0.22 [style = bold, label=""];
0.21 -> 0.23 [style = solid, label="actualRecordBob"];
0.22 -> 0.23 [style = bold, label=""];
0.23 -> 0.24 [style = bold, label=""];
0.24 -> 0.25 [style = bold, label=""];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.28 [style = bold, label=""];
0.28 -> 0.29 [style = bold, label=""];
0.29 -> 0.30 [style = bold, label=""];
0.30 -> 0.31 [style = bold, label=""];
0.31 -> 0.32 [style = bold, label=""];
0.32 -> 0.33 [style = solid, label="sinkManager"];
0.32 -> 0.33 [style = bold, label=""];
0.33 -> 0.34 [style = bold, label=""];
0.34 -> 0.35 [style = bold, label=""];
0.36 -> 0.0 [style = solid, label="engine"];
0.36 -> 0.1 [style = dotted, label="true"];
0.36 -> 0.1 [style = bold, label=""];
0.36 -> 0.2 [style = dotted, label="true"];
0.36 -> 0.3 [style = dotted, label="true"];
0.36 -> 0.4 [style = dotted, label="true"];
0.36 -> 0.5 [style = dotted, label="true"];
0.36 -> 0.6 [style = dotted, label="true"];
0.36 -> 0.7 [style = dotted, label="true"];
0.36 -> 0.8 [style = dotted, label="true"];
0.36 -> 0.9 [style = dotted, label="true"];
0.36 -> 0.10 [style = dotted, label="true"];
0.36 -> 0.11 [style = dotted, label="true"];
0.36 -> 0.12 [style = dotted, label="true"];
0.36 -> 0.13 [style = dotted, label="true"];
0.36 -> 0.14 [style = dotted, label="true"];
0.36 -> 0.15 [style = dotted, label="true"];
0.36 -> 0.16 [style = dotted, label="true"];
0.36 -> 0.17 [style = dotted, label="true"];
0.36 -> 0.18 [style = dotted, label="true"];
0.36 -> 0.19 [style = dotted, label="true"];
0.36 -> 0.20 [style = dotted, label="true"];
0.36 -> 0.21 [style = dotted, label="true"];
0.36 -> 0.22 [style = dotted, label="true"];
0.36 -> 0.23 [style = dotted, label="true"];
0.36 -> 0.24 [style = dotted, label="true"];
0.36 -> 0.25 [style = dotted, label="true"];
0.36 -> 0.26 [style = dotted, label="true"];
0.36 -> 0.27 [style = dotted, label="true"];
0.36 -> 0.28 [style = dotted, label="true"];
0.36 -> 0.29 [style = dotted, label="true"];
0.36 -> 0.30 [style = dotted, label="true"];
0.36 -> 0.31 [style = dotted, label="true"];
0.36 -> 0.32 [style = dotted, label="true"];
0.36 -> 0.33 [style = dotted, label="true"];
0.36 -> 0.34 [style = dotted, label="true"];
0.36 -> 0.35 [style = dotted, label="true"];
}
