digraph PDG {
label = "testScannerResultCodes <3...16>";
0.0 [style = filled, label = "Header[] headers = new Header[][]; <4>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "headers[1] = new Header(\"Accept\",Constants.MIMETYPE_JSON); <6>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Response response = client.post( ( ( ( \"/\" + TABLE )) + \"/scanner\" ),headers,\"<Scanner/>\".getBytes()); <8>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertNotNull(scannerUrl); <11>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Enter <3...16>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "assertEquals(response.getCode(),201); <9>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "String scannerUrl = response.getLocation(); <10>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "response = client.get(scannerUrl); <14>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertEquals(response.getCode(),200); <13>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "headers[2] = new Header(\"Accept-Encoding\",\"gzip\"); <7>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "headers[0] = new Header(\"Content-Type\",Constants.MIMETYPE_XML); <5>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "response = client.get(scannerUrl); <12>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertEquals(response.getCode(),204); <15>", fillcolor = deeppink, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.4 [style = solid, label="headers"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.4 [style = solid, label="headers"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="headers"];
0.3 -> 0.4 [style = solid, label="headers"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = solid, label="response"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="response"];
0.4 -> 0.9 [style = solid, label="response"];
0.4 -> 0.11 [style = solid, label="response"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="scannerUrl"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="scannerUrl"];
0.6 -> 0.10 [style = solid, label="scannerUrl"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = solid, label="response"];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="client"];
0.8 -> 0.11 [style = solid, label="response"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="response"];
0.10 -> 0.11 [style = bold, label=""];
0.12 -> 0.0 [style = dotted, label="true"];
0.12 -> 0.0 [style = bold, label=""];
0.12 -> 0.1 [style = dotted, label="true"];
0.12 -> 0.2 [style = dotted, label="true"];
0.12 -> 0.3 [style = dotted, label="true"];
0.12 -> 0.4 [style = dotted, label="true"];
0.12 -> 0.5 [style = dotted, label="true"];
0.12 -> 0.6 [style = dotted, label="true"];
0.12 -> 0.7 [style = dotted, label="true"];
0.12 -> 0.8 [style = dotted, label="true"];
0.12 -> 0.9 [style = dotted, label="true"];
0.12 -> 0.10 [style = dotted, label="true"];
0.12 -> 0.11 [style = dotted, label="true"];
}
