digraph PDG {
label = "iterableOfIterator <3...15>";
0.6 [style = filled, label = "iterable.forEach(null); <10>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "when(mockIterator.next()).thenReturn(1).thenReturn(2).thenReturn(3).thenThrow(new NoSuchElementException(\"Iterator exhausted\")); <6>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertThat(set).hasSize(3); <11>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "verify(mockIterator,times(3)).next(); <14>", fillcolor = deeppink, shape = ellipse];
0.8 [style = filled, label = "assertThat(set).containsExactly(1,2,3); <12>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Enter <3...15>", fillcolor = aquamarine, shape = diamond];
0.1 [style = filled, label = "when(mockIterator.hasNext()).thenReturn(true).thenReturn(true).thenReturn(true).thenReturn(false); <5>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "assertThat(iterable).isNotNull(); <8>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "Iterable<Object> iterable = CollectionUtils.iterable(mockIterator); <7>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Set<Object> set = new HashSet<>(); <9>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Iterator<Object> mockIterator = mock(,\"MockIterator\"); <4>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "verify(mockIterator,times(4)).hasNext(); <13>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="mockIterator"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="mockIterator"];
0.0 -> 0.3 [style = solid, label="mockIterator"];
0.0 -> 0.9 [style = solid, label="mockIterator"];
0.0 -> 0.10 [style = solid, label="mockIterator"];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = solid, label="iterable"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.6 [style = solid, label="iterable"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="set"];
0.5 -> 0.8 [style = solid, label="set"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.11 -> 0.0 [style = dotted, label="true"];
0.11 -> 0.0 [style = bold, label=""];
0.11 -> 0.1 [style = dotted, label="true"];
0.11 -> 0.2 [style = dotted, label="true"];
0.11 -> 0.3 [style = dotted, label="true"];
0.11 -> 0.4 [style = dotted, label="true"];
0.11 -> 0.5 [style = dotted, label="true"];
0.11 -> 0.6 [style = dotted, label="true"];
0.11 -> 0.7 [style = dotted, label="true"];
0.11 -> 0.8 [style = dotted, label="true"];
0.11 -> 0.9 [style = dotted, label="true"];
0.11 -> 0.10 [style = dotted, label="true"];
}
