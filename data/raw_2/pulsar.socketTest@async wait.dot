digraph PDG {
label = "socketTest <3...33>";
0.2 [style = filled, label = "WebSocketClient consumeClient = new WebSocketClient(); <6>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Assert.assertEquals(produceSocket.getBuffer(),consumeSocket.getBuffer()); <24>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "ClientUpgradeRequest produceRequest = new ClientUpgradeRequest(); <15>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "URI consumeUri = URI.create(CONSUME_URI); <4>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "WebSocketClient produceClient = new WebSocketClient(); <8>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "log.info(\"Connecting to : {}\",consumeUri); <14>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "produceClient.start(); <16>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Thread.sleep(1000); <18>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "Assert.assertTrue( ( produceSocket.getBuffer().size() > 0 )); <23>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "Enter <3...33>", fillcolor = aquamarine, shape = diamond];
0.3 [style = filled, label = "SimpleConsumerSocket consumeSocket = new SimpleConsumerSocket(); <7>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "ClientUpgradeRequest consumeRequest = new ClientUpgradeRequest(); <12>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Assert.assertTrue(consumerFuture.get().isOpen()); <19>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Assert.assertTrue(producerFuture.get().isOpen()); <20>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "consumeClient.start(); <11>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "produceSocket.awaitClose(1,TimeUnit.SECONDS); <22>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "SimpleProducerSocket produceSocket = new SimpleProducerSocket(); <9>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Future<Session> consumerFuture = consumeClient.connect(consumeSocket,consumeUri,consumeRequest); <13>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "{
try {
consumeClient.stop();
produceClient.stop();
}catch (catch ( Exception e )) 
} <25...32>", fillcolor = deeppink, shape = ellipse];
0.12 [style = filled, label = "Future<Session> producerFuture = produceClient.connect(produceSocket,produceUri,produceRequest); <17>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "URI produceUri = URI.create(PRODUCE_URI); <5>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "consumeSocket.awaitClose(1,TimeUnit.SECONDS); <21>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.8 [style = solid, label="consumeUri"];
0.0 -> 0.9 [style = solid, label="consumeUri"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.12 [style = solid, label="produceUri"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.6 [style = solid, label="consumeClient"];
0.2 -> 0.8 [style = solid, label="consumeClient"];
0.2 -> 0.20 [style = solid, label="consumeClient"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.8 [style = solid, label="consumeSocket"];
0.3 -> 0.16 [style = solid, label="consumeSocket"];
0.3 -> 0.19 [style = solid, label="consumeSocket"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.11 [style = solid, label="produceClient"];
0.4 -> 0.12 [style = solid, label="produceClient"];
0.4 -> 0.20 [style = solid, label="produceClient"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.12 [style = solid, label="produceSocket"];
0.5 -> 0.17 [style = solid, label="produceSocket"];
0.5 -> 0.18 [style = solid, label="produceSocket"];
0.5 -> 0.19 [style = solid, label="produceSocket"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="consumeClient"];
0.6 -> 0.20 [style = solid, label="consumeClient"];
0.7 -> 0.8 [style = solid, label="consumeRequest"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.14 [style = solid, label="consumerFuture"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.20 [style = solid, label="log"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="produceRequest"];
0.11 -> 0.12 [style = solid, label="produceClient"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.20 [style = solid, label="produceClient"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.15 [style = solid, label="producerFuture"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.19 [style = solid, label="consumeSocket"];
0.17 -> 0.18 [style = solid, label="produceSocket"];
0.17 -> 0.18 [style = bold, label=""];
0.17 -> 0.19 [style = solid, label="produceSocket"];
0.18 -> 0.19 [style = bold, label=""];
0.19 -> 0.20 [style = bold, label=""];
0.21 -> 0.0 [style = dotted, label="true"];
0.21 -> 0.0 [style = bold, label=""];
0.21 -> 0.1 [style = dotted, label="true"];
0.21 -> 0.2 [style = dotted, label="true"];
0.21 -> 0.3 [style = dotted, label="true"];
0.21 -> 0.4 [style = dotted, label="true"];
0.21 -> 0.5 [style = dotted, label="true"];
0.21 -> 0.6 [style = dotted, label="true"];
0.21 -> 0.7 [style = dotted, label="true"];
0.21 -> 0.8 [style = dotted, label="true"];
0.21 -> 0.9 [style = dotted, label="true"];
0.21 -> 0.10 [style = dotted, label="true"];
0.21 -> 0.11 [style = dotted, label="true"];
0.21 -> 0.12 [style = dotted, label="true"];
0.21 -> 0.13 [style = dotted, label="true"];
0.21 -> 0.14 [style = dotted, label="true"];
0.21 -> 0.15 [style = dotted, label="true"];
0.21 -> 0.16 [style = dotted, label="true"];
0.21 -> 0.17 [style = dotted, label="true"];
0.21 -> 0.18 [style = dotted, label="true"];
0.21 -> 0.19 [style = dotted, label="true"];
}
