digraph PDG {
label = "testWorkflowForkFailure <4...21>";
0.16 [style = filled, label = "Enter <4...21>", fillcolor = aquamarine, shape = diamond];
0.3 [style = filled, label = "Id.Program firstMRId = Program.from(appId,MAPREDUCE,FIRST_MAPREDUCE_NAME); <8>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "List<RunRecord> mapReduceProgramRuns = getProgramRuns(firstMRId,KILLED.name()); <17>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "verifyProgramRuns(workflowId,\"failed\"); <16>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "waitState(workflowId,STOPPED.name()); <15>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "mapReduceProgramRuns = getProgramRuns(secondMRId,FAILED.name()); <19>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "startProgram(workflowId,ImmutableMap.of(\"inputPath\",createInput(\"testWorkflowForkFailureInput\"),\"outputPath\",outputPath,\"sync.file\",fileToSync.getAbsolutePath(),\"wait.file\",fileToWait.getAbsolutePath(), ( ( ( \"mapreduce.\" + WorkflowFailureInForkApp.SECOND_MAPREDUCE_NAME )) + \".throw.exception\" ),\"true\")); <13>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "Id.Workflow workflowId = Workflow.from(appId,NAME); <7>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "String outputPath = new File(tmpFolder.newFolder(),\"output\").getAbsolutePath(); <10>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "Id.Application appId = Application.from(DEFAULT,NAME); <6>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Assert.assertEquals(1,mapReduceProgramRuns.size()); <18>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "Assert.assertEquals(200,deploy().getStatusLine().getStatusCode()); <5>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "File fileToSync = new File( ( tmpFolder.newFolder() + \"/sync.file\" )); <11>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "File fileToWait = new File( ( tmpFolder.newFolder() + \"/wait.file\" )); <12>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Id.Program secondMRId = Program.from(appId,MAPREDUCE,SECOND_MAPREDUCE_NAME); <9>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "waitState(workflowId,RUNNING.name()); <14>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "Assert.assertEquals(1,mapReduceProgramRuns.size()); <20>", fillcolor = deeppink, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = solid, label="appId"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="appId"];
0.1 -> 0.4 [style = solid, label="appId"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.8 [style = solid, label="workflowId"];
0.2 -> 0.9 [style = solid, label="workflowId"];
0.2 -> 0.10 [style = solid, label="workflowId"];
0.2 -> 0.11 [style = solid, label="workflowId"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.12 [style = solid, label="firstMRId"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.14 [style = solid, label="secondMRId"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.8 [style = solid, label="outputPath"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="fileToSync"];
0.7 -> 0.8 [style = solid, label="fileToWait"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = solid, label="mapReduceProgramRuns"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.15 [style = solid, label="mapReduceProgramRuns"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = solid, label="mapReduceProgramRuns"];
0.14 -> 0.15 [style = bold, label=""];
0.16 -> 0.0 [style = dotted, label="true"];
0.16 -> 0.0 [style = bold, label=""];
0.16 -> 0.1 [style = dotted, label="true"];
0.16 -> 0.2 [style = dotted, label="true"];
0.16 -> 0.3 [style = dotted, label="true"];
0.16 -> 0.4 [style = dotted, label="true"];
0.16 -> 0.5 [style = dotted, label="true"];
0.16 -> 0.6 [style = dotted, label="true"];
0.16 -> 0.7 [style = dotted, label="true"];
0.16 -> 0.8 [style = dotted, label="true"];
0.16 -> 0.9 [style = dotted, label="true"];
0.16 -> 0.10 [style = dotted, label="true"];
0.16 -> 0.11 [style = dotted, label="true"];
0.16 -> 0.12 [style = dotted, label="true"];
0.16 -> 0.13 [style = dotted, label="true"];
0.16 -> 0.14 [style = dotted, label="true"];
0.16 -> 0.15 [style = dotted, label="true"];
}
