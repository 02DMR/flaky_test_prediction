digraph PDG {
label = "testTimedMethod <3...21>";
0.4 [style = filled, label = "assertTrue( ( timer1.count() > 0 )); <12>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Timer timer2 = registry.get(\"foo\").tag(\"method\",\"anotherEverySecond\").tag(\"class\",\"io.quarkus.scheduler.test.metrics.MicrometerTimedTest$Jobs\").tag(\"exception\",\"none\").timer(); <13...17>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertNotNull(timer2); <18>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertTrue( ( timer2.count() > 0 )); <19>", fillcolor = deeppink, shape = ellipse];
0.8 [style = filled, label = "Enter <3...21>", fillcolor = aquamarine, shape = diamond];
0.2 [style = filled, label = "Timer timer1 = registry.get(\"scheduled.methods\").tag(\"method\",\"everySecond\").tag(\"class\",\"io.quarkus.scheduler.test.metrics.MicrometerTimedTest$Jobs\").tag(\"exception\",\"none\").timer(); <6...10>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "assertNotNull(timer1); <11>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "assertTrue(Jobs.latch01.await(5,TimeUnit.SECONDS)); <4>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "assertTrue(Jobs.latch02.await(5,TimeUnit.SECONDS)); <5>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = bold, label=""];
0.2 -> 0.3 [style = solid, label="timer1"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="timer1"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="timer2"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="timer2"];
0.6 -> 0.7 [style = bold, label=""];
0.8 -> 0.0 [style = dotted, label="true"];
0.8 -> 0.0 [style = bold, label=""];
0.8 -> 0.1 [style = dotted, label="true"];
0.8 -> 0.2 [style = dotted, label="true"];
0.8 -> 0.3 [style = dotted, label="true"];
0.8 -> 0.4 [style = dotted, label="true"];
0.8 -> 0.5 [style = dotted, label="true"];
0.8 -> 0.6 [style = dotted, label="true"];
0.8 -> 0.7 [style = dotted, label="true"];
}
