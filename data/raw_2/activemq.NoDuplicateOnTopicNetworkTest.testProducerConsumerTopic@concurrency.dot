digraph PDG {
label = "testProducerConsumerTopic <4...32>";
0.5 [style = filled, label = "LOG.info(\"Started Consumer\"); <10>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertTrue(\"consumer started eventually\",consumerStarted.await(10,TimeUnit.SECONDS)); <11>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "if map.containsKey(msg) <20>", fillcolor = white, shape = diamond];
0.11 [style = filled, label = "consumerThread.join(); <16>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final CountDownLatch consumerStarted = new CountDownLatch(1); <5>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "Thread consumerThread = new Thread(new Runnable()); <8>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "LOG.info( ( \"got duplicate: \" + msg )); <21>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "consumer.getMessageStrings() <19>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "consumerThread.start(); <9>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "assertEquals(\"no duplicates\",0,duplicateCount); <27>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "assertTrue(\"we got some duplicates\", ( duplicateCount > 0 )); <30>", fillcolor = deeppink, shape = ellipse];
0.10 [style = filled, label = "producerThread.join(); <15>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "Enter <4...32>", fillcolor = aquamarine, shape = diamond];
0.9 [style = filled, label = "LOG.info(\"Started Producer\"); <14>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "map.put(msg,msg); <24>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "producerThread.start(); <13>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "duplicateCount++; <22>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Thread.sleep(2000); <12>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "assertEquals( ( \"got all required messages: \" + map.size() ),consumer.getNumMessages(),map.size()); <28>", fillcolor = deeppink, shape = ellipse];
0.12 [style = filled, label = "int duplicateCount = 0; <17>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "if  ( suppressDuplicateTopicSubs || (dispatchPolicy instanceof PriorityNetworkDispatchPolicy) ) <26>", fillcolor = white, shape = diamond];
0.1 [style = filled, label = "Thread producerThread = new Thread(new Runnable()); <6>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Map<String,String> map = new HashMap<String,String>(); <18>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "String msg <19>", fillcolor = tomato, shape = box];
0.2 [style = filled, label = "final TopicWithDuplicateMessages consumer = new TopicWithDuplicateMessages(); <7>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.6 [style = solid, label="consumerStarted"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.8 [style = solid, label="producerThread"];
0.1 -> 0.10 [style = solid, label="producerThread"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.22 [style = solid, label="consumer"];
0.3 -> 0.4 [style = solid, label="consumerThread"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.11 [style = solid, label="consumerThread"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.11 [style = solid, label="consumerThread"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.10 [style = solid, label="producerThread"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.18 [style = solid, label="duplicateCount"];
0.12 -> 0.21 [style = solid, label="duplicateCount"];
0.12 -> 0.23 [style = solid, label="duplicateCount"];
0.13 -> 0.16 [style = solid, label="map"];
0.13 -> 0.16 [style = bold, label=""];
0.13 -> 0.19 [style = solid, label="map"];
0.13 -> 0.22 [style = solid, label="map"];
0.16 -> 0.16 [style = solid, label="map"];
0.16 -> 0.17 [style = dotted, label="true"];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.18 [style = dotted, label="true"];
0.16 -> 0.19 [style = solid, label="map"];
0.16 -> 0.19 [style = bold, label=""];
0.16 -> 0.22 [style = solid, label="map"];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.18 [style = solid, label="duplicateCount"];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.21 [style = solid, label="duplicateCount"];
0.18 -> 0.23 [style = solid, label="duplicateCount"];
0.19 -> 0.16 [style = solid, label="map"];
0.19 -> 0.16 [style = bold, label=""];
0.19 -> 0.19 [style = solid, label="map"];
0.19 -> 0.20 [style = bold, label=""];
0.19 -> 0.22 [style = solid, label="map"];
0.20 -> 0.21 [style = dotted, label="true"];
0.20 -> 0.21 [style = bold, label=""];
0.20 -> 0.22 [style = dotted, label="true"];
0.20 -> 0.23 [style = dotted, label="false"];
0.20 -> 0.23 [style = bold, label=""];
0.21 -> 0.22 [style = bold, label=""];
0.24 -> 0.0 [style = dotted, label="true"];
0.24 -> 0.0 [style = bold, label=""];
0.24 -> 0.1 [style = dotted, label="true"];
0.24 -> 0.2 [style = dotted, label="true"];
0.24 -> 0.3 [style = dotted, label="true"];
0.24 -> 0.4 [style = dotted, label="true"];
0.24 -> 0.5 [style = dotted, label="true"];
0.24 -> 0.6 [style = dotted, label="true"];
0.24 -> 0.7 [style = dotted, label="true"];
0.24 -> 0.8 [style = dotted, label="true"];
0.24 -> 0.9 [style = dotted, label="true"];
0.24 -> 0.10 [style = dotted, label="true"];
0.24 -> 0.11 [style = dotted, label="true"];
0.24 -> 0.12 [style = dotted, label="true"];
0.24 -> 0.13 [style = dotted, label="true"];
0.24 -> 0.14 [style = dotted, label="true"];
0.24 -> 0.15 [style = dotted, label="true"];
0.24 -> 0.16 [style = dotted, label="true"];
0.24 -> 0.19 [style = dotted, label="true"];
0.24 -> 0.20 [style = dotted, label="true"];
}
