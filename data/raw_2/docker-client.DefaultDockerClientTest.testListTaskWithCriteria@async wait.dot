digraph PDG {
label = "testListTaskWithCriteria <4...18>";
0.12 [style = filled, label = "assertThat(task.id(),isIn(taskIds)); <17>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "final List<Task> tasksWithServiceName = sut.listTasks(Task.find().serviceName(spec.name()).build()); <14>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "requireDockerApiVersionAtLeast(\"1.24\",\"swarm support\"); <5>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "assertThat(sut.listTasks().size(),is(0)); <7>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Enter <4...18>", fillcolor = aquamarine, shape = diamond];
0.8 [style = filled, label = "assertThat(tasksWithId.get(0),equalTo(task)); <13>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertThat(tasksWithId.size(),is(1)); <12>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "final ServiceSpec spec = createServiceSpec(randomName()); <6>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "final Task task = sut.listTasks().get(1); <10>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertThat(tasksWithServiceName.size(),is(greaterThanOrEqualTo(1))); <15>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "await().until(numberOfTasks(sut),is(greaterThan(0))); <9>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "final List<Task> tasksWithId = sut.listTasks(Task.find().taskId(task.id()).build()); <11>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "final Set<String> taskIds = Sets.newHashSet(Lists.transform(tasksWithServiceName,new Function<Task,String>())); <16>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "sut.createService(spec); <8>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="spec"];
0.1 -> 0.9 [style = solid, label="spec"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = solid, label="sut"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="sut"];
0.3 -> 0.6 [style = solid, label="sut"];
0.3 -> 0.9 [style = solid, label="sut"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="task"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.8 [style = solid, label="task"];
0.5 -> 0.12 [style = solid, label="task"];
0.6 -> 0.7 [style = solid, label="tasksWithId"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="tasksWithId"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = solid, label="tasksWithServiceName"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="tasksWithServiceName"];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="taskIds"];
0.11 -> 0.12 [style = bold, label=""];
0.13 -> 0.0 [style = dotted, label="true"];
0.13 -> 0.0 [style = bold, label=""];
0.13 -> 0.1 [style = dotted, label="true"];
0.13 -> 0.2 [style = dotted, label="true"];
0.13 -> 0.3 [style = dotted, label="true"];
0.13 -> 0.4 [style = dotted, label="true"];
0.13 -> 0.5 [style = dotted, label="true"];
0.13 -> 0.6 [style = dotted, label="true"];
0.13 -> 0.7 [style = dotted, label="true"];
0.13 -> 0.8 [style = dotted, label="true"];
0.13 -> 0.9 [style = dotted, label="true"];
0.13 -> 0.10 [style = dotted, label="true"];
0.13 -> 0.11 [style = dotted, label="true"];
0.13 -> 0.12 [style = dotted, label="true"];
}
