digraph PDG {
label = "testConduitBridge <3...17>";
0.1 [style = filled, label = "MessageConsumer consumer2 = remoteSession.createConsumer(included); <5>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = " ( i < MESSAGE_COUNT ) <9>", fillcolor = white, shape = diamond];
0.8 [style = filled, label = "Message test = localSession.createTextMessage( ( \"test-\" + i )); <10>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "producer.setDeliveryMode(NON_PERSISTENT); <7>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "assertNotNull(consumer1.receive(1000)); <12>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Thread.sleep(2000); <8>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "assertNull(consumer1.receive(1000)); <15>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "int i = 0 <9>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "assertNull(consumer2.receive(1000)); <16>", fillcolor = deeppink, shape = ellipse];
0.9 [style = filled, label = "producer.send(test); <11>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "MessageConsumer consumer1 = remoteSession.createConsumer(included); <4>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "Enter <3...17>", fillcolor = aquamarine, shape = diamond];
0.11 [style = filled, label = "assertNotNull(consumer2.receive(1000)); <13>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "MessageProducer producer = localSession.createProducer(included); <6>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "i++ <9>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.10 [style = solid, label="consumer1"];
0.0 -> 0.12 [style = solid, label="consumer1"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.11 [style = solid, label="consumer2"];
0.1 -> 0.13 [style = solid, label="consumer2"];
0.2 -> 0.3 [style = solid, label="producer"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.9 [style = solid, label="producer"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.9 [style = solid, label="producer"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="i"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="i"];
0.5 -> 0.8 [style = solid, label="i"];
0.6 -> 0.7 [style = dotted, label="true"];
0.6 -> 0.8 [style = dotted, label="true"];
0.6 -> 0.8 [style = bold, label=""];
0.6 -> 0.9 [style = dotted, label="true"];
0.6 -> 0.10 [style = dotted, label="true"];
0.6 -> 0.11 [style = dotted, label="true"];
0.6 -> 0.12 [style = bold, label=""];
0.7 -> 0.6 [style = solid, label="i"];
0.7 -> 0.6 [style = bold, label=""];
0.7 -> 0.7 [style = solid, label="i"];
0.7 -> 0.8 [style = solid, label="i"];
0.8 -> 0.9 [style = solid, label="test"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.9 [style = solid, label="producer"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.7 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.14 -> 0.0 [style = dotted, label="true"];
0.14 -> 0.0 [style = bold, label=""];
0.14 -> 0.1 [style = dotted, label="true"];
0.14 -> 0.2 [style = dotted, label="true"];
0.14 -> 0.3 [style = dotted, label="true"];
0.14 -> 0.4 [style = dotted, label="true"];
0.14 -> 0.5 [style = dotted, label="true"];
0.14 -> 0.6 [style = dotted, label="true"];
0.14 -> 0.12 [style = dotted, label="true"];
0.14 -> 0.13 [style = dotted, label="true"];
}
