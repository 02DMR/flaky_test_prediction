digraph PDG {
label = "testHFileLink <3...23>";
0.15 [style = filled, label = "while s.next() <19>", fillcolor = white, shape = diamond];
0.13 [style = filled, label = "HFileScanner s = hsf.createReader().getScanner(false,false); <17>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertTrue(hsf.isLink()); <15>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "assertEquals( ( ( ( ( ( LAST_CHAR - FIRST_CHAR )) + 1 )) * ( ( ( ( LAST_CHAR - FIRST_CHAR )) + 1 )) ),count); <22>", fillcolor = deeppink, shape = ellipse];
0.0 [style = filled, label = "final String columnFamily = \"f\"; <4>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "HRegionInfo hri = new HRegionInfo(Bytes.toBytes(\"table-link\")); <5>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "int count = 1; <16>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "count++; <20>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "writer.close(); <10>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "Enter <3...23>", fillcolor = aquamarine, shape = diamond];
0.5 [style = filled, label = "writeStoreFile(writer); <9>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "Path storedir = new Path(new Path(FSUtils.getRootDir(conf),new Path(hri.getTableNameAsString(),hri.getEncodedName())),columnFamily); <6>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "Path linkFilePath = new Path(dstPath,HFileLink.createHFileLinkName(hri,storeFilePath.getName())); <13>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "HFileLink.create(conf,this.fs,dstPath,hri,storeFilePath.getName()); <12>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "StoreFile hsf = new StoreFile(this.fs,linkFilePath,conf,cacheConf,BloomType.NONE,NoOpDataBlockEncoder.INSTANCE); <14>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "StoreFile.Writer writer = new StoreFile.WriterBuilder(conf,cacheConf,this.fs, ( 8 * 1024 )).withOutputDir(storedir).build(); <7>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "s.seekTo(); <18>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Path storeFilePath = writer.getPath(); <8>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Path dstPath = new Path(FSUtils.getRootDir(conf),new Path(\"test-region\",columnFamily)); <11>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="columnFamily"];
0.0 -> 0.7 [style = solid, label="columnFamily"];
0.1 -> 0.2 [style = solid, label="hri"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.8 [style = solid, label="hri"];
0.1 -> 0.9 [style = solid, label="hri"];
0.2 -> 0.3 [style = solid, label="storedir"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = solid, label="writer"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="writer"];
0.3 -> 0.6 [style = solid, label="writer"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.8 [style = solid, label="storeFilePath"];
0.4 -> 0.9 [style = solid, label="storeFilePath"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="dstPath"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="dstPath"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = solid, label="linkFilePath"];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="hsf"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.13 [style = solid, label="hsf"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.16 [style = solid, label="count"];
0.12 -> 0.17 [style = solid, label="count"];
0.13 -> 0.14 [style = solid, label="s"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.15 [style = solid, label="s"];
0.14 -> 0.15 [style = solid, label="s"];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.15 [style = solid, label="s"];
0.15 -> 0.16 [style = dotted, label="true"];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.17 [style = bold, label=""];
0.16 -> 0.15 [style = bold, label=""];
0.16 -> 0.16 [style = solid, label="count"];
0.16 -> 0.17 [style = solid, label="count"];
0.18 -> 0.0 [style = dotted, label="true"];
0.18 -> 0.0 [style = bold, label=""];
0.18 -> 0.1 [style = dotted, label="true"];
0.18 -> 0.2 [style = dotted, label="true"];
0.18 -> 0.3 [style = dotted, label="true"];
0.18 -> 0.4 [style = dotted, label="true"];
0.18 -> 0.5 [style = dotted, label="true"];
0.18 -> 0.6 [style = dotted, label="true"];
0.18 -> 0.7 [style = dotted, label="true"];
0.18 -> 0.8 [style = dotted, label="true"];
0.18 -> 0.9 [style = dotted, label="true"];
0.18 -> 0.10 [style = dotted, label="true"];
0.18 -> 0.11 [style = dotted, label="true"];
0.18 -> 0.12 [style = dotted, label="true"];
0.18 -> 0.13 [style = dotted, label="true"];
0.18 -> 0.14 [style = dotted, label="true"];
0.18 -> 0.15 [style = dotted, label="true"];
0.18 -> 0.17 [style = dotted, label="true"];
}
