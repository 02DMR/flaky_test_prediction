digraph PDG {
label = "serializeWithTruncateArrayTest <3...17>";
0.1 [style = filled, label = "ctx.put(UNCOVERED_INTERVALS,Arrays.asList(interval(1),interval(2),interval(3),interval(4),interval(5),interval(6))); <5>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "final DefaultObjectMapper objectMapper = new DefaultObjectMapper(); <7>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "ctx.put(EXTN_STRING_KEY,Strings.repeat(\"x\", ( INTERVAL_LEN * 7 ))); <6>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "final ResponseContext.SerializationResult res2 = ctx.serializeWith(objectMapper,maxLen); <12>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Enter <3...17>", fillcolor = aquamarine, shape = diamond];
0.7 [style = filled, label = "final int maxLen =  ( ( ( ( ( ( ( ( ( INTERVAL_LEN * 4 )) + UNCOVERED_INTERVALS.getName().length() )) + 4 )) + TRUNCATED.getName().length() )) + 6 ); <11>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Assert.assertEquals(fullString,res1.getResult()); <10>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "final ResponseContext ctxCopy = ResponseContext.createEmpty(); <13>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final ResponseContext ctx = ResponseContext.createEmpty(); <4>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "final String fullString = objectMapper.writeValueAsString(ctx.getDelegate()); <8>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "final ResponseContext.SerializationResult res1 = ctx.serializeWith(objectMapper,Integer.MAX_VALUE); <9>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "ctxCopy.put(UNCOVERED_INTERVALS,Arrays.asList(interval(1),interval(2),interval(3))); <14>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Assert.assertEquals(ctxCopy.getDelegate(),deserializeContext(res2.getResult(),objectMapper)); <16>", fillcolor = deeppink, shape = ellipse];
0.11 [style = filled, label = "ctxCopy.put(TRUNCATED,true); <15>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="ctx"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="ctx"];
0.0 -> 0.4 [style = solid, label="ctx"];
0.0 -> 0.5 [style = solid, label="ctx"];
0.0 -> 0.8 [style = solid, label="ctx"];
0.1 -> 0.2 [style = solid, label="ctx"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.4 [style = solid, label="ctx"];
0.1 -> 0.5 [style = solid, label="ctx"];
0.1 -> 0.8 [style = solid, label="ctx"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="ctx"];
0.2 -> 0.5 [style = solid, label="ctx"];
0.2 -> 0.8 [style = solid, label="ctx"];
0.3 -> 0.4 [style = solid, label="objectMapper"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="objectMapper"];
0.3 -> 0.8 [style = solid, label="objectMapper"];
0.3 -> 0.12 [style = solid, label="objectMapper"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.6 [style = solid, label="fullString"];
0.5 -> 0.6 [style = solid, label="res1"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="maxLen"];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.8 -> 0.12 [style = solid, label="res2"];
0.9 -> 0.10 [style = solid, label="ctxCopy"];
0.9 -> 0.10 [style = bold, label=""];
0.9 -> 0.11 [style = solid, label="ctxCopy"];
0.9 -> 0.12 [style = solid, label="ctxCopy"];
0.10 -> 0.11 [style = solid, label="ctxCopy"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="ctxCopy"];
0.11 -> 0.12 [style = solid, label="ctxCopy"];
0.11 -> 0.12 [style = bold, label=""];
0.13 -> 0.0 [style = dotted, label="true"];
0.13 -> 0.0 [style = bold, label=""];
0.13 -> 0.1 [style = dotted, label="true"];
0.13 -> 0.2 [style = dotted, label="true"];
0.13 -> 0.3 [style = dotted, label="true"];
0.13 -> 0.4 [style = dotted, label="true"];
0.13 -> 0.5 [style = dotted, label="true"];
0.13 -> 0.6 [style = dotted, label="true"];
0.13 -> 0.7 [style = dotted, label="true"];
0.13 -> 0.8 [style = dotted, label="true"];
0.13 -> 0.9 [style = dotted, label="true"];
0.13 -> 0.10 [style = dotted, label="true"];
0.13 -> 0.11 [style = dotted, label="true"];
0.13 -> 0.12 [style = dotted, label="true"];
}
