digraph PDG {
label = "testContinuousScheduling <3...24>";
0.10 [style = filled, label = "ApplicationAttemptId appAttemptId = createAppAttemptId(this.APP_ID++,this.ATTEMPT_ID++); <14>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "ResourceRequest request = createResourceRequest(1024,1,ANY,1,1,true); <17>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "NodeAddedSchedulerEvent nodeEvent1 = new NodeAddedSchedulerEvent(node1); <10>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "ask.add(request); <18>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "FairScheduler fs = new FairScheduler(); <4>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "Assert.assertEquals(1024,consumption.getMemory()); <22>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "fs.allocate(appAttemptId,ask,new ArrayList<ContainerId>(),null,null); <19>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "Assert.assertEquals(1,consumption.getVirtualCores()); <23>", fillcolor = deeppink, shape = ellipse];
0.20 [style = filled, label = "Enter <3...24>", fillcolor = aquamarine, shape = diamond];
0.11 [style = filled, label = "fs.addApplication(appAttemptId,\"queue11\",\"user11\"); <15>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "RMNode node1 = MockNodes.newNodeInfo(1,Resources.createResource( ( 8 * 1024 ),8),1,\"127.0.0.1\"); <9>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "Assert.assertTrue(\"Continuous scheduling should be enabled.\",fs.isContinuousSchedulingEnabled()); <8>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "Configuration conf = createConfiguration(); <5>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "fs.handle(nodeEvent1); <11>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "Thread.sleep( ( fs.getConf().getContinuousSchedulingSleepMs() + 500 )); <20>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "fs.reinitialize(conf,resourceManager.getRMContext()); <7>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "conf.setBoolean(CONTINUOUS_SCHEDULING_ENABLED,true); <6>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Assert.assertEquals(fs.getClusterCapacity().getMemory(), ( 8 * 1024 )); <12>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "Assert.assertEquals(fs.getClusterCapacity().getVirtualCores(),8); <13>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "List<ResourceRequest> ask = new ArrayList<ResourceRequest>(); <16>", fillcolor = white, shape = ellipse];
0.17 [style = filled, label = "Resource consumption = fs.applications.get(appAttemptId).getCurrentConsumption(); <21>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.3 [style = solid, label="fs"];
0.0 -> 0.4 [style = solid, label="fs"];
0.0 -> 0.7 [style = solid, label="fs"];
0.0 -> 0.8 [style = solid, label="fs"];
0.0 -> 0.9 [style = solid, label="fs"];
0.0 -> 0.11 [style = solid, label="fs"];
0.0 -> 0.15 [style = solid, label="fs"];
0.0 -> 0.16 [style = solid, label="fs"];
0.1 -> 0.2 [style = solid, label="conf"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.3 [style = solid, label="conf"];
0.2 -> 0.3 [style = solid, label="conf"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = solid, label="fs"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.7 [style = solid, label="fs"];
0.3 -> 0.8 [style = solid, label="fs"];
0.3 -> 0.9 [style = solid, label="fs"];
0.3 -> 0.11 [style = solid, label="fs"];
0.3 -> 0.15 [style = solid, label="fs"];
0.3 -> 0.16 [style = solid, label="fs"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = solid, label="node1"];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = solid, label="nodeEvent1"];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = solid, label="fs"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = solid, label="fs"];
0.7 -> 0.11 [style = solid, label="fs"];
0.7 -> 0.15 [style = solid, label="fs"];
0.7 -> 0.16 [style = solid, label="fs"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="appAttemptId"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.15 [style = solid, label="appAttemptId"];
0.10 -> 0.17 [style = solid, label="appAttemptId"];
0.11 -> 0.12 [style = bold, label=""];
0.11 -> 0.15 [style = solid, label="fs"];
0.11 -> 0.16 [style = solid, label="fs"];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.14 [style = solid, label="ask"];
0.12 -> 0.15 [style = solid, label="ask"];
0.13 -> 0.14 [style = solid, label="request"];
0.13 -> 0.14 [style = bold, label=""];
0.14 -> 0.15 [style = solid, label="ask"];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = solid, label="fs"];
0.15 -> 0.16 [style = bold, label=""];
0.16 -> 0.17 [style = bold, label=""];
0.17 -> 0.18 [style = solid, label="consumption"];
0.17 -> 0.18 [style = bold, label=""];
0.17 -> 0.19 [style = solid, label="consumption"];
0.18 -> 0.19 [style = bold, label=""];
0.20 -> 0.0 [style = dotted, label="true"];
0.20 -> 0.0 [style = bold, label=""];
0.20 -> 0.1 [style = dotted, label="true"];
0.20 -> 0.2 [style = dotted, label="true"];
0.20 -> 0.3 [style = dotted, label="true"];
0.20 -> 0.4 [style = dotted, label="true"];
0.20 -> 0.5 [style = dotted, label="true"];
0.20 -> 0.6 [style = dotted, label="true"];
0.20 -> 0.7 [style = dotted, label="true"];
0.20 -> 0.8 [style = dotted, label="true"];
0.20 -> 0.9 [style = dotted, label="true"];
0.20 -> 0.10 [style = dotted, label="true"];
0.20 -> 0.11 [style = dotted, label="true"];
0.20 -> 0.12 [style = dotted, label="true"];
0.20 -> 0.13 [style = dotted, label="true"];
0.20 -> 0.14 [style = dotted, label="true"];
0.20 -> 0.15 [style = dotted, label="true"];
0.20 -> 0.16 [style = dotted, label="true"];
0.20 -> 0.17 [style = dotted, label="true"];
0.20 -> 0.18 [style = dotted, label="true"];
0.20 -> 0.19 [style = dotted, label="true"];
}
