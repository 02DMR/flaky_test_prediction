digraph PDG {
label = "shouldCompleteLogWhenCancelledByClient <4...18>";
0.5 [style = filled, label = "factory.close(); <9>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "assertThat(log.responseCause()).isInstanceOf().hasMessageContaining(\"received a RST_STREAM frame: CANCEL\"); <12>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertThatThrownBy(null).isInstanceOf().hasCauseInstanceOf(); <13>", fillcolor = deeppink, shape = ellipse];
0.10 [style = filled, label = "assertThat(log.responseCause()).isInstanceOf(); <15>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "assertThatThrownBy(null).isInstanceOf().hasCauseInstanceOf(); <16>", fillcolor = deeppink, shape = ellipse];
0.4 [style = filled, label = "await().untilAtomic(ctxRef,Matchers.notNullValue()); <8>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "final CompletableFuture<AggregatedHttpResponse> responseFuture = client.get(\"/reset\").aggregate(); <7>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "final WebClient client = WebClient.builder(server.uri(protocol)).factory(factory).build(); <6>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "final RequestLog log = ctxRef.get().log().whenComplete().join(); <10>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "if protocol.isMultiplex() <11>", fillcolor = white, shape = diamond];
0.0 [style = filled, label = "SessionProtocol protocol <4>", fillcolor = tomato, shape = box];
0.12 [style = filled, label = "Enter <4...18>", fillcolor = aquamarine, shape = diamond];
0.1 [style = filled, label = "final ClientFactory factory = ClientFactory.builder().build(); <5>", fillcolor = white, shape = ellipse];
0.0 -> 0.2 [style = solid, label="protocol"];
0.0 -> 0.7 [style = solid, label="protocol"];
0.1 -> 0.2 [style = solid, label="factory"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="factory"];
0.2 -> 0.3 [style = solid, label="client"];
0.2 -> 0.3 [style = bold, label=""];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="log"];
0.6 -> 0.10 [style = solid, label="log"];
0.7 -> 0.8 [style = dotted, label="true"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.9 [style = dotted, label="true"];
0.7 -> 0.10 [style = dotted, label="false"];
0.7 -> 0.10 [style = bold, label=""];
0.7 -> 0.11 [style = dotted, label="false"];
0.8 -> 0.9 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.12 -> 0.0 [style = solid, label="protocol"];
0.12 -> 0.1 [style = dotted, label="true"];
0.12 -> 0.1 [style = bold, label=""];
0.12 -> 0.2 [style = dotted, label="true"];
0.12 -> 0.3 [style = dotted, label="true"];
0.12 -> 0.4 [style = dotted, label="true"];
0.12 -> 0.5 [style = dotted, label="true"];
0.12 -> 0.6 [style = dotted, label="true"];
0.12 -> 0.7 [style = dotted, label="true"];
}
