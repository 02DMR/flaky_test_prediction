digraph PDG {
label = "testClientHang <2...23>";
0.1 [style = filled, label = "clientTransport.setTransportListener(new TransportListener(){
public void onCommand (Object command  ) {
clientReceiveCount.incrementAndGet();
if ( ( clientRunOnCommand != null )) {
clientRunOnCommand.run();
}
}}); <4...11>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "clientTransport.start(); <12>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "assertEquals(0,clientErrorCount.get()); <21>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "info.setMaxInactivityDuration(1000); <14>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "clientTransport.oneway(info); <15>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "WireFormatInfo info = new WireFormatInfo(); <13>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "Thread.sleep(3000); <19>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "assertEquals(0,clientErrorCount.get()); <18>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "Enter <2...23>", fillcolor = aquamarine, shape = diamond];
0.10 [style = filled, label = "assertTrue( ( serverErrorCount.get() > 0 )); <22>", fillcolor = deeppink, shape = ellipse];
0.0 [style = filled, label = "clientTransport = new TcpTransport(new OpenWireFormat(),SocketFactory.getDefault(),new URI(\"tcp://localhost:61616\"),null); <3>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "assertEquals(0,serverErrorCount.get()); <17>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="clientTransport"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.2 [style = solid, label="clientTransport"];
0.0 -> 0.5 [style = solid, label="clientTransport"];
0.1 -> 0.2 [style = solid, label="clientTransport"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.5 [style = solid, label="clientTransport"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.5 [style = solid, label="clientTransport"];
0.3 -> 0.4 [style = solid, label="info"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.5 [style = solid, label="info"];
0.4 -> 0.5 [style = solid, label="info"];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.11 -> 0.0 [style = dotted, label="true"];
0.11 -> 0.0 [style = bold, label=""];
0.11 -> 0.1 [style = dotted, label="true"];
0.11 -> 0.2 [style = dotted, label="true"];
0.11 -> 0.3 [style = dotted, label="true"];
0.11 -> 0.4 [style = dotted, label="true"];
0.11 -> 0.5 [style = dotted, label="true"];
0.11 -> 0.6 [style = dotted, label="true"];
0.11 -> 0.7 [style = dotted, label="true"];
0.11 -> 0.8 [style = dotted, label="true"];
0.11 -> 0.9 [style = dotted, label="true"];
0.11 -> 0.10 [style = dotted, label="true"];
}
