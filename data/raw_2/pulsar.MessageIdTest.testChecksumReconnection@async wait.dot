digraph PDG {
label = "testChecksumReconnection <3...37>";
0.17 [style = filled, label = "((TypedMessageBuilderImpl<byte[]>)(msg2)).getContent().put( ( a2.length - 1 ),((byte)('3'))); <21>", fillcolor = white, shape = ellipse];
0.31 [style = filled, label = "Enter <3...37>", fillcolor = aquamarine, shape = diamond];
0.2 [style = filled, label = "ProducerImpl<byte[]> producer = spy(prod); <6>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "((PulsarClientImpl)(pulsarClient)).timer().stop(); <13>", fillcolor = white, shape = ellipse];
0.15 [style = filled, label = "TypedMessageBuilder<byte[]> msg2 = producer.newMessage().value(a2); <19>", fillcolor = white, shape = ellipse];
0.16 [style = filled, label = "CompletableFuture<MessageId> future2 = msg2.sendAsync(); <20>", fillcolor = white, shape = ellipse];
0.25 [style = filled, label = "fail(\"Broker shouldn't verify checksum for corrupted message and it shouldn't fail\"); <30>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "doAnswer(null).when(producer).getState(); <8>", fillcolor = white, shape = ellipse];
0.21 [style = filled, label = "future1.get(10,TimeUnit.SECONDS); <26>", fillcolor = white, shape = ellipse];
0.24 [style = filled, label = "e.printStackTrace(); <29>", fillcolor = white, shape = ellipse];
0.27 [style = filled, label = "Message<byte[]> msg = consumer.receive(1,TimeUnit.SECONDS); <33>", fillcolor = white, shape = ellipse];
0.22 [style = filled, label = "future2.get(10,TimeUnit.SECONDS); <27>", fillcolor = white, shape = ellipse];
0.23 [style = filled, label = "catch ( Exception e ) <28>", fillcolor = white, shape = diamond];
0.28 [style = filled, label = "assertEquals(new String(msg.getData()),\"message-1\"); <34>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "ProducerImpl<byte[]> prod = ((ProducerImpl<byte[]>)(pulsarClient.newProducer().topic(topicName).enableBatching(false).messageRoutingMode(SinglePartition).create())); <5>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "CompletableFuture<MessageId> future1 = producer.sendAsync(\"message-1\".getBytes()); <17>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "doAnswer(null).when(producer).getClientCnx(); <9>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final String topicName = \"persistent\"; <4>", fillcolor = white, shape = ellipse];
0.30 [style = filled, label = "assertEquals(new String(msg.getData()),\"message-3\"); <36>", fillcolor = deeppink, shape = ellipse];
0.8 [style = filled, label = "stopBroker(); <12>", fillcolor = white, shape = ellipse];
0.26 [style = filled, label = "((ConsumerImpl<byte[]>)(consumer)).grabCnx(); <32>", fillcolor = white, shape = ellipse];
0.18 [style = filled, label = "prod.setClientCnx(null); <22>", fillcolor = white, shape = ellipse];
0.14 [style = filled, label = "byte[] a2 = \"message-2\".getBytes(); <18>", fillcolor = white, shape = ellipse];
0.3 [style = filled, label = "doReturn( ( producer.brokerChecksumSupportedVersion() + 1 )).when(producer).brokerChecksumSupportedVersion(); <7>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "ClientCnx mockClientCnx = spy(new ClientCnx(new ClientConfigurationData(),((PulsarClientImpl)(pulsarClient)).eventLoopGroup())); <14>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "prod.setClientCnx(mockClientCnx); <16>", fillcolor = white, shape = ellipse];
0.7 [style = filled, label = "Consumer<byte[]> consumer = pulsarClient.newConsumer().topic(topicName).subscriptionName(\"my-sub\").subscribe(); <11>", fillcolor = white, shape = ellipse];
0.20 [style = filled, label = "prod.grabCnx(); <24>", fillcolor = white, shape = ellipse];
0.29 [style = filled, label = "msg = consumer.receive(1,TimeUnit.SECONDS); <35>", fillcolor = white, shape = ellipse];
0.19 [style = filled, label = "startBroker(); <23>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "doReturn( ( producer.brokerChecksumSupportedVersion() - 1 )).when(mockClientCnx).getRemoteEndpointProtocolVersion(); <15>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "doAnswer(null).when(producer).cnx(); <10>", fillcolor = white, shape = ellipse];
0.0 -> 0.1 [style = solid, label="topicName"];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.7 [style = solid, label="topicName"];
0.1 -> 0.2 [style = solid, label="prod"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.12 [style = solid, label="prod"];
0.1 -> 0.18 [style = solid, label="prod"];
0.1 -> 0.20 [style = solid, label="prod"];
0.2 -> 0.3 [style = solid, label="producer"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.4 [style = solid, label="producer"];
0.2 -> 0.5 [style = solid, label="producer"];
0.2 -> 0.6 [style = solid, label="producer"];
0.2 -> 0.11 [style = solid, label="producer"];
0.2 -> 0.13 [style = solid, label="producer"];
0.2 -> 0.15 [style = solid, label="producer"];
0.3 -> 0.4 [style = bold, label=""];
0.4 -> 0.5 [style = bold, label=""];
0.5 -> 0.6 [style = bold, label=""];
0.6 -> 0.7 [style = bold, label=""];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.26 [style = solid, label="consumer"];
0.7 -> 0.27 [style = solid, label="consumer"];
0.7 -> 0.29 [style = solid, label="consumer"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = solid, label="mockClientCnx"];
0.10 -> 0.11 [style = bold, label=""];
0.10 -> 0.12 [style = solid, label="mockClientCnx"];
0.11 -> 0.12 [style = bold, label=""];
0.12 -> 0.13 [style = bold, label=""];
0.12 -> 0.18 [style = solid, label="prod"];
0.12 -> 0.20 [style = solid, label="prod"];
0.13 -> 0.14 [style = bold, label=""];
0.13 -> 0.21 [style = solid, label="future1"];
0.14 -> 0.15 [style = solid, label="a2"];
0.14 -> 0.15 [style = bold, label=""];
0.15 -> 0.16 [style = solid, label="msg2"];
0.15 -> 0.16 [style = bold, label=""];
0.15 -> 0.17 [style = solid, label="msg2"];
0.16 -> 0.17 [style = bold, label=""];
0.16 -> 0.22 [style = solid, label="future2"];
0.17 -> 0.18 [style = bold, label=""];
0.18 -> 0.19 [style = bold, label=""];
0.18 -> 0.20 [style = solid, label="prod"];
0.19 -> 0.20 [style = bold, label=""];
0.20 -> 0.21 [style = bold, label=""];
0.21 -> 0.22 [style = bold, label=""];
0.22 -> 0.26 [style = bold, label=""];
0.23 -> 0.24 [style = dotted, label="true"];
0.23 -> 0.24 [style = bold, label=""];
0.23 -> 0.25 [style = dotted, label="true"];
0.24 -> 0.25 [style = bold, label=""];
0.25 -> 0.26 [style = bold, label=""];
0.26 -> 0.27 [style = bold, label=""];
0.27 -> 0.28 [style = solid, label="msg"];
0.27 -> 0.28 [style = bold, label=""];
0.27 -> 0.30 [style = solid, label="msg"];
0.28 -> 0.29 [style = bold, label=""];
0.29 -> 0.30 [style = solid, label="msg"];
0.29 -> 0.30 [style = bold, label=""];
0.31 -> 0.0 [style = dotted, label="true"];
0.31 -> 0.0 [style = bold, label=""];
0.31 -> 0.1 [style = dotted, label="true"];
0.31 -> 0.2 [style = dotted, label="true"];
0.31 -> 0.3 [style = dotted, label="true"];
0.31 -> 0.4 [style = dotted, label="true"];
0.31 -> 0.5 [style = dotted, label="true"];
0.31 -> 0.6 [style = dotted, label="true"];
0.31 -> 0.7 [style = dotted, label="true"];
0.31 -> 0.8 [style = dotted, label="true"];
0.31 -> 0.9 [style = dotted, label="true"];
0.31 -> 0.10 [style = dotted, label="true"];
0.31 -> 0.11 [style = dotted, label="true"];
0.31 -> 0.12 [style = dotted, label="true"];
0.31 -> 0.13 [style = dotted, label="true"];
0.31 -> 0.14 [style = dotted, label="true"];
0.31 -> 0.15 [style = dotted, label="true"];
0.31 -> 0.16 [style = dotted, label="true"];
0.31 -> 0.17 [style = dotted, label="true"];
0.31 -> 0.18 [style = dotted, label="true"];
0.31 -> 0.19 [style = dotted, label="true"];
0.31 -> 0.20 [style = dotted, label="true"];
0.31 -> 0.21 [style = dotted, label="true"];
0.31 -> 0.22 [style = dotted, label="true"];
0.31 -> 0.26 [style = dotted, label="true"];
0.31 -> 0.27 [style = dotted, label="true"];
0.31 -> 0.28 [style = dotted, label="true"];
0.31 -> 0.29 [style = dotted, label="true"];
0.31 -> 0.30 [style = dotted, label="true"];
}
