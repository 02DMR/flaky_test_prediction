digraph PDG {
label = "testBytes <3...33>";
0.3 [style = filled, label = "final long input = 100; <7>", fillcolor = white, shape = ellipse];
0.8 [style = filled, label = "getter.start(); <28>", fillcolor = white, shape = ellipse];
0.10 [style = filled, label = "adder.join(); <30>", fillcolor = white, shape = ellipse];
0.2 [style = filled, label = "final LongAdder longAdder = new LongAdder(); <6>", fillcolor = white, shape = ellipse];
0.1 [style = filled, label = "final Metrics metrics = new Metrics(); <5>", fillcolor = white, shape = ellipse];
0.11 [style = filled, label = "longAdder.add(metrics.bytesThenReset()); <31>", fillcolor = white, shape = ellipse];
0.12 [style = filled, label = "Assertions.assertEquals( ( loopCount * input ),longAdder.sum()); <32>", fillcolor = deeppink, shape = ellipse];
0.7 [style = filled, label = "adder.start(); <27>", fillcolor = white, shape = ellipse];
0.0 [style = filled, label = "final CountDownLatch countDownLatch = new CountDownLatch(1); <4>", fillcolor = white, shape = ellipse];
0.4 [style = filled, label = "final int loopCount = 10000; <8>", fillcolor = white, shape = ellipse];
0.9 [style = filled, label = "countDownLatch.countDown(); <29>", fillcolor = white, shape = ellipse];
0.5 [style = filled, label = "Thread adder = new Thread(null); <9...17>", fillcolor = white, shape = ellipse];
0.6 [style = filled, label = "Thread getter = new Thread(null); <18...26>", fillcolor = white, shape = ellipse];
0.13 [style = filled, label = "Enter <3...33>", fillcolor = aquamarine, shape = diamond];
0.0 -> 0.1 [style = bold, label=""];
0.0 -> 0.9 [style = solid, label="countDownLatch"];
0.1 -> 0.2 [style = bold, label=""];
0.1 -> 0.11 [style = solid, label="metrics"];
0.2 -> 0.3 [style = bold, label=""];
0.2 -> 0.11 [style = solid, label="longAdder"];
0.2 -> 0.12 [style = solid, label="longAdder"];
0.3 -> 0.4 [style = bold, label=""];
0.3 -> 0.12 [style = solid, label="input"];
0.4 -> 0.5 [style = bold, label=""];
0.4 -> 0.12 [style = solid, label="loopCount"];
0.5 -> 0.6 [style = bold, label=""];
0.5 -> 0.7 [style = solid, label="adder"];
0.5 -> 0.10 [style = solid, label="adder"];
0.6 -> 0.7 [style = bold, label=""];
0.6 -> 0.8 [style = solid, label="getter"];
0.7 -> 0.8 [style = bold, label=""];
0.7 -> 0.10 [style = solid, label="adder"];
0.8 -> 0.9 [style = bold, label=""];
0.9 -> 0.10 [style = bold, label=""];
0.10 -> 0.11 [style = bold, label=""];
0.11 -> 0.12 [style = solid, label="longAdder"];
0.11 -> 0.12 [style = bold, label=""];
0.13 -> 0.0 [style = dotted, label="true"];
0.13 -> 0.0 [style = bold, label=""];
0.13 -> 0.1 [style = dotted, label="true"];
0.13 -> 0.2 [style = dotted, label="true"];
0.13 -> 0.3 [style = dotted, label="true"];
0.13 -> 0.4 [style = dotted, label="true"];
0.13 -> 0.5 [style = dotted, label="true"];
0.13 -> 0.6 [style = dotted, label="true"];
0.13 -> 0.7 [style = dotted, label="true"];
0.13 -> 0.8 [style = dotted, label="true"];
0.13 -> 0.9 [style = dotted, label="true"];
0.13 -> 0.10 [style = dotted, label="true"];
0.13 -> 0.11 [style = dotted, label="true"];
0.13 -> 0.12 [style = dotted, label="true"];
}
